(* Content-type: application/vnd.wolfram.mathematica *)

(*** Wolfram Notebook File ***)
(* http://www.wolfram.com/nb *)

(* CreatedBy='Mathematica 11.3' *)

(*CacheID: 234*)
(* Internal cache information:
NotebookFileLineBreakTest
NotebookFileLineBreakTest
NotebookDataPosition[       158,          7]
NotebookDataLength[    365759,       6989]
NotebookOptionsPosition[    363230,       6934]
NotebookOutlinePosition[    363572,       6949]
CellTagsIndexPosition[    363529,       6946]
WindowFrame->Normal*)

(* Beginning of Notebook Content *)
Notebook[{
Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{"GetPlotRange", "::", "usage"}], "=", 
   "\"\<GetPlotRange[gr] returns the actual unpadded plot range of graphics \
gr. GetPlotRange[gr, True] returns the actual padded plot range of gr. \
GetPlotRange can handle Graphics, Graphics3D and Graph objects.\>\""}], 
  ";"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"GetPlotRange", "[", 
    RowBox[{
     RowBox[{"_", "[", 
      RowBox[{
       RowBox[{"gr", ":", 
        RowBox[{"(", 
         RowBox[{
         "_Graphics", "|", "_Graphics3D", "|", "_Graph", "|", 
          "_GeoGraphics"}], ")"}]}], ",", "___"}], "]"}], ",", "pad_"}], 
    "]"}], ":=", 
   RowBox[{"GetPlotRange", "[", 
    RowBox[{"gr", ",", "pad"}], "]"}]}], ";", 
  RowBox[{"(*", 
   RowBox[{"Handle", " ", 
    RowBox[{"Legended", "[", "\[Ellipsis]", "]"}], " ", "and", " ", 
    RowBox[{"similar", "."}]}], "*)"}], 
  RowBox[{
   RowBox[{"GetPlotRange", "[", 
    RowBox[{"gr_GeoGraphics", ",", "False"}], "]"}], ":=", 
   RowBox[{"(", 
    RowBox[{"PlotRange", "/.", 
     RowBox[{"Quiet", "@", 
      RowBox[{"AbsoluteOptions", "@", "gr"}]}]}], ")"}]}], ";", 
  RowBox[{"(*", 
   RowBox[{"TODO", ":", 
    RowBox[{"does", " ", "not", " ", "handle", " ", 
     RowBox[{"PlotRangePadding", "."}]}]}], "*)"}], 
  RowBox[{
   RowBox[{"GetPlotRange", "[", 
    RowBox[{"gr_Graph", ",", 
     RowBox[{"pad_:", " ", "False"}]}], "]"}], ":=", 
   RowBox[{"Charting`get2DPlotRange", "[", 
    RowBox[{"gr", ",", "pad"}], "]"}]}], ";"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"GetPlotRange", "[", 
     RowBox[{
      RowBox[{"gr", ":", 
       RowBox[{"(", 
        RowBox[{"_Graphics", "|", "_Graphics3D"}], ")"}]}], ",", 
      RowBox[{"pad_:", " ", "False"}]}], "]"}], ":=", 
    RowBox[{"Module", "[", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{"r", "=", 
        RowBox[{"PlotRange", "/.", 
         RowBox[{"Options", "@", "gr"}]}]}], "}"}], ",", 
      RowBox[{"If", "[", 
       RowBox[{
        RowBox[{"MatrixQ", "[", 
         RowBox[{"r", ",", "NumericQ"}], "]"}], ",", 
        RowBox[{"(*", 
         RowBox[{"TODO", ":", 
          RowBox[{
          "does", " ", "not", " ", "handle", " ", "PlotRangePadding"}]}], 
         "*)"}], "r", ",", 
        RowBox[{"Last", "@", 
         RowBox[{"Last", "@", 
          RowBox[{"Reap", "@", 
           RowBox[{"Rasterize", "[", 
            RowBox[{
             RowBox[{"Show", "[", 
              RowBox[{"gr", ",", 
               RowBox[{"If", "[", 
                RowBox[{
                 RowBox[{"pad", "===", "False"}], ",", 
                 RowBox[{"PlotRangePadding", "\[Rule]", "None"}], ",", 
                 RowBox[{"{", "}"}]}], "]"}], ",", 
               RowBox[{"Axes", "\[Rule]", "True"}], ",", 
               RowBox[{"Frame", "\[Rule]", "False"}], ",", 
               RowBox[{"Ticks", "\[Rule]", 
                RowBox[{"(", 
                 RowBox[{
                  RowBox[{"(", 
                   RowBox[{
                    RowBox[{"Sow", "@", 
                    RowBox[{"{", "##", "}"}]}], ";", "Automatic"}], ")"}], 
                  "&"}], ")"}]}], ",", 
               RowBox[{"DisplayFunction", "\[Rule]", "Identity"}], ",", 
               RowBox[{"ImageSize", "\[Rule]", "0"}]}], "]"}], ",", 
             RowBox[{"ImageResolution", "\[Rule]", "1"}]}], "]"}]}]}]}]}], 
       "]"}]}], "]"}]}], ";"}], "\n", "\[IndentingNewLine]", 
  "\[IndentingNewLine]", 
  RowBox[{"(*", 
   RowBox[{
    RowBox[{"Joins", " ", "and", " ", "filters", " ", "options"}], ",", 
    RowBox[{
    "keeping", " ", "the", " ", "righmost", " ", "if", " ", "there", " ", 
     "are", " ", "multiple", " ", "instances", " ", "of", " ", "the", " ", 
     "same", " ", 
     RowBox[{"option", "."}]}]}], "*)"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"filter", "[", 
     RowBox[{"opts_List", ",", "head_"}], "]"}], ":=", 
    RowBox[{"Reverse", "@", 
     RowBox[{"DeleteDuplicatesBy", "[", 
      RowBox[{
       RowBox[{"Reverse", "@", 
        RowBox[{"FilterRules", "[", 
         RowBox[{
          RowBox[{"Flatten", "@", "opts"}], ",", 
          RowBox[{"First", "/@", 
           RowBox[{"Options", "@", "head"}]}]}], "]"}]}], ",", "First"}], 
      "]"}]}]}], ";"}], "\n", "\[IndentingNewLine]", "\[IndentingNewLine]", 
  RowBox[{"(*", 
   RowBox[{
    RowBox[{
     RowBox[{
     "Find", " ", "and", " ", "use", " ", "SETools", " ", "of", " ", 
      "Szabolcs"}], "&"}], " ", "Halirutan"}], 
   "*)"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"$SEToolsExist", "=", 
    RowBox[{"FileExistsQ", "@", 
     RowBox[{"FileNameJoin", "@", 
      RowBox[{"{", 
       RowBox[{
       "$UserBaseDirectory", ",", "\"\<Applications\>\"", ",", 
        "\"\<SETools\>\"", ",", "\"\<Java\>\"", ",", "\"\<SETools.jar\>\""}], 
       "}"}]}]}]}], ";"}], "\[IndentingNewLine]", "\[IndentingNewLine]", 
  RowBox[{"(*", 
   RowBox[{
    RowBox[{"If", " ", "SETools", " ", "exist"}], ",", 
    RowBox[{
    "initiate", " ", "JLink", " ", "and", " ", "include", " ", "some", " ", 
     "functions"}]}], "*)"}]}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"If", "[", 
    RowBox[{"$SEToolsExist", ",", 
     RowBox[{
      RowBox[{"Needs", "@", "\"\<JLink`\>\""}], ";", "\[IndentingNewLine]", 
      RowBox[{"JLink`InstallJava", "[", "]"}], ";", "\[IndentingNewLine]", 
      RowBox[{
       RowBox[{"copyToClipboard", "[", "text_", "]"}], ":=", 
       RowBox[{"Module", "[", 
        RowBox[{
         RowBox[{"{", "nb", "}"}], ",", 
         RowBox[{
          RowBox[{"nb", "=", 
           RowBox[{"NotebookCreate", "[", 
            RowBox[{"Visible", "\[Rule]", "False"}], "]"}]}], ";", 
          "\[IndentingNewLine]", 
          RowBox[{"NotebookWrite", "[", 
           RowBox[{"nb", ",", 
            RowBox[{"Cell", "[", 
             RowBox[{"text", ",", "\"\<Input\>\""}], "]"}]}], "]"}], ";", 
          "\[IndentingNewLine]", 
          RowBox[{"SelectionMove", "[", 
           RowBox[{"nb", ",", "All", ",", "Notebook"}], "]"}], ";", 
          "\[IndentingNewLine]", 
          RowBox[{"FrontEndTokenExecute", "[", 
           RowBox[{"nb", ",", "\"\<Copy\>\""}], "]"}], ";", 
          "\[IndentingNewLine]", 
          RowBox[{"NotebookClose", "@", "nb"}], ";"}]}], "]"}]}], ";", 
      "\[IndentingNewLine]", 
      RowBox[{
       RowBox[{"uploadButtonAction", "[", "img_", "]"}], ":=", 
       RowBox[{"uploadButtonAction", "[", 
        RowBox[{
        "img", ",", "\"\<![Mathematica graphics](\>\"", ",", "\"\<)\>\""}], 
        "]"}]}], ";", "\[IndentingNewLine]", 
      RowBox[{
       RowBox[{"uploadButtonAction", "[", 
        RowBox[{"img_", ",", "wrapStart_String", ",", "wrapEnd_String"}], 
        "]"}], ":=", 
       RowBox[{"Module", "[", 
        RowBox[{
         RowBox[{"{", "url", "}"}], ",", 
         RowBox[{
          RowBox[{"Check", "[", 
           RowBox[{
            RowBox[{"url", "=", 
             RowBox[{"stackImage", "@", "img"}]}], ",", 
            RowBox[{"Return", "[", "]"}]}], "]"}], ";", "\[IndentingNewLine]", 
          RowBox[{"copyToClipboard", "@", 
           RowBox[{"(", 
            RowBox[{"wrapStart", "<>", "url", "<>", "wrapEnd"}], ")"}]}], 
          ";"}]}], "]"}]}], ";", "\[IndentingNewLine]", 
      RowBox[{
       RowBox[{"stackImage", "::", "httperr"}], "=", 
       "\"\<Server returned respose code: `1`\>\""}], ";", 
      "\[IndentingNewLine]", 
      RowBox[{
       RowBox[{"stackImage", "::", "err"}], "=", 
       "\"\<Server returner error: `1`\>\""}], ";", "\[IndentingNewLine]", 
      RowBox[{
       RowBox[{"stackImage", "::", "parseErr"}], "=", 
       "\"\<Could not parse the answer of the server.\>\""}], ";", 
      "\[IndentingNewLine]", 
      RowBox[{
       RowBox[{"stackImage", "[", "g_", "]"}], ":=", 
       RowBox[{"Module", "[", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{
          "url", ",", "client", ",", "method", ",", "data", ",", "partSource",
            ",", "part", ",", "entity", ",", "code", ",", "response", ",", 
           "error", ",", "result", ",", "parseXMLOutput"}], "}"}], ",", 
         RowBox[{
          RowBox[{
           RowBox[{"parseXMLOutput", "[", "str_String", "]"}], ":=", 
           RowBox[{"Block", "[", 
            RowBox[{
             RowBox[{"{", 
              RowBox[{
               RowBox[{"xml", "=", 
                RowBox[{"ImportString", "[", 
                 RowBox[{"str", ",", 
                  RowBox[{"{", 
                   RowBox[{"\"\<HTML\>\"", ",", "\"\<XMLObject\>\""}], 
                   "}"}]}], "]"}]}], ",", "result"}], "}"}], ",", 
             RowBox[{
              RowBox[{"result", "=", 
               RowBox[{
                RowBox[{"Cases", "[", 
                 RowBox[{"xml", ",", 
                  RowBox[{
                   RowBox[{"XMLElement", "[", 
                    RowBox[{"\"\<script\>\"", ",", "_", ",", "res_"}], "]"}], 
                   "\[RuleDelayed]", 
                   RowBox[{"StringTrim", "[", "res", "]"}]}], ",", 
                  "Infinity"}], "]"}], "/.", 
                RowBox[{
                 RowBox[{"{", 
                  RowBox[{"{", "s_String", "}"}], "}"}], "\[RuleDelayed]", 
                 "s"}]}]}], ";", "\[IndentingNewLine]", 
              RowBox[{"If", "[", 
               RowBox[{
                RowBox[{
                 RowBox[{"result", "=!=", 
                  RowBox[{"{", "}"}]}], "&&", 
                 RowBox[{"StringMatchQ", "[", 
                  RowBox[{"result", ",", 
                   RowBox[{"\"\<window.parent\>\"", "~~", "__"}]}], "]"}]}], 
                ",", 
                RowBox[{"Flatten", "@", 
                 RowBox[{"StringCases", "[", 
                  RowBox[{"result", ",", 
                   RowBox[{
                    RowBox[{
                    "\"\<window.parent.\>\"", "~~", "func__", "~~", 
                    "\"\<(\>\"", "~~", "arg__", "~~", "\"\<);\>\""}], 
                    "\[RuleDelayed]", 
                    RowBox[{"{", 
                    RowBox[{
                    RowBox[{"StringMatchQ", "[", 
                    RowBox[{"func", ",", "\"\<closeDialog\>\""}], "]"}], ",", 
                    
                    RowBox[{"StringTrim", "[", 
                    RowBox[{"arg", ",", "\"\<\\\"\>\""}], "]"}]}], "}"}]}]}], 
                  "]"}]}], ",", "$Failed"}], "]"}]}]}], "]"}]}], ";", 
          "\[IndentingNewLine]", 
          RowBox[{
           RowBox[{"parseXMLOutput", "[", "___", "]"}], ":=", "$Failed"}], 
          ";", "\[IndentingNewLine]", 
          RowBox[{"data", "=", 
           RowBox[{"ExportString", "[", 
            RowBox[{"g", ",", "\"\<PNG\>\""}], "]"}]}], ";", 
          "\[IndentingNewLine]", 
          RowBox[{"JLink`JavaBlock", "[", 
           RowBox[{
            RowBox[{"JLink`LoadJavaClass", "[", 
             RowBox[{"\"\<de.halirutan.se.tools.SEUploader\>\"", ",", 
              RowBox[{"StaticsVisible", "\[Rule]", "True"}]}], "]"}], ";", 
            "\[IndentingNewLine]", 
            RowBox[{"response", "=", 
             RowBox[{"Check", "[", 
              RowBox[{
               RowBox[{"SEUploader`sendImage", "@", 
                RowBox[{"ToCharacterCode", "@", "data"}]}], ",", 
               RowBox[{"Return", "@", "$Failed"}]}], "]"}]}]}], "]"}], ";", 
          "\[IndentingNewLine]", 
          RowBox[{"If", "[", 
           RowBox[{
            RowBox[{"response", "===", "$Failed"}], ",", 
            RowBox[{"Return", "@", "$Failed"}]}], "]"}], ";", 
          "\[IndentingNewLine]", 
          RowBox[{"result", "=", 
           RowBox[{"parseXMLOutput", "@", "response"}]}], ";", 
          "\[IndentingNewLine]", 
          RowBox[{"If", "[", 
           RowBox[{
            RowBox[{"result", "=!=", "$Failed"}], ",", 
            RowBox[{"If", "[", 
             RowBox[{
              RowBox[{"TrueQ", "@", 
               RowBox[{"First", "@", "result"}]}], ",", 
              RowBox[{"Last", "@", "result"}], ",", 
              RowBox[{
               RowBox[{"Message", "[", 
                RowBox[{
                 RowBox[{"stackImage", "::", "err"}], ",", 
                 RowBox[{"Last", "@", "result"}]}], "]"}], ";", "$Failed"}]}],
              "]"}], ",", 
            RowBox[{
             RowBox[{"Message", "[", 
              RowBox[{"stackImage", "::", "parseErr"}], "]"}], ";", 
             "$Failed"}]}], "]"}]}]}], "]"}]}], ";"}]}], "]"}], ";"}], 
  "\[IndentingNewLine]", "\[IndentingNewLine]"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"GraphicsButton", "::", "usage"}], "=", 
   "\"\<GraphicsButton[lbl, gr] represent a button that is labeled with lbl \
and offers functionality for the static graphics object gr. \
GraphicsButton[gr] uses a tiny version of gr as label.\>\""}], ";"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"MenuItems", "::", "usage"}], "=", 
   "\"\<MenuItems is an option for GraphicsButton that specifies additional \
label \[RuleDelayed] command pairs as a list to be included at the top of the \
action menu of GraphicsButton.\>\""}], ";"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"Options", "[", "GraphicsButton", "]"}], "=", 
   RowBox[{"DeleteDuplicatesBy", "[", 
    RowBox[{
     RowBox[{"Flatten", "@", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"MenuItems", "\[Rule]", 
         RowBox[{"{", "}"}]}], ",", 
        RowBox[{"RasterSize", "\[Rule]", "Automatic"}], ",", 
        RowBox[{"ColorSpace", "\[Rule]", "Automatic"}], ",", 
        RowBox[{"ImageResolution", "\[Rule]", "300"}], ",", 
        RowBox[{"Options", "@", "ActionMenu"}]}], "}"}]}], ",", "First"}], 
    "]"}]}], ";"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"GraphicsButton", "[", 
    RowBox[{"expr_", ",", 
     RowBox[{"opts", ":", 
      RowBox[{"OptionsPattern", "[", "]"}]}]}], "]"}], ":=", 
   RowBox[{"GraphicsButton", "[", 
    RowBox[{
     RowBox[{"Pane", "[", 
      RowBox[{"expr", ",", 
       RowBox[{"ImageSize", "\[Rule]", "Small"}], ",", 
       RowBox[{"ImageSizeAction", "\[Rule]", "\"\<ShrinkToFit\>\""}]}], "]"}],
      ",", "expr", ",", "opts"}], "]"}]}], ";"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"GraphicsButton", "[", 
     RowBox[{"lbl_", ",", "expr_", ",", 
      RowBox[{"opts", ":", 
       RowBox[{"OptionsPattern", "[", "]"}]}]}], "]"}], ":=", 
    RowBox[{"Module", "[", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{"head", ",", "save", ",", 
        RowBox[{"items", "=", 
         RowBox[{"OptionValue", "@", "MenuItems"}]}], ",", "rasterizeOpts", 
        ",", 
        RowBox[{"dir", "=", "$UserDocumentsDirectory"}], ",", 
        RowBox[{"file", "=", "\"\<\>\""}]}], "}"}], ",", 
      RowBox[{
       RowBox[{"rasterizeOpts", "=", 
        RowBox[{"filter", "[", 
         RowBox[{
          RowBox[{"{", 
           RowBox[{
            RowBox[{"Options", "@", "GraphicsButton"}], ",", "opts"}], "}"}], 
          ",", 
          RowBox[{"Options", "@", "Rasterize"}]}], "]"}]}], ";", 
       "\[IndentingNewLine]", 
       RowBox[{
        RowBox[{"save", "[", "format_", "]"}], ":=", 
        RowBox[{"(", 
         RowBox[{
          RowBox[{"file", "=", 
           RowBox[{"SystemDialogInput", "[", 
            RowBox[{"\"\<FileSave\>\"", ",", 
             RowBox[{"FileNameJoin", "@", 
              RowBox[{"{", 
               RowBox[{"dir", ",", 
                RowBox[{"\"\<.\>\"", "<>", 
                 RowBox[{"ToLowerCase", "@", "format"}]}]}], "}"}]}]}], 
            "]"}]}], ";", "\[IndentingNewLine]", 
          RowBox[{"If", "[", 
           RowBox[{
            RowBox[{
             RowBox[{"file", "=!=", "$Failed"}], "&&", 
             RowBox[{"file", "=!=", "$Canceled"}]}], ",", 
            RowBox[{
             RowBox[{"dir", "=", 
              RowBox[{"DirectoryName", "@", "file"}]}], ";", 
             "\[IndentingNewLine]", 
             RowBox[{"Quiet", "@", 
              RowBox[{"Export", "[", 
               RowBox[{"file", ",", 
                RowBox[{"If", "[", 
                 RowBox[{
                  RowBox[{"format", "===", "\"\<NB\>\""}], ",", "expr", ",", 
                  RowBox[{"Rasterize", "[", 
                   RowBox[{
                   "expr", ",", "\"\<Image\>\"", ",", "rasterizeOpts"}], 
                   "]"}]}], "]"}], ",", "format"}], "]"}]}]}]}], "]"}]}], 
         ")"}]}], ";", "\[IndentingNewLine]", 
       RowBox[{"head", "=", 
        RowBox[{"Head", "@", 
         RowBox[{"Unevaluated", "@", "expr"}]}]}], ";", "\[IndentingNewLine]", 
       RowBox[{"ActionMenu", "[", 
        RowBox[{"lbl", ",", 
         RowBox[{"Flatten", "@", 
          RowBox[{"{", 
           RowBox[{
            RowBox[{"If", "[", 
             RowBox[{
              RowBox[{"items", "=!=", 
               RowBox[{"{", "}"}]}], ",", "items", ",", "Nothing"}], "]"}], 
            ",", 
            RowBox[{"\"\<Copy expression\>\"", "\[RuleDelayed]", 
             RowBox[{"CopyToClipboard", "@", "expr"}]}], ",", 
            RowBox[{"\"\<Copy image\>\"", "\[RuleDelayed]", 
             RowBox[{"CopyToClipboard", "@", 
              RowBox[{"Rasterize", "@", "expr"}]}]}], ",", 
            RowBox[{"\"\<Copy high-res image\>\"", "\[RuleDelayed]", 
             RowBox[{"CopyToClipboard", "@", 
              RowBox[{"Rasterize", "[", 
               RowBox[{"expr", ",", "\"\<Image\>\"", ",", "rasterizeOpts"}], 
               "]"}]}]}], ",", 
            RowBox[{"\"\<Paste expression\>\"", "\[RuleDelayed]", 
             RowBox[{"Paste", "@", "expr"}]}], ",", 
            RowBox[{"\"\<Paste image\>\"", "\[RuleDelayed]", 
             RowBox[{"Paste", "@", 
              RowBox[{"Rasterize", "@", "expr"}]}]}], ",", 
            RowBox[{"\"\<Paste high-res image\>\"", "\[RuleDelayed]", 
             RowBox[{"Paste", "@", 
              RowBox[{"Rasterize", "[", 
               RowBox[{"expr", ",", "\"\<Image\>\"", ",", "rasterizeOpts"}], 
               "]"}]}]}], ",", "Delimiter", ",", 
            RowBox[{"\"\<Save as notebook\[Ellipsis]\>\"", "\[RuleDelayed]", 
             RowBox[{"save", "@", "\"\<NB\>\""}]}], ",", 
            RowBox[{"\"\<Save as JPEG\[Ellipsis]\>\"", "\[RuleDelayed]", 
             RowBox[{"save", "@", "\"\<JPEG\>\""}]}], ",", 
            RowBox[{"\"\<Save as TIFF\[Ellipsis]\>\"", "\[RuleDelayed]", 
             RowBox[{"save", "@", "\"\<TIFF\>\""}]}], ",", 
            RowBox[{"\"\<Save as BMP\[Ellipsis]\>\"", "\[RuleDelayed]", 
             RowBox[{"save", "@", "\"\<BMP\>\""}]}], ",", "Delimiter", ",", 
            RowBox[{
             RowBox[{"Style", "[", 
              RowBox[{"\"\<Upload image to StackExchange\>\"", ",", 
               RowBox[{"If", "[", 
                RowBox[{"$SEToolsExist", ",", "Black", ",", "Gray"}], "]"}]}],
               "]"}], "\[RuleDelayed]", 
             RowBox[{"If", "[", 
              RowBox[{"$SEToolsExist", ",", 
               RowBox[{"uploadButtonAction", "@", 
                RowBox[{"Rasterize", "@", "expr"}]}]}], "]"}]}], ",", 
            RowBox[{
            "\"\<Open image in external application\>\"", "\[RuleDelayed]", 
             RowBox[{"Module", "[", 
              RowBox[{
               RowBox[{"{", 
                RowBox[{"f", "=", 
                 RowBox[{"Export", "[", 
                  RowBox[{
                   RowBox[{"FileNameJoin", "@", 
                    RowBox[{"{", 
                    RowBox[{
                    "$TemporaryDirectory", ",", "\"\<temp_img.tiff\>\""}], 
                    "}"}]}], ",", 
                   RowBox[{"Rasterize", "@", "expr"}], ",", "\"\<TIFF\>\""}], 
                  "]"}]}], "}"}], ",", 
               RowBox[{"If", "[", 
                RowBox[{
                 RowBox[{
                  RowBox[{"StringQ", "@", "f"}], "&&", 
                  RowBox[{"FileExistsQ", "@", "f"}]}], ",", 
                 RowBox[{"SystemOpen", "@", "f"}]}], "]"}]}], "]"}]}]}], 
           "}"}]}], ",", 
         RowBox[{"filter", "[", 
          RowBox[{
           RowBox[{"{", 
            RowBox[{
             RowBox[{"Options", "@", "GraphicsButton"}], ",", "opts", ",", 
             RowBox[{"{", 
              RowBox[{"Method", "\[Rule]", "\"\<Queued\>\""}], "}"}]}], "}"}],
            ",", 
           RowBox[{"Options", "@", "ActionMenu"}]}], "]"}]}], "]"}]}]}], 
     "]"}]}], ";"}], "\[IndentingNewLine]", "\[IndentingNewLine]"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"PlotExplorer", "::", "usage"}], "=", 
   "\"\<PlotExplorer[plot] returns a manipulable version of plot. \
PlotExplorer can handle Graph and Graphics objects and plotting functions \
like Plot, LogPlot, ListPlot, DensityPlot, Streamplot, etc. PlotExplorer \
allows the modification of the plot range, image size and aspect ratio. If \
the supplied argument is a full specification of a plotting function holding \
its first argument (e.g. Plot) the result offers functionality to replot the \
function to the modified plot range. PlotExplorer has attribute \
HoldFirst.\>\""}], ";"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"AppearanceFunction", "::", "usage"}], "=", 
   "\"\<AppearanceFunction is an option for PlotExplorer that specifies the \
appearance function of the menu button. Use Automatic for the default \
appearance, Identity to display a classic button or None to omit the menu \
button.\>\""}], ";"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"MenuPosition", "::", "usage"}], "=", 
   "\"\<MenuPosition is an option for PlotExplorer that specifies the \
position of the (upper right corner of the) menu button within the graphics \
object.\>\""}], ";"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"Attributes", "[", "PlotExplorer", "]"}], "=", 
   RowBox[{"{", "HoldFirst", "}"}]}], ";"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"Options", "[", "PlotExplorer", "]"}], "=", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"AppearanceFunction", "\[Rule]", 
      RowBox[{"(", 
       RowBox[{
        RowBox[{
         RowBox[{
          RowBox[{"Mouseover", "[", 
           RowBox[{
            RowBox[{"Invisible", "@", "#"}], ",", "#"}], "]"}], "&"}], "@", 
         RowBox[{"Framed", "[", 
          RowBox[{"#", ",", 
           RowBox[{"Background", "\[Rule]", 
            RowBox[{"GrayLevel", "[", 
             RowBox[{".5", ",", ".5"}], "]"}]}], ",", 
           RowBox[{"RoundingRadius", "\[Rule]", "5"}], ",", 
           RowBox[{"FrameStyle", "\[Rule]", "None"}], ",", 
           RowBox[{"Alignment", "\[Rule]", 
            RowBox[{"{", 
             RowBox[{"Center", ",", "Center"}], "}"}]}], ",", 
           RowBox[{"BaseStyle", "\[Rule]", 
            RowBox[{"{", 
             RowBox[{"FontFamily", "\[Rule]", "\"\<Helvetica\>\""}], 
             "}"}]}]}], "]"}]}], "&"}], ")"}]}], ",", 
     RowBox[{"MenuPosition", "\[Rule]", 
      RowBox[{"Scaled", "@", 
       RowBox[{"{", 
        RowBox[{"1", ",", "1"}], "}"}]}]}]}], "}"}]}], ";"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"PlotExplorer", "[", 
    RowBox[{"expr_", ",", 
     RowBox[{"rangeArg_:", " ", "Automatic"}], ",", 
     RowBox[{"sizeArg_:", " ", "Automatic"}], ",", 
     RowBox[{"ratioArg_:", " ", "Automatic"}], ",", 
     RowBox[{"opts", ":", 
      RowBox[{"OptionsPattern", "[", "]"}]}]}], "]"}], ":=", 
   RowBox[{"Module", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{
       RowBox[{"plot", "=", "expr"}], ",", 
       RowBox[{"held", "=", 
        RowBox[{"Hold", "@", "expr"}]}], ",", "head", ",", 
       RowBox[{"holdQ", "=", "True"}], ",", 
       RowBox[{"legQ", "=", "False"}], ",", "appearance", ",", "position", 
       ",", 
       RowBox[{"$1Dplots", "=", 
        RowBox[{
        "Plot", "|", "LogPlot", "|", "LogLinearPlot", "|", "LogLogPlot"}]}], 
       ",", 
       RowBox[{"$2Dplots", "=", 
        RowBox[{
        "DensityPlot", "|", "ContourPlot", "|", "RegionPlot", "|", 
         "StreamPlot", "|", "StreamDensityPlot", "|", "VectorPlot", "|", 
         "VectorDensityPlot", "|", "LineIntegralConvolutionPlot", "|", 
         "GeoGraphics"}]}]}], "}"}], ",", 
     RowBox[{
      RowBox[{"head", "=", 
       RowBox[{"held", "[", 
        RowBox[{"[", 
         RowBox[{"1", ",", "0"}], "]"}], "]"}]}], ";", "\[IndentingNewLine]", 
      
      RowBox[{"If", "[", 
       RowBox[{
        RowBox[{"head", "===", "Symbol"}], ",", 
        RowBox[{
         RowBox[{"holdQ", "=", "False"}], ";", 
         RowBox[{"head", "=", 
          RowBox[{"Head", "@", "expr"}]}]}]}], "]"}], ";", 
      "\[IndentingNewLine]", 
      RowBox[{"If", "[", 
       RowBox[{
        RowBox[{"head", "===", "Legended"}], ",", 
        RowBox[{
         RowBox[{"legQ", "=", "True"}], ";", "\[IndentingNewLine]", 
         RowBox[{"If", "[", 
          RowBox[{"holdQ", ",", 
           RowBox[{
            RowBox[{"held", "=", 
             RowBox[{"held", "/.", 
              RowBox[{
               RowBox[{"Legended", "[", 
                RowBox[{"x_", ",", "___"}], "]"}], "\[RuleDelayed]", 
               "x"}]}]}], ";", "\[IndentingNewLine]", 
            RowBox[{"head", "=", 
             RowBox[{"held", "[", 
              RowBox[{"[", 
               RowBox[{"1", ",", "0"}], "]"}], "]"}]}]}], ",", 
           RowBox[{"head", "=", 
            RowBox[{"Head", "@", 
             RowBox[{"First", "@", "expr"}]}]}]}], "]"}]}]}], "]"}], ";", 
      "\[IndentingNewLine]", 
      RowBox[{"holdQ", "=", 
       RowBox[{"holdQ", "&&", 
        RowBox[{"MatchQ", "[", 
         RowBox[{"head", ",", 
          RowBox[{"$1Dplots", "|", "$2Dplots"}]}], "]"}]}]}], ";", 
      "\[IndentingNewLine]", 
      RowBox[{"If", "[", 
       RowBox[{
        RowBox[{"!", "holdQ"}], ",", 
        RowBox[{
         RowBox[{"legQ", "=", 
          RowBox[{
           RowBox[{"Head", "@", "expr"}], "===", "Legended"}]}], ";", 
         "\[IndentingNewLine]", 
         RowBox[{"head", "=", 
          RowBox[{"If", "[", 
           RowBox[{"legQ", ",", 
            RowBox[{"Head", "@", 
             RowBox[{"First", "@", "expr"}]}], ",", 
            RowBox[{"Head", "@", "expr"}]}], "]"}]}]}]}], "]"}], ";", 
      "\[IndentingNewLine]", 
      RowBox[{"If", "[", 
       RowBox[{
        RowBox[{"Not", "@", 
         RowBox[{"MatchQ", "[", 
          RowBox[{"head", ",", 
           RowBox[{
           "$1Dplots", "|", "$2Dplots", "|", "Graphics", "|", "Graph"}]}], 
          "]"}]}], ",", "expr", ",", 
        RowBox[{"DynamicModule", "[", 
         RowBox[{
          RowBox[{"{", 
           RowBox[{
           "dyn", ",", "gr", ",", "leg", ",", "replot", ",", "rescale", ",", 
            "new", ",", "mid", ",", "len", ",", 
            RowBox[{"min", "=", "0.1"}], ",", 
            RowBox[{"f", "=", 
             RowBox[{"{", 
              RowBox[{"1", ",", "1"}], "}"}]}], ",", "set", ",", "d", ",", 
            "epilog", ",", 
            RowBox[{"over", "=", "False"}], ",", "defRange", ",", "range", 
            ",", "size", ",", "ratio", ",", "pt1", ",", 
            RowBox[{"pt1sc", "=", "None"}], ",", 
            RowBox[{"pt2", "=", "None"}], ",", 
            RowBox[{"pt2sc", "=", "None"}], ",", "rect", ",", "button"}], 
           "}"}], ",", 
          RowBox[{
           RowBox[{
            RowBox[{"{", 
             RowBox[{"gr", ",", "leg"}], "}"}], "=", 
            RowBox[{"If", "[", 
             RowBox[{"legQ", ",", 
              RowBox[{"List", "@@", "plot"}], ",", 
              RowBox[{"{", 
               RowBox[{"plot", ",", "None"}], "}"}]}], "]"}]}], ";", 
           "\[IndentingNewLine]", 
           RowBox[{"size", "=", 
            RowBox[{"If", "[", 
             RowBox[{
              RowBox[{"sizeArg", "===", "Automatic"}], ",", 
              RowBox[{"Rasterize", "[", 
               RowBox[{"gr", ",", "\"\<RasterSize\>\""}], "]"}], ",", 
              RowBox[{"Setting", "@", "sizeArg"}]}], "]"}]}], ";", 
           "\[IndentingNewLine]", 
           RowBox[{"defRange", "=", 
            RowBox[{"If", "[", 
             RowBox[{
              RowBox[{"rangeArg", "===", "Automatic"}], ",", 
              RowBox[{"GetPlotRange", "[", 
               RowBox[{"gr", ",", "False"}], "]"}], ",", 
              RowBox[{"Setting", "@", "rangeArg"}]}], "]"}]}], ";", 
           "\[IndentingNewLine]", 
           RowBox[{"ratio", "=", 
            RowBox[{"If", "[", 
             RowBox[{
              RowBox[{"ratioArg", "===", "Automatic"}], ",", 
              RowBox[{"Divide", "@@", 
               RowBox[{"Reverse", "@", "size"}]}], ",", 
              RowBox[{"Setting", "@", "ratioArg"}]}], "]"}]}], ";", 
           "\[IndentingNewLine]", 
           RowBox[{"epilog", "=", 
            RowBox[{"Epilog", "/.", 
             RowBox[{"Quiet", "@", 
              RowBox[{"AbsoluteOptions", "@", "plot"}]}]}]}], ";", 
           "\[IndentingNewLine]", 
           RowBox[{"gr", "=", "plot"}], ";", "\[IndentingNewLine]", 
           RowBox[{"(*", 
            RowBox[{
             RowBox[{
             "When", " ", "r1", " ", "or", " ", "r2", " ", "is", " ", 
              RowBox[{"e", ".", "g", ".", 
               RowBox[{"{", 
                RowBox[{"1", ",", "1"}], "}"}]}], " ", 
              RowBox[{"(", 
               RowBox[{
               "scale", " ", "region", " ", "has", " ", "zero", " ", 
                "width"}], ")"}]}], ",", 
             RowBox[{
             "EuclideanDistance", " ", "by", " ", "defult", " ", "returns", 
              " ", "Infinity", " ", "which", " ", "is", " ", 
              RowBox[{"fine", "."}]}]}], "*)"}], 
           RowBox[{
            RowBox[{"d", "[", 
             RowBox[{"p1_", ",", "p2_", ",", 
              RowBox[{"{", 
               RowBox[{"r1_", ",", "r2_"}], "}"}]}], "]"}], ":=", 
            RowBox[{"Quiet", "@", 
             RowBox[{"N", "@", 
              RowBox[{"EuclideanDistance", "[", 
               RowBox[{
                RowBox[{"Rescale", "[", 
                 RowBox[{"p1", ",", "r1"}], "]"}], ",", 
                RowBox[{"Rescale", "[", 
                 RowBox[{"p2", ",", "r2"}], "]"}]}], "]"}]}]}]}], ";", 
           "\[IndentingNewLine]", 
           RowBox[{
            RowBox[{"set", "[", "r_", "]"}], ":=", 
            RowBox[{"(", 
             RowBox[{
              RowBox[{"range", "=", 
               RowBox[{"new", "=", "r"}]}], ";", 
              RowBox[{"mid", "=", 
               RowBox[{"Mean", "/@", "range"}]}], ";", "\[IndentingNewLine]", 
              
              RowBox[{"len", "=", 
               RowBox[{"Abs", "[", 
                RowBox[{"Subtract", "@@@", "range"}], "]"}]}], ";", 
              RowBox[{"pt1", "=", "None"}], ";", 
              RowBox[{"rect", "=", 
               RowBox[{"{", "}"}]}], ";"}], ")"}]}], ";", 
           "\[IndentingNewLine]", 
           RowBox[{"set", "@", "defRange"}], ";", "\[IndentingNewLine]", 
           RowBox[{"(*", 
            RowBox[{
            "Replace", " ", "plot", " ", "range", " ", "or", " ", "insert", 
             " ", "if", " ", "nonexistent"}], "*)"}], 
           RowBox[{
            RowBox[{"replot", "[", 
             RowBox[{"h_", ",", "hold_", ",", "r_"}], "]"}], ":=", 
            RowBox[{"Module", "[", 
             RowBox[{
              RowBox[{"{", "temp", "}"}], ",", 
              RowBox[{"ReleaseHold", "@", 
               RowBox[{"Switch", "[", 
                RowBox[{"h", ",", "$1Dplots", ",", 
                 RowBox[{
                  RowBox[{"temp", "=", 
                   RowBox[{"ReplacePart", "[", 
                    RowBox[{"hold", ",", 
                    RowBox[{"{", 
                    RowBox[{
                    RowBox[{
                    RowBox[{"{", 
                    RowBox[{"1", ",", "2", ",", "2"}], "}"}], "\[Rule]", 
                    RowBox[{"r", "[", 
                    RowBox[{"[", 
                    RowBox[{"1", ",", "1"}], "]"}], "]"}]}], ",", 
                    RowBox[{
                    RowBox[{"{", 
                    RowBox[{"1", ",", "2", ",", "3"}], "}"}], "\[Rule]", 
                    RowBox[{"r", "[", 
                    RowBox[{"[", 
                    RowBox[{"1", ",", "2"}], "]"}], "]"}]}]}], "}"}]}], 
                    "]"}]}], ";", "\[IndentingNewLine]", 
                  RowBox[{"If", "[", 
                   RowBox[{
                    RowBox[{"MemberQ", "[", 
                    RowBox[{"temp", ",", "PlotRange", ",", "Infinity"}], 
                    "]"}], ",", 
                    RowBox[{"temp", "/.", 
                    RowBox[{"{", 
                    RowBox[{
                    RowBox[{"_", "[", 
                    RowBox[{"PlotRange", ",", "_"}], "]"}], "\[Rule]", 
                    RowBox[{"(", 
                    RowBox[{"PlotRange", "\[Rule]", "r"}], ")"}]}], "}"}]}], 
                    ",", 
                    RowBox[{"Insert", "[", 
                    RowBox[{"temp", ",", 
                    RowBox[{"PlotRange", "\[Rule]", "r"}], ",", 
                    RowBox[{"{", 
                    RowBox[{"1", ",", 
                    RowBox[{"-", "1"}]}], "}"}]}], "]"}]}], "]"}]}], ",", 
                 "$2Dplots", ",", 
                 RowBox[{
                  RowBox[{"temp", "=", 
                   RowBox[{"ReplacePart", "[", 
                    RowBox[{"hold", ",", 
                    RowBox[{"{", 
                    RowBox[{
                    RowBox[{
                    RowBox[{"{", 
                    RowBox[{"1", ",", "2", ",", "2"}], "}"}], "\[Rule]", 
                    RowBox[{"r", "[", 
                    RowBox[{"[", 
                    RowBox[{"1", ",", "1"}], "]"}], "]"}]}], ",", 
                    RowBox[{
                    RowBox[{"{", 
                    RowBox[{"1", ",", "2", ",", "3"}], "}"}], "\[Rule]", 
                    RowBox[{"r", "[", 
                    RowBox[{"[", 
                    RowBox[{"1", ",", "2"}], "]"}], "]"}]}], ",", 
                    RowBox[{
                    RowBox[{"{", 
                    RowBox[{"1", ",", "3", ",", "2"}], "}"}], "\[Rule]", 
                    RowBox[{"r", "[", 
                    RowBox[{"[", 
                    RowBox[{"2", ",", "1"}], "]"}], "]"}]}], ",", 
                    RowBox[{
                    RowBox[{"{", 
                    RowBox[{"1", ",", "3", ",", "3"}], "}"}], "\[Rule]", 
                    RowBox[{"r", "[", 
                    RowBox[{"[", 
                    RowBox[{"2", ",", "2"}], "]"}], "]"}]}]}], "}"}]}], 
                    "]"}]}], ";", "\[IndentingNewLine]", 
                  RowBox[{"If", "[", 
                   RowBox[{
                    RowBox[{"MemberQ", "[", 
                    RowBox[{"temp", ",", "PlotRange", ",", "Infinity"}], 
                    "]"}], ",", 
                    RowBox[{"temp", "/.", 
                    RowBox[{"{", 
                    RowBox[{
                    RowBox[{"_", "[", 
                    RowBox[{"PlotRange", ",", "_"}], "]"}], "\[Rule]", 
                    RowBox[{"(", 
                    RowBox[{"PlotRange", "\[Rule]", "r"}], ")"}]}], "}"}]}], 
                    ",", 
                    RowBox[{"Insert", "[", 
                    RowBox[{"temp", ",", 
                    RowBox[{"PlotRange", "\[Rule]", "r"}], ",", 
                    RowBox[{"{", 
                    RowBox[{"1", ",", 
                    RowBox[{"-", "1"}]}], "}"}]}], "]"}]}], "]"}]}], ",", "_",
                  ",", "hold"}], "]"}]}]}], "]"}]}], ";", 
           "\[IndentingNewLine]", 
           RowBox[{
            RowBox[{"rescale", "[", 
             RowBox[{"h_", ",", "hold_", ",", "sc_"}], "]"}], ":=", 
            RowBox[{"ReleaseHold", "@", 
             RowBox[{"Switch", "[", 
              RowBox[{"h", ",", 
               RowBox[{"$1Dplots", "|", "$2Dplots"}], ",", 
               RowBox[{"If", "[", 
                RowBox[{
                 RowBox[{"MemberQ", "[", 
                  RowBox[{"hold", ",", "ScalingFunctions", ",", "Infinity"}], 
                  "]"}], ",", 
                 RowBox[{"hold", "/.", 
                  RowBox[{"{", 
                   RowBox[{
                    RowBox[{"_", "[", 
                    RowBox[{"ScalingFunctions", ",", "_"}], "]"}], "\[Rule]", 
                    
                    RowBox[{"(", 
                    RowBox[{"ScalingFunctions", "\[Rule]", "sc"}], ")"}]}], 
                   "}"}]}], ",", 
                 RowBox[{"Insert", "[", 
                  RowBox[{"hold", ",", 
                   RowBox[{"ScalingFunctions", "\[Rule]", "sc"}], ",", 
                   RowBox[{"{", 
                    RowBox[{"1", ",", 
                    RowBox[{"-", "1"}]}], "}"}]}], "]"}]}], "]"}], ",", "_", 
               ",", "hold"}], "]"}]}]}], ";", "\[IndentingNewLine]", 
           RowBox[{"appearance", "=", 
            RowBox[{
             RowBox[{"OptionValue", "@", "AppearanceFunction"}], "/.", 
             RowBox[{"{", 
              RowBox[{"Automatic", "\[RuleDelayed]", 
               RowBox[{"(", 
                RowBox[{"AppearanceFunction", "/.", 
                 RowBox[{"Options", "@", "PlotExplorer"}]}], ")"}]}], 
              "}"}]}]}], ";", "\[IndentingNewLine]", 
           RowBox[{"position", "=", 
            RowBox[{
             RowBox[{"OptionValue", "@", "MenuPosition"}], "/.", 
             RowBox[{"Automatic", "\[Rule]", 
              RowBox[{"Scaled", "@", 
               RowBox[{"{", 
                RowBox[{"1", ",", "1"}], "}"}]}]}]}]}], ";", 
           "\[IndentingNewLine]", 
           RowBox[{"(*", 
            RowBox[{
             RowBox[{"Print", "@", 
              RowBox[{"Column", "@", 
               RowBox[{"{", 
                RowBox[{
                "rangeArg", ",", "sizeArg", ",", "ratioArg", ",", 
                 "appearance", ",", "position"}], "}"}]}]}], ";"}], "*)"}], 
           RowBox[{"button", "=", 
            RowBox[{"If", "[", 
             RowBox[{
              RowBox[{"appearance", "===", "None"}], ",", 
              RowBox[{"{", "}"}], ",", 
              RowBox[{"Inset", "[", 
               RowBox[{
                RowBox[{"appearance", "@", 
                 RowBox[{"Dynamic", "@", 
                  RowBox[{"GraphicsButton", "[", 
                   RowBox[{"\"\<Menu\>\"", ",", "dyn", ",", 
                    RowBox[{"Appearance", "\[Rule]", 
                    RowBox[{"If", "[", 
                    RowBox[{
                    RowBox[{"appearance", "===", "Identity"}], ",", 
                    "Automatic", ",", "None"}], "]"}]}], ",", 
                    RowBox[{"MenuItems", "\[Rule]", 
                    RowBox[{"Flatten", "@", 
                    RowBox[{"{", 
                    RowBox[{
                    RowBox[{"{", 
                    RowBox[{
                    RowBox[{
                    RowBox[{"Row", "@", 
                    RowBox[{"{", 
                    RowBox[{"\"\<Copy PlotRange \[Rule] \>\"", ",", 
                    RowBox[{"TextForm", "/@", "range"}]}], "}"}]}], 
                    "\[RuleDelayed]", 
                    RowBox[{"(", 
                    RowBox[{"CopyToClipboard", "[", 
                    RowBox[{"PlotRange", "\[Rule]", "range"}], "]"}], ")"}]}],
                     ",", 
                    RowBox[{
                    RowBox[{"Row", "@", 
                    RowBox[{"{", 
                    RowBox[{"\"\<Copy ImageSize \[Rule] \>\"", ",", 
                    RowBox[{"InputForm", "@", "size"}]}], "}"}]}], 
                    "\[RuleDelayed]", 
                    RowBox[{"(", 
                    RowBox[{"CopyToClipboard", "[", 
                    RowBox[{"ImageSize", "\[Rule]", "size"}], "]"}], ")"}]}], 
                    ",", 
                    RowBox[{
                    RowBox[{"Row", "@", 
                    RowBox[{"{", 
                    RowBox[{"\"\<Copy AspectRatio \[Rule] \>\"", ",", 
                    RowBox[{"InputForm", "@", "ratio"}]}], "}"}]}], 
                    "\[RuleDelayed]", 
                    RowBox[{"(", 
                    RowBox[{"CopyToClipboard", "[", 
                    RowBox[{"AspectRatio", "\[Rule]", "ratio"}], "]"}], 
                    ")"}]}]}], "}"}], ",", 
                    RowBox[{"If", "[", 
                    RowBox[{
                    RowBox[{"MatchQ", "[", 
                    RowBox[{"head", ",", 
                    RowBox[{"$1Dplots", "|", "$2Dplots"}]}], "]"}], ",", 
                    RowBox[{"{", 
                    RowBox[{"Delimiter", ",", 
                    RowBox[{
                    "\"\<Replot at current PlotRange\>\"", "\[RuleDelayed]", 
                    RowBox[{"(", 
                    RowBox[{
                    RowBox[{"gr", "=", 
                    RowBox[{"replot", "[", 
                    RowBox[{"head", ",", "held", ",", "range"}], "]"}]}], 
                    ";"}], ")"}]}], ",", 
                    RowBox[{"\"\<Linear\>\"", "\[RuleDelayed]", 
                    RowBox[{"{", 
                    RowBox[{
                    RowBox[{"gr", "=", 
                    RowBox[{"rescale", "[", 
                    RowBox[{"head", ",", "held", ",", 
                    RowBox[{"{", 
                    RowBox[{"Identity", ",", "Identity"}], "}"}]}], "]"}]}], 
                    ";"}], "}"}]}], ",", 
                    RowBox[{"\"\<Log\>\"", "\[RuleDelayed]", 
                    RowBox[{"{", 
                    RowBox[{"gr", "=", 
                    RowBox[{"rescale", "[", 
                    RowBox[{"head", ",", "held", ",", 
                    RowBox[{"{", 
                    RowBox[{"Identity", ",", "\"\<Log\>\""}], "}"}]}], 
                    "]"}]}], "}"}]}], ",", 
                    RowBox[{"\"\<LogLinear\>\"", "\[RuleDelayed]", 
                    RowBox[{"{", 
                    RowBox[{"gr", "=", 
                    RowBox[{"rescale", "[", 
                    RowBox[{"head", ",", "held", ",", 
                    RowBox[{"{", 
                    RowBox[{"\"\<Log\>\"", ",", "Identity"}], "}"}]}], 
                    "]"}]}], "}"}]}], ",", 
                    RowBox[{"\"\<LogLog\>\"", "\[RuleDelayed]", 
                    RowBox[{"{", 
                    RowBox[{"gr", "=", 
                    RowBox[{"rescale", "[", 
                    RowBox[{"head", ",", "held", ",", 
                    RowBox[{"{", 
                    RowBox[{"\"\<Log\>\"", ",", "\"\<Log\>\""}], "}"}]}], 
                    "]"}]}], "}"}]}]}], "}"}], ",", 
                    RowBox[{"{", "}"}]}], "]"}], ",", "Delimiter"}], 
                    "}"}]}]}]}], "]"}]}]}], ",", "position", ",", 
                RowBox[{"Scaled", "@", 
                 RowBox[{"{", 
                  RowBox[{"1", ",", "1"}], "}"}]}], ",", 
                RowBox[{"Background", "\[Rule]", "None"}]}], "]"}]}], "]"}]}],
            ";", "\[IndentingNewLine]", 
           RowBox[{"Deploy", "@", 
            RowBox[{"Pane", "[", 
             RowBox[{
              RowBox[{"EventHandler", "[", 
               RowBox[{
                RowBox[{"Dynamic", "[", 
                 RowBox[{
                  RowBox[{"MouseAppearance", "[", 
                   RowBox[{
                    RowBox[{"Show", "[", 
                    RowBox[{"(*", 
                    RowBox[{
                    RowBox[{
                    "`dyn`", " ", "is", " ", "kept", " ", "as", " ", "the", 
                    " ", "original", " ", "expression", " ", "with", " ", 
                    "only", " ", "updating", " ", "`range`"}], ",", 
                    RowBox[{"`size`", " ", "and", " ", 
                    RowBox[{"`ratio`", "."}]}]}], "*)"}], 
                    RowBox[{
                    RowBox[{"dyn", "=", 
                    RowBox[{"Show", "[", 
                    RowBox[{"gr", ",", 
                    RowBox[{"PlotRange", "\[Rule]", 
                    RowBox[{"Dynamic", "@", "range"}]}], ",", 
                    RowBox[{"ImageSize", "\[Rule]", 
                    RowBox[{"Dynamic", "@", "size"}]}], ",", 
                    RowBox[{"AspectRatio", "\[Rule]", 
                    RowBox[{"Dynamic", "@", "ratio"}]}]}], "]"}]}], ",", 
                    RowBox[{"Epilog", "\[Rule]", 
                    RowBox[{"{", 
                    RowBox[{"epilog", ",", "button", ",", 
                    RowBox[{"{", 
                    RowBox[{
                    RowBox[{"FaceForm", "@", 
                    RowBox[{"{", 
                    RowBox[{"Blue", ",", 
                    RowBox[{"Opacity", "@", ".1"}]}], "}"}]}], ",", 
                    RowBox[{"EdgeForm", "@", 
                    RowBox[{"{", 
                    RowBox[{"Thin", ",", "Dotted", ",", 
                    RowBox[{"Opacity", "@", ".5"}]}], "}"}]}], ",", 
                    RowBox[{"Dynamic", "@", "rect"}]}], "}"}], ",", 
                    RowBox[{"{", 
                    RowBox[{"Dynamic", "@", 
                    RowBox[{"If", "[", 
                    RowBox[{
                    RowBox[{"over", "&&", 
                    RowBox[{"CurrentValue", "@", "\"\<AltKey\>\""}], "&&", 
                    RowBox[{"pt2", "=!=", "None"}]}], ",", 
                    RowBox[{"{", 
                    RowBox[{
                    RowBox[{"Antialiasing", "\[Rule]", "False"}], ",", 
                    RowBox[{"AbsoluteThickness", "@", ".25"}], ",", "Red", 
                    ",", 
                    RowBox[{"Dashing", "@", 
                    RowBox[{"{", "}"}]}], ",", 
                    RowBox[{"InfiniteLine", "@", 
                    RowBox[{"{", 
                    RowBox[{"pt2", ",", 
                    RowBox[{"pt2", "+", 
                    RowBox[{"{", 
                    RowBox[{"1", ",", "0"}], "}"}]}]}], "}"}]}], ",", 
                    RowBox[{"InfiniteLine", "@", 
                    RowBox[{"{", 
                    RowBox[{"pt2", ",", 
                    RowBox[{"pt2", "+", 
                    RowBox[{"{", 
                    RowBox[{"0", ",", "1"}], "}"}]}]}], "}"}]}]}], "}"}], ",", 
                    RowBox[{"{", "}"}]}], "]"}]}], "}"}]}], "}"}]}]}], "]"}], 
                    ",", 
                    RowBox[{"Which", "[", 
                    RowBox[{
                    RowBox[{"over", "&&", 
                    RowBox[{"CurrentValue", "@", "\"\<AltKey\>\""}], "&&", 
                    RowBox[{"pt2", "=!=", "None"}]}], ",", 
                    RowBox[{"Graphics", "@", 
                    RowBox[{"{", 
                    RowBox[{"Text", "[", 
                    RowBox[{"pt2", ",", "pt2", ",", 
                    RowBox[{"-", 
                    RowBox[{"{", 
                    RowBox[{"1.1", ",", "1"}], "}"}]}], ",", 
                    RowBox[{"Background", "\[Rule]", 
                    RowBox[{"GrayLevel", "[", 
                    RowBox[{"1", ",", ".7"}], "]"}]}]}], "]"}], "}"}]}], ",", 
                    
                    RowBox[{"CurrentValue", "@", "\"\<ShiftKey\>\""}], ",", 
                    "\"\<LinkHand\>\"", ",", 
                    RowBox[{"CurrentValue", "@", "\"\<ControlKey\>\""}], ",", 
                    "\"\<ZoomView\>\"", ",", "True", ",", "Automatic"}], 
                    "]"}]}], "]"}], ",", 
                  RowBox[{"TrackedSymbols", "\[RuleDelayed]", 
                   RowBox[{"{", "gr", "}"}]}]}], "]"}], ",", 
                RowBox[{"{", 
                 RowBox[{
                  RowBox[{"\"\<MouseEntered\>\"", "\[RuleDelayed]", 
                   RowBox[{"(", 
                    RowBox[{"over", "=", "True"}], ")"}]}], ",", 
                  RowBox[{"\"\<MouseExited\>\"", "\[RuleDelayed]", 
                   RowBox[{"(", 
                    RowBox[{"over", "=", "False"}], ")"}]}], ",", 
                  RowBox[{"\"\<MouseMoved\>\"", "\[RuleDelayed]", 
                   RowBox[{"(", 
                    RowBox[{
                    RowBox[{"pt2", "=", 
                    RowBox[{"MousePosition", "@", "\"\<Graphics\>\""}]}], 
                    ";"}], ")"}]}], ",", 
                  RowBox[{"\"\<MouseClicked\>\"", "\[RuleDelayed]", 
                   RowBox[{"(", 
                    RowBox[{
                    RowBox[{"If", "[", 
                    RowBox[{
                    RowBox[{
                    RowBox[{"CurrentValue", "@", "\"\<MouseClickCount\>\""}], 
                    "\[Equal]", "2"}], ",", 
                    RowBox[{"set", "@", "defRange"}]}], "]"}], ";"}], ")"}]}],
                   ",", 
                  RowBox[{"\"\<MouseDown\>\"", "\[RuleDelayed]", 
                   RowBox[{"(", 
                    RowBox[{
                    RowBox[{"pt1", "=", 
                    RowBox[{"MousePosition", "@", "\"\<Graphics\>\""}]}], ";",
                     "\[IndentingNewLine]", 
                    RowBox[{"pt1sc", "=", 
                    RowBox[{
                    "MousePosition", "@", "\"\<GraphicsScaled\>\""}]}], ";"}],
                     ")"}]}], ",", 
                  RowBox[{"\"\<MouseUp\>\"", "\[RuleDelayed]", 
                   RowBox[{"(", 
                    RowBox[{
                    RowBox[{"If", "[", 
                    RowBox[{
                    RowBox[{
                    RowBox[{"CurrentValue", "@", "\"\<ControlKey\>\""}], "&&", 
                    RowBox[{
                    RowBox[{"d", "[", 
                    RowBox[{"pt1", ",", "pt2", ",", "new"}], "]"}], ">", 
                    "min"}]}], ",", 
                    RowBox[{
                    RowBox[{"range", "=", 
                    RowBox[{"Transpose", "@", 
                    RowBox[{"Sort", "@", 
                    RowBox[{"{", 
                    RowBox[{"pt1", ",", "pt2"}], "}"}]}]}]}], ";"}]}], "]"}], 
                    ";", 
                    RowBox[{"set", "@", "range"}], ";"}], ")"}]}], ",", 
                  RowBox[{"\"\<MouseDragged\>\"", "\[RuleDelayed]", 
                   RowBox[{"(", 
                    RowBox[{
                    RowBox[{"pt2", "=", 
                    RowBox[{"MousePosition", "@", "\"\<Graphics\>\""}]}], ";",
                     "\[IndentingNewLine]", 
                    RowBox[{"pt2sc", "=", 
                    RowBox[{
                    "MousePosition", "@", "\"\<GraphicsScaled\>\""}]}], ";", 
                    "\[IndentingNewLine]", 
                    RowBox[{"Which", "[", 
                    RowBox[{
                    RowBox[{"CurrentValue", "@", "\"\<ShiftKey\>\""}], ",", 
                    RowBox[{
                    RowBox[{"pt2", "=", 
                    RowBox[{
                    RowBox[{"MapThread", "[", 
                    RowBox[{"Rescale", ",", 
                    RowBox[{"{", 
                    RowBox[{
                    RowBox[{"MousePosition", "@", "\"\<GraphicsScaled\>\""}], 
                    ",", 
                    RowBox[{"{", 
                    RowBox[{
                    RowBox[{"{", 
                    RowBox[{"0", ",", "1"}], "}"}], ",", 
                    RowBox[{"{", 
                    RowBox[{"0", ",", "1"}], "}"}]}], "}"}], ",", "new"}], 
                    "}"}]}], "]"}], "-", "pt1"}]}], ";", 
                    "\[IndentingNewLine]", 
                    RowBox[{"range", "=", 
                    RowBox[{"new", "-", "pt2"}]}], ";"}], ",", 
                    RowBox[{"(*", "Panning", "*)"}], 
                    RowBox[{"CurrentValue", "@", "\"\<ControlKey\>\""}], ",", 
                    
                    RowBox[{
                    RowBox[{"rect", "=", 
                    RowBox[{"If", "[", 
                    RowBox[{
                    RowBox[{
                    RowBox[{"pt1", "===", "None"}], "||", 
                    RowBox[{"pt2", "===", "None"}]}], ",", 
                    RowBox[{"{", "}"}], ",", 
                    RowBox[{"Rectangle", "[", 
                    RowBox[{"pt1", ",", "pt2"}], "]"}]}], "]"}]}], ";"}], ",", 
                    RowBox[{"(*", 
                    RowBox[{"Zooming", " ", "rectangle"}], "*)"}], "True", 
                    ",", 
                    RowBox[{
                    RowBox[{"f", "=", 
                    RowBox[{"10", "^", 
                    RowBox[{"(", 
                    RowBox[{"pt1sc", "-", "pt2sc"}], ")"}]}]}], ";", 
                    "\[IndentingNewLine]", 
                    RowBox[{"range", "=", 
                    RowBox[{
                    RowBox[{"(", 
                    RowBox[{"mid", "+", 
                    RowBox[{
                    RowBox[{"(", 
                    RowBox[{"1", "-", "f"}], ")"}], " ", 
                    RowBox[{"(", 
                    RowBox[{"pt1", "-", "mid"}], ")"}]}]}], ")"}], "+", 
                    RowBox[{
                    RowBox[{"f", "/", "2"}], " ", 
                    RowBox[{
                    RowBox[{"{", 
                    RowBox[{
                    RowBox[{"-", "len"}], ",", "len"}], "}"}], 
                    "\[Transpose]"}]}]}]}]}]}], 
                    RowBox[{"(*", 
                    RowBox[{"Zofom", " ", "on", " ", "`pt1`"}], "*)"}], 
                    "]"}]}], ")"}]}]}], "}"}], ",", 
                RowBox[{"PassEventsDown", "\[Rule]", "True"}], ",", 
                RowBox[{"PassEventsUp", "\[Rule]", "True"}]}], "]"}], ",", 
              RowBox[{"Dynamic", "[", 
               RowBox[{"size", ",", 
                RowBox[{
                 RowBox[{"(", 
                  RowBox[{
                   RowBox[{"size", "=", "#"}], ";", "\[IndentingNewLine]", 
                   RowBox[{"If", "[", 
                    RowBox[{
                    RowBox[{"CurrentValue", "@", "\"\<ControlKey\>\""}], ",", 
                    
                    RowBox[{"ratio", "=", 
                    RowBox[{"Divide", "@@", 
                    RowBox[{"Reverse", "@", "#"}]}]}]}], "]"}]}], ")"}], 
                 "&"}]}], "]"}], ",", 
              RowBox[{"AppearanceElements", "\[Rule]", "\"\<ResizeArea\>\""}],
               ",", 
              RowBox[{"ImageMargins", "\[Rule]", "0"}], ",", 
              RowBox[{"FrameMargins", "\[Rule]", "0"}]}], "]"}]}]}]}], 
         "]"}]}], "]"}]}]}], "]"}]}], ";"}], "\[IndentingNewLine]"}], "Input",\

 Editable->False,
 Deletable->False,
 CellOpen->False,
 InitializationCell->True,
 CellChangeTimes->{{3.761860400533601*^9, 3.761860401858004*^9}, 
   3.7618606309892483`*^9},
 CellLabel->"In[1]:=",ExpressionUUID->"e4987acd-e530-44cf-8707-04b646112b6b"],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"\:0421licker2", "=", "0"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"clear", "=", "0"}], ";"}], 
  "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{"Panel", "[", 
  RowBox[{
   RowBox[{"Grid", "[", 
    RowBox[{"{", "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{"{", "\"\<Do Not Work with Multiple Files\>\"", "}"}], ",", 
      "\[IndentingNewLine]", 
      RowBox[{"{", "}"}], ",", "\[IndentingNewLine]", "\[IndentingNewLine]", 
      RowBox[{"{", 
       RowBox[{"Button", "[", 
        RowBox[{
         RowBox[{"Style", "[", 
          RowBox[{"\"\<Data to Open\>\"", ",", "Bold"}], "]"}], ",", 
         "\[IndentingNewLine]", "\[IndentingNewLine]", 
         RowBox[{
          RowBox[{"dir", "=", 
           RowBox[{
           "SetDirectory", "[", 
            "\"\<D:/Melnikov/00_Experimental_Data/2020/FEL\>\"", "]"}]}], ";",
           "\[IndentingNewLine]", 
          RowBox[{"file", "=", 
           RowBox[{"SystemDialogInput", "[", 
            RowBox[{"\"\<FileOpen\>\"", ",", 
             RowBox[{"{", 
              RowBox[{"dir", ",", 
               RowBox[{"{", 
                RowBox[{"\"\<TSV Files\>\"", "\[Rule]", 
                 RowBox[{"{", "\"\<*.dat\>\"", "}"}]}], "}"}]}], "}"}], ",", 
             RowBox[{
             "WindowTitle", "\[Rule]", "\"\<Open TR Raw Data...\>\""}]}], 
            "]"}]}], ";", "\[IndentingNewLine]", "\[IndentingNewLine]", 
          RowBox[{"(*", 
           RowBox[{
            RowBox[{"dir", "=", 
             RowBox[{
             "SetDirectory", "[", 
              "\"\</home/anatoly/Documents/Experimental_Data/\>\"", "]"}]}], 
            ";", "\[IndentingNewLine]", 
            RowBox[{"file", "=", 
             RowBox[{"SystemDialogInput", "[", 
              RowBox[{"\"\<FileOpen\>\"", ",", 
               RowBox[{"{", 
                RowBox[{"dir", ",", 
                 RowBox[{"{", 
                  RowBox[{"\"\<BIN Files\>\"", "\[Rule]", 
                   RowBox[{"{", "\"\<*.bin\>\"", "}"}]}], "}"}]}], "}"}], ",", 
               RowBox[{
               "WindowTitle", "\[Rule]", "\"\<Open TR Raw Data...\>\""}]}], 
              "]"}]}], ";"}], "*)"}], "\[IndentingNewLine]", 
          "\[IndentingNewLine]", 
          RowBox[{
           RowBox[{"If", "[", 
            RowBox[{
             RowBox[{
              RowBox[{"Head", "[", "file", "]"}], "\[Equal]", "List"}], ",", 
             RowBox[{"fileData", "=", 
              RowBox[{"Map", "[", "\[IndentingNewLine]", 
               RowBox[{
                RowBox[{
                 RowBox[{"Drop", "[", 
                  RowBox[{"#", ",", "14"}], "]"}], "&"}], ",", 
                RowBox[{"If", "[", 
                 RowBox[{
                  RowBox[{"file", "=!=", "$Canceled"}], ",", 
                  RowBox[{"Map", "[", 
                   RowBox[{
                    RowBox[{
                    RowBox[{"Import", "[", 
                    RowBox[{"#", ",", "\"\<TSV\>\""}], "]"}], "&"}], ",", 
                    "file"}], "]"}], ",", "\"\<Nothing\>\""}], "]"}]}], 
               "\[IndentingNewLine]", "]"}]}]}], "\[IndentingNewLine]", "]"}],
            "\[IndentingNewLine]", "\[IndentingNewLine]", 
           RowBox[{"If", "[", 
            RowBox[{
             RowBox[{
              RowBox[{"Head", "[", "file", "]"}], "\[Equal]", "String"}], ",", 
             RowBox[{"fileData", "=", 
              RowBox[{"Drop", "[", 
               RowBox[{
                RowBox[{"If", "[", 
                 RowBox[{
                  RowBox[{"file", "=!=", "$Canceled"}], ",", 
                  RowBox[{"Import", "[", 
                   RowBox[{"file", ",", "\"\<TSV\>\""}], "]"}], ",", 
                  "\"\<Nothing\>\""}], "]"}], ",", "14"}], "]"}]}]}], 
            "\[IndentingNewLine]", "]"}]}], ";", "\[IndentingNewLine]", 
          "\[IndentingNewLine]", 
          RowBox[{"data1", "=", 
           RowBox[{"Transpose", "[", 
            RowBox[{"{", 
             RowBox[{
              RowBox[{"fileData", "[", 
               RowBox[{"[", 
                RowBox[{"All", ",", "1"}], "]"}], "]"}], ",", 
              RowBox[{"fileData", "[", 
               RowBox[{"[", 
                RowBox[{"All", ",", "2"}], "]"}], "]"}]}], "}"}], "]"}]}], 
          ";", "\[IndentingNewLine]", 
          RowBox[{"data2", "=", 
           RowBox[{"Transpose", "[", 
            RowBox[{"{", 
             RowBox[{
              RowBox[{"fileData", "[", 
               RowBox[{"[", 
                RowBox[{"All", ",", "1"}], "]"}], "]"}], ",", 
              RowBox[{"fileData", "[", 
               RowBox[{"[", 
                RowBox[{"All", ",", "3"}], "]"}], "]"}]}], "}"}], "]"}]}], 
          ";", "\[IndentingNewLine]", "\[IndentingNewLine]", 
          RowBox[{"\:0421licker2", "=", "1"}], ";", "\[IndentingNewLine]", 
          RowBox[{"clear", "=", "1"}], ";", "\[IndentingNewLine]", 
          RowBox[{"ClearAll", "[", "dir", "]"}], ";"}], "\[IndentingNewLine]",
          "\[IndentingNewLine]", ",", 
         RowBox[{"FrameMargins", "\[Rule]", "10"}], ",", 
         RowBox[{"Method", "\[Rule]", "\"\<Queued\>\""}]}], "]"}], 
       "\[IndentingNewLine]", "}"}]}], "\[IndentingNewLine]", 
     "\[IndentingNewLine]", "}"}], "]"}], ",", 
   RowBox[{"FrameMargins", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{"40", ",", "30"}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"15", ",", "15"}], "}"}]}], "}"}]}], ",", 
   RowBox[{"Background", "\[Rule]", 
    RowBox[{"Lighter", "[", 
     RowBox[{"Gray", ",", " ", "0.97"}], "]"}]}]}], "\[IndentingNewLine]", 
  "]"}], "\[IndentingNewLine]"}], "Input",
 Editable->False,
 Deletable->False,
 CellOpen->False,
 InitializationCell->True,
 CellChangeTimes->{{3.7583199793622513`*^9, 3.758320117553156*^9}, {
   3.7583202498337216`*^9, 3.7583202529779015`*^9}, {3.7583241596613507`*^9, 
   3.758324162331504*^9}, {3.758324864828684*^9, 3.758324898195593*^9}, {
   3.75834389234319*^9, 3.7583439206784844`*^9}, {3.758344065415558*^9, 
   3.7583441055582294`*^9}, {3.758344175081403*^9, 3.758344178270878*^9}, 
   3.758410262063575*^9, {3.758421377507607*^9, 3.7584213776262884`*^9}, {
   3.7588407475620193`*^9, 3.7588409479712067`*^9}, {3.7588410508980265`*^9, 
   3.7588410526802645`*^9}, {3.7588411112057734`*^9, 3.758841154886004*^9}, {
   3.7588431022442837`*^9, 3.7588431049590473`*^9}, {3.7588510558726807`*^9, 
   3.7588510742036686`*^9}, {3.7588511201278863`*^9, 3.758851126485891*^9}, {
   3.7588511579856806`*^9, 3.7588511810908847`*^9}, {3.7589491270536256`*^9, 
   3.758949129446251*^9}, {3.7590422481769686`*^9, 3.759042286176279*^9}, {
   3.759102150984763*^9, 3.7591022036817245`*^9}, {3.759187185438345*^9, 
   3.759187186267156*^9}, {3.7592801960727043`*^9, 3.759280270643981*^9}, {
   3.759283081311727*^9, 3.759283086093965*^9}, {3.759283525112187*^9, 
   3.7592835287091713`*^9}, {3.759285018201902*^9, 3.759285018974512*^9}, {
   3.7594432405410824`*^9, 3.759443243659396*^9}, {3.7594598492556887`*^9, 
   3.7594598589627542`*^9}, {3.759459958196304*^9, 3.75946000407561*^9}, {
   3.7595303765939093`*^9, 3.75953039457477*^9}, {3.759792633225049*^9, 
   3.759792656561067*^9}, {3.75980316650548*^9, 3.759803182889217*^9}, {
   3.7598051951146173`*^9, 3.759805206569365*^9}, {3.75980523877748*^9, 
   3.7598052678820477`*^9}, {3.759805300802846*^9, 3.7598053434019957`*^9}, {
   3.759805558335092*^9, 3.759805625627763*^9}, {3.760064060542535*^9, 
   3.760064065668839*^9}, {3.7613651181648912`*^9, 3.7613651419897118`*^9}, {
   3.761366713563677*^9, 3.761366733286996*^9}, {3.7616380616368303`*^9, 
   3.7616380623552237`*^9}, {3.761860000512301*^9, 3.761860003952832*^9}, {
   3.761860042370098*^9, 3.7618600436545677`*^9}, {3.761861397107924*^9, 
   3.7618614064985657`*^9}, {3.762848390232623*^9, 3.762848390710692*^9}, {
   3.765231839074293*^9, 3.765231893065723*^9}, {3.765232073599345*^9, 
   3.765232079036667*^9}, {3.76523211890998*^9, 3.7652321508637953`*^9}, {
   3.774754548776937*^9, 3.774754553641597*^9}, {3.774754864872863*^9, 
   3.77475486708782*^9}, {3.774821481846813*^9, 3.774821482564135*^9}, {
   3.774821605687698*^9, 3.774821606151472*^9}, {3.775352438964493*^9, 
   3.775352454241323*^9}, {3.775352971086817*^9, 3.775352976330806*^9}, {
   3.7753536094951677`*^9, 3.7753536112965107`*^9}, {3.775353843289695*^9, 
   3.775353851197946*^9}, {3.775855995599946*^9, 3.7758560192602253`*^9}, {
   3.7947874820289764`*^9, 3.7947874823421345`*^9}},
 CellLabel->"In[18]:=",ExpressionUUID->"0f086285-d963-41bd-82ef-cd66ee5b0fdb"],

Cell[BoxData[
 PanelBox[
  TagBox[GridBox[{
     {"\<\"Do Not Work with Multiple Files\"\>"},
     {""},
     {
      ButtonBox[
       StyleBox["\<\"Data to Open\"\>",
        StripOnInput->False,
        FontWeight->Bold],
       Appearance->Automatic,
       ButtonFunction:>($CellContext`dir = 
         SetDirectory[
          "D:/Melnikov/00_Experimental_Data/2020/FEL"]; $CellContext`file = 
         SystemDialogInput[
          "FileOpen", {$CellContext`dir, {"TSV Files" -> {"*.dat"}}}, 
           WindowTitle -> "Open TR Raw Data..."]; 
        If[Head[$CellContext`file] == List, $CellContext`fileData = 
           Map[Drop[#, 14]& , 
             If[$CellContext`file =!= $Canceled, 
              Map[Import[#, "TSV"]& , $CellContext`file], "Nothing"]]] 
         If[Head[$CellContext`file] == String, $CellContext`fileData = Drop[
             If[$CellContext`file =!= $Canceled, 
              Import[$CellContext`file, "TSV"], "Nothing"], 
             14]]; $CellContext`data1 = Transpose[{
            Part[$CellContext`fileData, All, 1], 
            Part[$CellContext`fileData, All, 2]}]; $CellContext`data2 = 
         Transpose[{
            Part[$CellContext`fileData, All, 1], 
            Part[$CellContext`fileData, All, 3]}]; $CellContext`\:0421licker2 = 
         1; $CellContext`clear = 1; ClearAll[$CellContext`dir]; Null),
       Evaluator->Automatic,
       FrameMargins->10,
       Method->"Queued"]}
    },
    AutoDelete->False,
    GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
   "Grid"],
  Background->RGBColor[0.985, 0.985, 0.985],
  FrameMargins->{{40, 30}, {15, 15}}]], "Output",
 CellChangeTimes->{{3.759805622814447*^9, 3.759805629241589*^9}, {
   3.760064050970495*^9, 3.7600640661930313`*^9}, {3.760064191207078*^9, 
   3.7600642104508677`*^9}, 3.7613651116824083`*^9, 3.761365706204769*^9, 
   3.7613660037265863`*^9, 3.761366739569127*^9, {3.7616380513527718`*^9, 
   3.761638067616352*^9}, 3.761639742508314*^9, 3.761859860913806*^9, 
   3.761860008878622*^9, 3.761860044269744*^9, 3.761860545016171*^9, {
   3.761861414116736*^9, 3.761861423815649*^9}, 3.7618617474443407`*^9, 
   3.761862034199197*^9, 3.7618620666646223`*^9, 3.762637553347295*^9, 
   3.762668885053376*^9, 3.762848275777543*^9, 3.7628483931512127`*^9, 
   3.7630709807217617`*^9, {3.7652318289607077`*^9, 3.765231871300179*^9}, 
   3.765232104290763*^9, {3.76523213968113*^9, 3.7652321514680243`*^9}, 
   3.765233094828479*^9, 3.766182932702311*^9, {3.774754534342494*^9, 
   3.7747545678002157`*^9}, 3.774754635442937*^9, {3.774754858417528*^9, 
   3.774754868283792*^9}, 3.774821463133914*^9, {3.77482160372919*^9, 
   3.7748216109023943`*^9}, 3.774842602979721*^9, 3.775350696477866*^9, 
   3.77535246071276*^9, 3.7753529814057837`*^9, 3.775353087327054*^9, {
   3.775353612001924*^9, 3.7753536263216267`*^9}, 3.775353851764422*^9, 
   3.775855984185974*^9, 3.77585602106153*^9, 3.7947872907027545`*^9, {
   3.7947874842161045`*^9, 3.7947874948422594`*^9}, 3.8074993382313943`*^9},
 CellLabel->"Out[20]=",ExpressionUUID->"e7a8993e-87bd-4112-b8c3-e334086457f0"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"Panel", "[", 
   RowBox[{
    RowBox[{"Grid", "[", 
     RowBox[{"{", "\[IndentingNewLine]", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"\"\<Plot Explorer Function:\>\"", ",", " ", 
         RowBox[{"Checkbox", "[", 
          RowBox[{
           RowBox[{"Dynamic", "[", "z", "]"}], ",", 
           RowBox[{"{", 
            RowBox[{"1", ",", "2"}], "}"}]}], "]"}]}], "}"}], ",", 
       "\[IndentingNewLine]", 
       RowBox[{"{", "}"}], ",", "\[IndentingNewLine]", 
       RowBox[{"{", 
        RowBox[{"Button", "[", 
         RowBox[{
          RowBox[{"Style", "[", 
           RowBox[{"\"\<RePlot\>\"", ",", "Bold"}], "]"}], ",", 
          "\[IndentingNewLine]", 
          RowBox[{
           RowBox[{"If", "[", 
            RowBox[{
             RowBox[{
              RowBox[{"Head", "[", "data1", "]"}], "\[Equal]", "List"}], ",", 
             "\[IndentingNewLine]", 
             RowBox[{"clear", "=", "1"}], ",", 
             RowBox[{"clear", "=", "0"}]}], "]"}], ";", "\[IndentingNewLine]",
            "\[IndentingNewLine]", 
           RowBox[{"grPE", "=", 
            RowBox[{"PlotExplorer", "@", 
             RowBox[{"ListLinePlot", "[", 
              RowBox[{
               RowBox[{"{", 
                RowBox[{"data1", ",", "data2"}], "}"}], ",", 
               RowBox[{"PlotRange", "\[Rule]", "All"}], ",", 
               RowBox[{"Frame", "\[Rule]", 
                RowBox[{"{", 
                 RowBox[{"True", ",", "True"}], "}"}]}], ",", 
               RowBox[{"FrameTicks", "\[Rule]", " ", 
                RowBox[{"{", 
                 RowBox[{"Automatic", ",", "None"}], "}"}]}], ",", 
               RowBox[{"FrameLabel", "\[Rule]", 
                RowBox[{"{", "\"\<Magnetic Field / G\>\"", "}"}]}], ",", 
               RowBox[{"GridLines", "\[Rule]", "Automatic"}], ",", 
               RowBox[{"PlotStyle", "\[Rule]", 
                RowBox[{"{", 
                 RowBox[{
                  RowBox[{"{", 
                   RowBox[{"Red", ",", "Thick"}], "}"}], ",", 
                  RowBox[{"{", 
                   RowBox[{"Blue", ",", "Thick"}], "}"}], ",", 
                  RowBox[{"{", 
                   RowBox[{"Gray", ",", "Thick"}], "}"}], ",", 
                  RowBox[{"{", 
                   RowBox[{"Pink", ",", "Thick"}], "}"}], ",", 
                  RowBox[{"{", 
                   RowBox[{"Orange", ",", "Thick"}], "}"}], ",", 
                  RowBox[{"{", 
                   RowBox[{"Purple", ",", "Thick"}], "}"}], ",", 
                  RowBox[{"{", 
                   RowBox[{"Yellow", ",", "Thick"}], "}"}], ",", 
                  RowBox[{"{", 
                   RowBox[{"Brown", ",", "Thick"}], "}"}]}], "}"}]}], ",", 
               RowBox[{"GridLinesStyle", "\[Rule]", 
                RowBox[{"Directive", "[", 
                 RowBox[{"Gray", ",", "Dotted", ",", "Thin"}], "]"}]}], ",", 
               RowBox[{"ScalingFunctions", "\[Rule]", 
                RowBox[{"{", 
                 RowBox[{"Identity", ",", "Identity"}], "}"}]}], ",", 
               RowBox[{"ImageSize", "\[Rule]", 
                RowBox[{"{", 
                 RowBox[{"600", ",", "400"}], "}"}]}], ",", 
               RowBox[{"FrameTicks", "\[Rule]", 
                RowBox[{"{", 
                 RowBox[{
                  RowBox[{"{", 
                   RowBox[{"Automatic", ",", "None"}], "}"}], ",", 
                  RowBox[{"{", 
                   RowBox[{"Automatic", ",", "None"}], "}"}]}], "}"}]}]}], 
              "]"}]}]}], ";", "\[IndentingNewLine]", "\[IndentingNewLine]", 
           RowBox[{"gr", "=", 
            RowBox[{"ListLinePlot", "[", 
             RowBox[{
              RowBox[{"{", 
               RowBox[{"data1", ",", "data2"}], "}"}], ",", 
              RowBox[{"PlotRange", "\[Rule]", "All"}], ",", 
              RowBox[{"Frame", "\[Rule]", 
               RowBox[{"{", 
                RowBox[{"True", ",", "True"}], "}"}]}], ",", 
              RowBox[{"FrameTicks", "\[Rule]", " ", 
               RowBox[{"{", 
                RowBox[{"Automatic", ",", "None"}], "}"}]}], ",", 
              RowBox[{"FrameLabel", "\[Rule]", 
               RowBox[{"{", "\"\<Magnetic Field / G\>\"", "}"}]}], ",", 
              RowBox[{"GridLines", "\[Rule]", "Automatic"}], ",", 
              RowBox[{"PlotStyle", "\[Rule]", 
               RowBox[{"{", 
                RowBox[{
                 RowBox[{"{", 
                  RowBox[{"Red", ",", "Thick"}], "}"}], ",", 
                 RowBox[{"{", 
                  RowBox[{"Blue", ",", "Thick"}], "}"}], ",", 
                 RowBox[{"{", 
                  RowBox[{"Gray", ",", "Thick"}], "}"}], ",", 
                 RowBox[{"{", 
                  RowBox[{"Pink", ",", "Thick"}], "}"}], ",", 
                 RowBox[{"{", 
                  RowBox[{"Orange", ",", "Thick"}], "}"}], ",", 
                 RowBox[{"{", 
                  RowBox[{"Purple", ",", "Thick"}], "}"}], ",", 
                 RowBox[{"{", 
                  RowBox[{"Yellow", ",", "Thick"}], "}"}], ",", 
                 RowBox[{"{", 
                  RowBox[{"Brown", ",", "Thick"}], "}"}]}], "}"}]}], ",", 
              RowBox[{"GridLinesStyle", "\[Rule]", 
               RowBox[{"Directive", "[", 
                RowBox[{"Gray", ",", "Dotted", ",", "Thin"}], "]"}]}], ",", 
              RowBox[{"ScalingFunctions", "\[Rule]", 
               RowBox[{"{", 
                RowBox[{"Identity", ",", "Identity"}], "}"}]}], ",", 
              RowBox[{"ImageSize", "\[Rule]", 
               RowBox[{"{", 
                RowBox[{"600", ",", "400"}], "}"}]}], ",", 
              RowBox[{"FrameTicks", "\[Rule]", 
               RowBox[{"{", 
                RowBox[{
                 RowBox[{"{", 
                  RowBox[{"Automatic", ",", "None"}], "}"}], ",", 
                 RowBox[{"{", 
                  RowBox[{"Automatic", ",", "None"}], "}"}]}], "}"}]}], ",", 
              RowBox[{"PlotLegends", "\[Rule]", 
               RowBox[{"Placed", "[", 
                RowBox[{
                 RowBox[{"StringJoin", "[", 
                  RowBox[{"file", ",", "\"\<\n\>\""}], "]"}], ",", "Above"}], 
                "]"}]}]}], "]"}]}], ";"}], "\[IndentingNewLine]", 
          "\[IndentingNewLine]", ",", 
          RowBox[{"FrameMargins", "\[Rule]", "10"}], ",", 
          RowBox[{"Method", "\[Rule]", "\"\<Queued\>\""}]}], "]"}], 
        "\[IndentingNewLine]", "\[IndentingNewLine]", "\[IndentingNewLine]", 
        "}"}], ",", "\[IndentingNewLine]", 
       RowBox[{"{", 
        RowBox[{"Button", "[", 
         RowBox[{
          RowBox[{"Style", "[", 
           RowBox[{"\"\<Clear\>\"", ",", "Bold"}], "]"}], ",", 
          "\[IndentingNewLine]", "\[IndentingNewLine]", 
          RowBox[{
           RowBox[{"clear", "=", "0"}], ";"}], "\[IndentingNewLine]", 
          "\[IndentingNewLine]", ",", 
          RowBox[{"FrameMargins", "\[Rule]", "10"}], ",", 
          RowBox[{"Method", "\[Rule]", "\"\<Queued\>\""}]}], "]"}], 
        "\[IndentingNewLine]", "\[IndentingNewLine]", "\[IndentingNewLine]", 
        "}"}]}], "\[IndentingNewLine]", "\[IndentingNewLine]", "}"}], "]"}], 
    ",", 
    RowBox[{"FrameMargins", "\[Rule]", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"40", ",", "30"}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"15", ",", "15"}], "}"}]}], "}"}]}], ",", 
    RowBox[{"Background", "\[Rule]", 
     RowBox[{"Lighter", "[", 
      RowBox[{"Gray", ",", " ", "0.97"}], "]"}]}]}], "\[IndentingNewLine]", 
   "]"}], "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"Panel", "[", 
   RowBox[{
    RowBox[{"Dynamic", "[", 
     RowBox[{"If", "[", 
      RowBox[{
       RowBox[{"clear", "\[Equal]", "1"}], ",", "\[IndentingNewLine]", 
       "\[IndentingNewLine]", 
       RowBox[{"Grid", "[", 
        RowBox[{"{", 
         RowBox[{"{", 
          RowBox[{"Dynamic", "[", 
           RowBox[{"If", "[", 
            RowBox[{
             RowBox[{"z", "\[Equal]", "1"}], ",", "gr", ",", "grPE"}], "]"}], 
           "]"}], "}"}], "}"}], "\[IndentingNewLine]", "]"}], ",", 
       "\"\<Nothing To Show\>\""}], "]"}], "]"}], ",", 
    RowBox[{"FrameMargins", "\[Rule]", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"20", ",", "20"}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"20", ",", "20"}], "}"}]}], "}"}]}], ",", 
    RowBox[{"Background", "\[Rule]", 
     RowBox[{"Lighter", "[", 
      RowBox[{"Gray", ",", " ", "0.97"}], "]"}]}]}], "\[IndentingNewLine]", 
   "]"}], "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"(*", 
   RowBox[{"GridLines", "\[Rule]", 
    RowBox[{
     RowBox[{
      RowBox[{"{", 
       RowBox[{
        RowBox[{"Range", "[", 
         RowBox[{"600", ",", "4000", ",", "200"}], "]"}], ",", 
        RowBox[{"Range", "[", 
         RowBox[{"0", ",", "4", ",", "1"}], "]"}]}], "}"}], 
      "\[IndentingNewLine]", "PlotRange"}], "\[Rule]", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"15", ",", "200"}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"-", "0.1"}], ",", "1"}], "}"}]}], "}"}]}]}], 
   "\[IndentingNewLine]", "*)"}]}]}], "Input",
 Editable->False,
 Deletable->False,
 CellOpen->False,
 InitializationCell->True,
 CellChangeTimes->{{3.759792678993129*^9, 3.7597927346103363`*^9}, {
   3.759793415337851*^9, 3.759793443873281*^9}, {3.759793695846718*^9, 
   3.759793743510069*^9}, {3.7598030113618517`*^9, 3.759803016807354*^9}, {
   3.759803206004681*^9, 3.759803215231331*^9}, {3.759805068715537*^9, 
   3.759805078104952*^9}, {3.759805377067647*^9, 3.75980539984759*^9}, {
   3.7598059482125607`*^9, 3.75980595269004*^9}, {3.76163807324358*^9, 
   3.761638078313398*^9}, 3.7616381766879177`*^9, {3.761638229165717*^9, 
   3.761638229465579*^9}, {3.761639938864603*^9, 3.761639950312586*^9}, {
   3.761640001391013*^9, 3.7616400480512037`*^9}, 3.7616401083785143`*^9, {
   3.761640174531671*^9, 3.7616401796885023`*^9}, {3.7618598752897053`*^9, 
   3.761859875501071*^9}, {3.7618600642629128`*^9, 3.761860125045121*^9}, {
   3.761860191734827*^9, 3.7618602770527*^9}, {3.761860418359152*^9, 
   3.761860419490018*^9}, {3.761860522417178*^9, 3.761860525905583*^9}, {
   3.761860564491832*^9, 3.761860565636043*^9}, {3.761860647109356*^9, 
   3.761860649331519*^9}, {3.761860682348255*^9, 3.761860781834198*^9}, {
   3.761860837510145*^9, 3.761860890517487*^9}, {3.76186093441402*^9, 
   3.761860935508541*^9}, {3.761860993974556*^9, 3.761861011877407*^9}, {
   3.76186105580541*^9, 3.761861146718895*^9}, {3.761861229212901*^9, 
   3.7618613608838587`*^9}, {3.761861451031064*^9, 3.7618614809951677`*^9}, {
   3.761861575229187*^9, 3.761861581695277*^9}, {3.7618617694423018`*^9, 
   3.7618618155347223`*^9}, {3.7626375756855783`*^9, 
   3.7626376774041357`*^9}, {3.762638005762041*^9, 3.7626380388703117`*^9}, {
   3.762638428225033*^9, 3.762638471109045*^9}, {3.76266021498186*^9, 
   3.7626603038418407`*^9}, {3.762660550273506*^9, 3.7626605768442097`*^9}, {
   3.7626606868896513`*^9, 3.762660719149416*^9}, {3.762848363898534*^9, 
   3.7628483743182297`*^9}, {3.762848656169816*^9, 3.762848690882175*^9}, {
   3.765232171327158*^9, 3.7652321836500053`*^9}, {3.765232374177762*^9, 
   3.765232383103073*^9}, {3.7652324315225163`*^9, 3.765232473970523*^9}, {
   3.76618301285478*^9, 3.766183013611024*^9}, {3.775352950820261*^9, 
   3.775353005070898*^9}, {3.775353042454616*^9, 3.77535304294804*^9}, {
   3.775353107293262*^9, 3.77535317248794*^9}, {3.775353208676485*^9, 
   3.775353215231415*^9}, {3.7753538663103333`*^9, 3.7753538857667427`*^9}},
 CellLabel->"In[21]:=",ExpressionUUID->"f7777f90-74af-4529-b5ff-07a6efb70bef"],

Cell[BoxData[
 PanelBox[
  TagBox[GridBox[{
     {"\<\"Plot Explorer Function:\"\>", 
      CheckboxBox[Dynamic[$CellContext`z], {1, 2}]},
     {"", ""},
     {
      ButtonBox[
       StyleBox["\<\"RePlot\"\>",
        StripOnInput->False,
        FontWeight->Bold],
       Appearance->Automatic,
       ButtonFunction:>(
        If[Head[$CellContext`data1] == List, $CellContext`clear = 
          1, $CellContext`clear = 
          0]; $CellContext`grPE = $CellContext`PlotExplorer[
           
           ListLinePlot[{$CellContext`data1, $CellContext`data2}, PlotRange -> 
            All, Frame -> {True, True}, FrameTicks -> {Automatic, None}, 
            FrameLabel -> {"Magnetic Field / G"}, GridLines -> Automatic, 
            PlotStyle -> {{Red, Thick}, {Blue, Thick}, {Gray, Thick}, {
              Pink, Thick}, {Orange, Thick}, {Purple, Thick}, {
              Yellow, Thick}, {Brown, Thick}}, GridLinesStyle -> 
            Directive[Gray, Dotted, Thin], 
            ScalingFunctions -> {Identity, Identity}, ImageSize -> {600, 400},
             FrameTicks -> {{Automatic, None}, {
              Automatic, None}}]]; $CellContext`gr = 
         ListLinePlot[{$CellContext`data1, $CellContext`data2}, PlotRange -> 
           All, Frame -> {True, True}, FrameTicks -> {Automatic, None}, 
           FrameLabel -> {"Magnetic Field / G"}, GridLines -> Automatic, 
           PlotStyle -> {{Red, Thick}, {Blue, Thick}, {Gray, Thick}, {
             Pink, Thick}, {Orange, Thick}, {Purple, Thick}, {
             Yellow, Thick}, {Brown, Thick}}, GridLinesStyle -> 
           Directive[Gray, Dotted, Thin], 
           ScalingFunctions -> {Identity, Identity}, ImageSize -> {600, 400}, 
           FrameTicks -> {{Automatic, None}, {Automatic, None}}, PlotLegends -> 
           Placed[
             StringJoin[$CellContext`file, "\n"], Above]]; Null),
       Evaluator->Automatic,
       FrameMargins->10,
       Method->"Queued"], ""},
     {
      ButtonBox[
       StyleBox["\<\"Clear\"\>",
        StripOnInput->False,
        FontWeight->Bold],
       Appearance->Automatic,
       ButtonFunction:>($CellContext`clear = 0; Null),
       Evaluator->Automatic,
       FrameMargins->10,
       Method->"Queued"], ""}
    },
    AutoDelete->False,
    GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
   "Grid"],
  Background->RGBColor[0.985, 0.985, 0.985],
  FrameMargins->{{40, 30}, {15, 15}}]], "Output",
 CellChangeTimes->{{3.759792675802136*^9, 3.759792711345912*^9}, {
   3.759793430200536*^9, 3.759793444276211*^9}, 3.759793681221651*^9, {
   3.759793728005995*^9, 3.7597937703953743`*^9}, 3.759802935295443*^9, 
   3.759803017302202*^9, {3.7598032068448753`*^9, 3.759803216014174*^9}, 
   3.759805086094503*^9, {3.759805380766626*^9, 3.75980540020942*^9}, 
   3.759805956306101*^9, 3.7600640510676947`*^9, {3.760064191290018*^9, 
   3.760064211359939*^9}, 3.7613651117694073`*^9, 3.761365706305677*^9, 
   3.761366003828371*^9, {3.7613667396229258`*^9, 3.761366767898406*^9}, 
   3.761638051400704*^9, 3.761638084814555*^9, 3.761638177284801*^9, 
   3.761638230086871*^9, 3.7616397426233273`*^9, 3.761639950689933*^9, {
   3.761640002283012*^9, 3.761640048985956*^9}, 3.761640108965384*^9, 
   3.7616401801756773`*^9, {3.761859864562354*^9, 3.761859876019665*^9}, 
   3.7618600301310377`*^9, {3.761860067961502*^9, 3.761860077063527*^9}, 
   3.761860125460781*^9, {3.761860193287489*^9, 3.761860277394356*^9}, 
   3.761860420254352*^9, 3.761860462095729*^9, {3.761860527139517*^9, 
   3.7618605665308867`*^9}, 3.761860649768258*^9, 3.7618606856701307`*^9, {
   3.761860784570513*^9, 3.761860807545747*^9}, {3.761860845427898*^9, 
   3.7618608576686974`*^9}, 3.761860890794919*^9, {3.761860995053187*^9, 
   3.761861012242219*^9}, {3.7618610925231256`*^9, 3.7618611470793858`*^9}, 
   3.7618612319730453`*^9, {3.7618612873343983`*^9, 3.761861368760993*^9}, {
   3.761861437136972*^9, 3.761861532760212*^9}, {3.76186157666877*^9, 
   3.761861582638401*^9}, {3.761861670213071*^9, 3.761861674184978*^9}, {
   3.761861705472146*^9, 3.761861826425869*^9}, {3.761861860074122*^9, 
   3.76186190183447*^9}, 3.761862034211376*^9, 3.7618620666771507`*^9, 
   3.762637553365075*^9, {3.76263758341486*^9, 3.7626376032091*^9}, 
   3.762637634137103*^9, 3.7626376779841003`*^9, {3.762638026195155*^9, 
   3.762638041887945*^9}, {3.762638412850877*^9, 3.762638422609586*^9}, {
   3.7626384714001093`*^9, 3.76263850403253*^9}, {3.762660237064076*^9, 
   3.7626602518110523`*^9}, 3.762660304870099*^9, {3.762660339096448*^9, 
   3.762660357478224*^9}, {3.762660556444415*^9, 3.762660581329095*^9}, {
   3.762660691945616*^9, 3.762660743096077*^9}, 3.7626688850701714`*^9, 
   3.7628482757928953`*^9, {3.762848315859827*^9, 3.762848316939889*^9}, 
   3.76284837600603*^9, 3.762848662184683*^9, 3.762848694079556*^9, 
   3.7630709807403297`*^9, 3.765231828987376*^9, 3.76523238354703*^9, {
   3.765232438696801*^9, 3.765232474818057*^9}, 3.765233094846881*^9, {
   3.765233137412224*^9, 3.765233147755866*^9}, 3.7661829327228117`*^9, {
   3.766182968642089*^9, 3.7661829790019217`*^9}, {3.7661830140391483`*^9, 
   3.766183041602181*^9}, 3.774754534361884*^9, 3.774754635470203*^9, 
   3.774754858436537*^9, 3.774821463153285*^9, 3.7748216037503443`*^9, 
   3.774842602998596*^9, 3.775350696497609*^9, 3.775353005589275*^9, 
   3.775353044889385*^9, {3.775353116361103*^9, 3.7753531856658983`*^9}, {
   3.775353216018454*^9, 3.775353226545833*^9}, {3.775353626351636*^9, 
   3.775353636841164*^9}, 3.775353886851317*^9, 3.7758559842456417`*^9, 
   3.794787294736829*^9, 3.8074993382613783`*^9},
 CellLabel->"Out[21]=",ExpressionUUID->"dda76f25-4f1f-4ae2-b079-fa37d55063d3"],

Cell[BoxData[
 PanelBox[
  DynamicBox[ToBoxes[
    If[$CellContext`clear == 1, 
     Grid[{{
        Dynamic[
         If[$CellContext`z == 1, $CellContext`gr, $CellContext`grPE]]}}], 
     "Nothing To Show"], StandardForm],
   ImageSizeCache->{1107., {216.5, 222.5}}],
  Background->RGBColor[0.985, 0.985, 0.985],
  FrameMargins->{{20, 20}, {20, 20}}]], "Output",
 CellChangeTimes->{{3.759792675802136*^9, 3.759792711345912*^9}, {
   3.759793430200536*^9, 3.759793444276211*^9}, 3.759793681221651*^9, {
   3.759793728005995*^9, 3.7597937703953743`*^9}, 3.759802935295443*^9, 
   3.759803017302202*^9, {3.7598032068448753`*^9, 3.759803216014174*^9}, 
   3.759805086094503*^9, {3.759805380766626*^9, 3.75980540020942*^9}, 
   3.759805956306101*^9, 3.7600640510676947`*^9, {3.760064191290018*^9, 
   3.760064211359939*^9}, 3.7613651117694073`*^9, 3.761365706305677*^9, 
   3.761366003828371*^9, {3.7613667396229258`*^9, 3.761366767898406*^9}, 
   3.761638051400704*^9, 3.761638084814555*^9, 3.761638177284801*^9, 
   3.761638230086871*^9, 3.7616397426233273`*^9, 3.761639950689933*^9, {
   3.761640002283012*^9, 3.761640048985956*^9}, 3.761640108965384*^9, 
   3.7616401801756773`*^9, {3.761859864562354*^9, 3.761859876019665*^9}, 
   3.7618600301310377`*^9, {3.761860067961502*^9, 3.761860077063527*^9}, 
   3.761860125460781*^9, {3.761860193287489*^9, 3.761860277394356*^9}, 
   3.761860420254352*^9, 3.761860462095729*^9, {3.761860527139517*^9, 
   3.7618605665308867`*^9}, 3.761860649768258*^9, 3.7618606856701307`*^9, {
   3.761860784570513*^9, 3.761860807545747*^9}, {3.761860845427898*^9, 
   3.7618608576686974`*^9}, 3.761860890794919*^9, {3.761860995053187*^9, 
   3.761861012242219*^9}, {3.7618610925231256`*^9, 3.7618611470793858`*^9}, 
   3.7618612319730453`*^9, {3.7618612873343983`*^9, 3.761861368760993*^9}, {
   3.761861437136972*^9, 3.761861532760212*^9}, {3.76186157666877*^9, 
   3.761861582638401*^9}, {3.761861670213071*^9, 3.761861674184978*^9}, {
   3.761861705472146*^9, 3.761861826425869*^9}, {3.761861860074122*^9, 
   3.76186190183447*^9}, 3.761862034211376*^9, 3.7618620666771507`*^9, 
   3.762637553365075*^9, {3.76263758341486*^9, 3.7626376032091*^9}, 
   3.762637634137103*^9, 3.7626376779841003`*^9, {3.762638026195155*^9, 
   3.762638041887945*^9}, {3.762638412850877*^9, 3.762638422609586*^9}, {
   3.7626384714001093`*^9, 3.76263850403253*^9}, {3.762660237064076*^9, 
   3.7626602518110523`*^9}, 3.762660304870099*^9, {3.762660339096448*^9, 
   3.762660357478224*^9}, {3.762660556444415*^9, 3.762660581329095*^9}, {
   3.762660691945616*^9, 3.762660743096077*^9}, 3.7626688850701714`*^9, 
   3.7628482757928953`*^9, {3.762848315859827*^9, 3.762848316939889*^9}, 
   3.76284837600603*^9, 3.762848662184683*^9, 3.762848694079556*^9, 
   3.7630709807403297`*^9, 3.765231828987376*^9, 3.76523238354703*^9, {
   3.765232438696801*^9, 3.765232474818057*^9}, 3.765233094846881*^9, {
   3.765233137412224*^9, 3.765233147755866*^9}, 3.7661829327228117`*^9, {
   3.766182968642089*^9, 3.7661829790019217`*^9}, {3.7661830140391483`*^9, 
   3.766183041602181*^9}, 3.774754534361884*^9, 3.774754635470203*^9, 
   3.774754858436537*^9, 3.774821463153285*^9, 3.7748216037503443`*^9, 
   3.774842602998596*^9, 3.775350696497609*^9, 3.775353005589275*^9, 
   3.775353044889385*^9, {3.775353116361103*^9, 3.7753531856658983`*^9}, {
   3.775353216018454*^9, 3.775353226545833*^9}, {3.775353626351636*^9, 
   3.775353636841164*^9}, 3.775353886851317*^9, 3.7758559842456417`*^9, 
   3.794787294736829*^9, 3.8074993382613783`*^9},
 CellLabel->"Out[22]=",ExpressionUUID->"18964852-b01c-44d5-9d88-8ee6f396198f"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"DynamicModule", "[", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{
    "ndel", ",", "s", ",", "or", ",", "MemKin", ",", "MemKinNorm", ",", 
     "MemKinNormSh", ",", "timeLegend", ",", "no", ",", "t", ",", "z5"}], 
    "}"}], ",", "\[IndentingNewLine]", "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"ndel", "=", "1"}], ";", "\[IndentingNewLine]", 
    RowBox[{"s", "=", "1"}], ";", "\[IndentingNewLine]", 
    RowBox[{"or", "=", "1"}], ";", "\[IndentingNewLine]", 
    RowBox[{"MemKin", "=", 
     RowBox[{"{", "0", "}"}]}], ";", "\[IndentingNewLine]", 
    RowBox[{"MemKinNorm", "=", 
     RowBox[{"{", "0", "}"}]}], ";", "\[IndentingNewLine]", 
    RowBox[{"MemKinNormSh", "=", 
     RowBox[{"{", "0", "}"}]}], ";", "\[IndentingNewLine]", 
    RowBox[{"timeLegend", "=", 
     RowBox[{"{", "}"}]}], ";", "\[IndentingNewLine]", "\[IndentingNewLine]", 
    
    RowBox[{
     RowBox[{"Panel", "[", "\[IndentingNewLine]", 
      RowBox[{
       RowBox[{"Grid", "[", 
        RowBox[{"{", 
         RowBox[{"{", "\[IndentingNewLine]", 
          RowBox[{"Grid", "[", 
           RowBox[{"{", "\[IndentingNewLine]", 
            RowBox[{
             RowBox[{"{", 
              RowBox[{"\"\<Normalization:\>\"", ",", " ", 
               RowBox[{"Checkbox", "[", 
                RowBox[{
                 RowBox[{"Dynamic", "[", "no", "]"}], ",", 
                 RowBox[{"{", 
                  RowBox[{"1", ",", "2"}], "}"}]}], "]"}]}], "}"}], ",", 
             "\[IndentingNewLine]", 
             RowBox[{"{", 
              RowBox[{"\"\<Type:\>\"", ",", " ", 
               RowBox[{"RadioButtonBar", "[", 
                RowBox[{
                 RowBox[{"Dynamic", "[", "t", "]"}], ",", 
                 RowBox[{"{", 
                  RowBox[{
                   RowBox[{"1", "\[Rule]", "\"\<Overlapping\>\""}], ",", 
                   RowBox[{"2", "\[Rule]", "\"\<Shifting\>\""}]}], "}"}]}], 
                "]"}]}], "}"}], ",", "\[IndentingNewLine]", 
             RowBox[{"{", "}"}], ",", "\[IndentingNewLine]", 
             RowBox[{"{", 
              RowBox[{"\"\<Plot Explorer Function:\>\"", ",", " ", 
               RowBox[{"Checkbox", "[", 
                RowBox[{
                 RowBox[{"Dynamic", "[", "z5", "]"}], ",", 
                 RowBox[{"{", 
                  RowBox[{"1", ",", "2"}], "}"}]}], "]"}]}], "}"}], ",", 
             "\[IndentingNewLine]", 
             RowBox[{"{", "}"}], ",", "\[IndentingNewLine]", 
             RowBox[{"{", 
              RowBox[{",", "\[IndentingNewLine]", 
               RowBox[{"Button", "[", 
                RowBox[{
                 RowBox[{"Style", "[", 
                  RowBox[{
                  "\"\<Memorize Red (1st Exp) Spectrum\>\"", ",", "Bold"}], 
                  "]"}], ",", 
                 RowBox[{"{", "\[IndentingNewLine]", "\[IndentingNewLine]", 
                  RowBox[{
                   RowBox[{"If", "[", 
                    RowBox[{
                    RowBox[{"\:0421licker2", "\[Equal]", "0"}], ",", " ", 
                    RowBox[{"MessageDialog", "[", 
                    RowBox[{"Style", "[", 
                    RowBox[{
                    "\"\<Please, open file\>\"", ",", "18", ",", "Black"}], 
                    "]"}], "]"}], ",", 
                    RowBox[{"{", "\[IndentingNewLine]", "\[IndentingNewLine]", 
                    RowBox[{
                    RowBox[{"timeLegend", "=", " ", 
                    RowBox[{"Join", "[", 
                    RowBox[{
                    RowBox[{"{", 
                    RowBox[{"Text", "@", 
                    RowBox[{"Style", "[", 
                    RowBox[{
                    RowBox[{"StringJoin", "[", 
                    RowBox[{
                    RowBox[{"ToString", "[", "file", "]"}], ",", 
                    "\"\< (Red, 1st Exp)\>\""}], " ", "]"}], ",", "Bold"}], 
                    "]"}]}], "}"}], ",", "timeLegend"}], "]"}]}], ";", 
                    "\[IndentingNewLine]", "\[IndentingNewLine]", 
                    RowBox[{"Which", "[", 
                    RowBox[{
                    RowBox[{"s", "\[Equal]", "1"}], ",", 
                    "\[IndentingNewLine]", 
                    RowBox[{"MemKin", "=", 
                    RowBox[{"Join", "[", 
                    RowBox[{
                    RowBox[{"{", "data1", "}"}], ",", "MemKin"}], "]"}]}]}], 
                    "\[IndentingNewLine]", "]"}], ";", "\[IndentingNewLine]", 
                    "\[IndentingNewLine]", "\[IndentingNewLine]", 
                    RowBox[{"Which", "[", 
                    RowBox[{
                    RowBox[{"s", "\[Equal]", "1"}], ",", 
                    "\[IndentingNewLine]", 
                    RowBox[{"MemKinNorm", "=", 
                    RowBox[{"Join", "[", 
                    RowBox[{
                    RowBox[{"{", 
                    RowBox[{"Transpose", "[", 
                    RowBox[{"{", 
                    RowBox[{
                    RowBox[{"data1", "[", 
                    RowBox[{"[", 
                    RowBox[{"All", ",", "1"}], "]"}], "]"}], ",", 
                    RowBox[{
                    RowBox[{"data1", "[", 
                    RowBox[{"[", 
                    RowBox[{"All", ",", "2"}], "]"}], "]"}], "/", 
                    RowBox[{"Max", "[", 
                    RowBox[{"Abs", "@", 
                    RowBox[{"data1", "[", 
                    RowBox[{"[", 
                    RowBox[{"All", ",", "2"}], "]"}], "]"}]}], "]"}]}]}], 
                    "}"}], "]"}], "}"}], ",", "MemKinNorm"}], "]"}]}]}], 
                    "\[IndentingNewLine]", "]"}], ";", "\[IndentingNewLine]", 
                    "\[IndentingNewLine]", 
                    RowBox[{"Which", "[", 
                    RowBox[{
                    RowBox[{"s", "\[Equal]", "1"}], ",", 
                    "\[IndentingNewLine]", 
                    RowBox[{"MemKinNormSh", "=", 
                    RowBox[{"Join", "[", 
                    RowBox[{
                    RowBox[{"{", 
                    RowBox[{"Transpose", "[", 
                    RowBox[{"{", 
                    RowBox[{
                    RowBox[{"data1", "[", 
                    RowBox[{"[", 
                    RowBox[{"All", ",", "1"}], "]"}], "]"}], ",", 
                    RowBox[{
                    RowBox[{"1", "*", 
                    RowBox[{"(", 
                    RowBox[{
                    RowBox[{"Length", "[", "MemKinNormSh", "]"}], "-", "1"}], 
                    ")"}]}], "+", 
                    RowBox[{
                    RowBox[{"data1", "[", 
                    RowBox[{"[", 
                    RowBox[{"All", ",", "2"}], "]"}], "]"}], "/", 
                    RowBox[{"Max", "[", 
                    RowBox[{"Abs", "@", 
                    RowBox[{"data1", "[", 
                    RowBox[{"[", 
                    RowBox[{"All", ",", "2"}], "]"}], "]"}]}], "]"}]}]}]}], 
                    "}"}], "]"}], "}"}], ",", "MemKinNormSh"}], "]"}]}]}], 
                    "\[IndentingNewLine]", "]"}], ";"}], 
                    "\[IndentingNewLine]", "\[IndentingNewLine]", "}"}]}], 
                    "]"}], ";"}], "\[IndentingNewLine]", 
                  "\[IndentingNewLine]", "\[IndentingNewLine]", "}"}], ",", 
                 RowBox[{"FrameMargins", "\[Rule]", "10"}], ",", 
                 RowBox[{"Method", "\[Rule]", "\"\<Queued\>\""}]}], "]"}]}], 
              "\[IndentingNewLine]", "\[IndentingNewLine]", "}"}], ",", 
             "\[IndentingNewLine]", "\[IndentingNewLine]", 
             RowBox[{"{", 
              RowBox[{",", 
               RowBox[{"Button", "[", 
                RowBox[{
                 RowBox[{"Style", "[", 
                  RowBox[{
                  "\"\<Memorize Blue (2nd Exp) Spectrum\>\"", ",", "Bold"}], 
                  "]"}], ",", 
                 RowBox[{"{", "\[IndentingNewLine]", "\[IndentingNewLine]", 
                  RowBox[{
                   RowBox[{"If", "[", 
                    RowBox[{
                    RowBox[{"\:0421licker2", "\[Equal]", "0"}], ",", " ", 
                    RowBox[{"MessageDialog", "[", 
                    RowBox[{"Style", "[", 
                    RowBox[{
                    "\"\<Please, open file\>\"", ",", "18", ",", "Black"}], 
                    "]"}], "]"}], ",", 
                    RowBox[{"{", "\[IndentingNewLine]", "\[IndentingNewLine]", 
                    RowBox[{
                    RowBox[{"timeLegend", "=", " ", 
                    RowBox[{"Join", "[", 
                    RowBox[{
                    RowBox[{"{", 
                    RowBox[{"Text", "@", 
                    RowBox[{"Style", "[", 
                    RowBox[{
                    RowBox[{"StringJoin", "[", 
                    RowBox[{
                    RowBox[{"ToString", "[", "file", "]"}], ",", 
                    "\"\< (Blue, 2nd Exp)\>\""}], " ", "]"}], ",", "Bold"}], 
                    "]"}]}], "}"}], ",", "timeLegend"}], "]"}]}], ";", 
                    "\[IndentingNewLine]", "\[IndentingNewLine]", 
                    RowBox[{"Which", "[", 
                    RowBox[{
                    RowBox[{"s", "\[Equal]", "1"}], ",", 
                    "\[IndentingNewLine]", 
                    RowBox[{"MemKin", "=", 
                    RowBox[{"Join", "[", 
                    RowBox[{
                    RowBox[{"{", "data2", "}"}], ",", "MemKin"}], "]"}]}]}], 
                    "\[IndentingNewLine]", "]"}], ";", "\[IndentingNewLine]", 
                    "\[IndentingNewLine]", 
                    RowBox[{"If", "[", 
                    RowBox[{
                    RowBox[{
                    RowBox[{"Max", "[", 
                    RowBox[{"Abs", "@", 
                    RowBox[{"data2", "[", 
                    RowBox[{"[", 
                    RowBox[{"All", ",", "2"}], "]"}], "]"}]}], "]"}], 
                    "\[Equal]", "0"}], ",", "\[IndentingNewLine]", 
                    RowBox[{"Which", "[", 
                    RowBox[{
                    RowBox[{"s", "\[Equal]", "1"}], ",", 
                    "\[IndentingNewLine]", 
                    RowBox[{"MemKinNorm", "=", 
                    RowBox[{"Join", "[", 
                    RowBox[{
                    RowBox[{"{", 
                    RowBox[{"Transpose", "[", 
                    RowBox[{"{", 
                    RowBox[{
                    RowBox[{"data2", "[", 
                    RowBox[{"[", 
                    RowBox[{"All", ",", "1"}], "]"}], "]"}], ",", 
                    RowBox[{
                    RowBox[{"data2", "[", 
                    RowBox[{"[", 
                    RowBox[{"All", ",", "2"}], "]"}], "]"}], "/", "1"}]}], 
                    "}"}], "]"}], "}"}], ",", "MemKinNorm"}], "]"}]}]}], 
                    "]"}], ",", "\[IndentingNewLine]", 
                    RowBox[{"Which", "[", 
                    RowBox[{
                    RowBox[{"s", "\[Equal]", "1"}], ",", 
                    "\[IndentingNewLine]", 
                    RowBox[{"MemKinNorm", "=", 
                    RowBox[{"Join", "[", 
                    RowBox[{
                    RowBox[{"{", 
                    RowBox[{"Transpose", "[", 
                    RowBox[{"{", 
                    RowBox[{
                    RowBox[{"data2", "[", 
                    RowBox[{"[", 
                    RowBox[{"All", ",", "1"}], "]"}], "]"}], ",", 
                    RowBox[{
                    RowBox[{"data2", "[", 
                    RowBox[{"[", 
                    RowBox[{"All", ",", "2"}], "]"}], "]"}], "/", 
                    RowBox[{"Max", "[", 
                    RowBox[{"Abs", "@", 
                    RowBox[{"data2", "[", 
                    RowBox[{"[", 
                    RowBox[{"All", ",", "2"}], "]"}], "]"}]}], "]"}]}]}], 
                    "}"}], "]"}], "}"}], ",", "MemKinNorm"}], "]"}]}]}], 
                    "]"}]}], "\[IndentingNewLine]", "]"}], ";", 
                    "\[IndentingNewLine]", "\[IndentingNewLine]", 
                    RowBox[{"If", "[", 
                    RowBox[{
                    RowBox[{
                    RowBox[{"Max", "[", 
                    RowBox[{"Abs", "@", 
                    RowBox[{"data2", "[", 
                    RowBox[{"[", 
                    RowBox[{"All", ",", "2"}], "]"}], "]"}]}], "]"}], 
                    "\[Equal]", "0"}], ",", "\[IndentingNewLine]", 
                    RowBox[{"Which", "[", 
                    RowBox[{
                    RowBox[{"s", "\[Equal]", "1"}], ",", 
                    "\[IndentingNewLine]", 
                    RowBox[{"MemKinNormSh", "=", 
                    RowBox[{"Join", "[", 
                    RowBox[{
                    RowBox[{"{", 
                    RowBox[{"Transpose", "[", 
                    RowBox[{"{", 
                    RowBox[{
                    RowBox[{"data2", "[", 
                    RowBox[{"[", 
                    RowBox[{"All", ",", "1"}], "]"}], "]"}], ",", 
                    RowBox[{
                    RowBox[{"1", "*", 
                    RowBox[{"(", 
                    RowBox[{
                    RowBox[{"Length", "[", "MemKinNormSh", "]"}], "-", "1"}], 
                    ")"}]}], "+", 
                    RowBox[{
                    RowBox[{"data2", "[", 
                    RowBox[{"[", 
                    RowBox[{"All", ",", "2"}], "]"}], "]"}], "/", "1"}]}]}], 
                    "}"}], "]"}], "}"}], ",", "MemKinNormSh"}], "]"}]}]}], 
                    "]"}], ",", "\[IndentingNewLine]", 
                    RowBox[{"Which", "[", 
                    RowBox[{
                    RowBox[{"s", "\[Equal]", "1"}], ",", 
                    "\[IndentingNewLine]", 
                    RowBox[{"MemKinNormSh", "=", 
                    RowBox[{"Join", "[", 
                    RowBox[{
                    RowBox[{"{", 
                    RowBox[{"Transpose", "[", 
                    RowBox[{"{", 
                    RowBox[{
                    RowBox[{"data2", "[", 
                    RowBox[{"[", 
                    RowBox[{"All", ",", "1"}], "]"}], "]"}], ",", 
                    RowBox[{
                    RowBox[{"1", "*", 
                    RowBox[{"(", 
                    RowBox[{
                    RowBox[{"Length", "[", "MemKinNormSh", "]"}], "-", "1"}], 
                    ")"}]}], "+", 
                    RowBox[{
                    RowBox[{"data2", "[", 
                    RowBox[{"[", 
                    RowBox[{"All", ",", "2"}], "]"}], "]"}], "/", 
                    RowBox[{"Max", "[", 
                    RowBox[{"Abs", "@", 
                    RowBox[{"data2", "[", 
                    RowBox[{"[", 
                    RowBox[{"All", ",", "2"}], "]"}], "]"}]}], "]"}]}]}]}], 
                    "}"}], "]"}], "}"}], ",", "MemKinNormSh"}], "]"}]}]}], 
                    "]"}]}], "\[IndentingNewLine]", "]"}], ";"}], 
                    "\[IndentingNewLine]", "\[IndentingNewLine]", "}"}]}], 
                    "]"}], ";"}], "\[IndentingNewLine]", 
                  "\[IndentingNewLine]", "\[IndentingNewLine]", "}"}], ",", 
                 RowBox[{"FrameMargins", "\[Rule]", "10"}], ",", 
                 RowBox[{"Method", "\[Rule]", "\"\<Queued\>\""}]}], "]"}]}], 
              "\[IndentingNewLine]", "\[IndentingNewLine]", "}"}], ",", 
             "\[IndentingNewLine]", "\[IndentingNewLine]", 
             "\[IndentingNewLine]", "\[IndentingNewLine]", 
             RowBox[{"{", "}"}], ",", "\[IndentingNewLine]", 
             RowBox[{"{", 
              RowBox[{"\"\<Number to Delete (Counts From Above):\>\"", ",", 
               RowBox[{"InputField", "[", 
                RowBox[{
                 RowBox[{"Dynamic", "[", "ndel", "]"}], ",", "Number", ",", 
                 RowBox[{"FieldSize", "\[Rule]", "13"}]}], "]"}]}], "}"}], 
             ",", "\[IndentingNewLine]", 
             RowBox[{"{", 
              RowBox[{",", 
               RowBox[{"Button", "[", 
                RowBox[{
                 RowBox[{"Style", "[", 
                  RowBox[{"\"\<Delete Arbitary Spectrum\>\"", ",", "Bold"}], 
                  "]"}], ",", 
                 RowBox[{"{", "\[IndentingNewLine]", "\[IndentingNewLine]", 
                  RowBox[{"(*", " ", 
                   RowBox[{
                    RowBox[{"Check", " ", "length"}], " ", "\[GreaterEqual]", 
                    
                    RowBox[{"2", " ", "!"}]}], " ", "*)"}], 
                  "\[IndentingNewLine]", 
                  RowBox[{
                   RowBox[{"If", "[", 
                    RowBox[{
                    RowBox[{"And", "[", 
                    RowBox[{
                    RowBox[{
                    RowBox[{"Length", "[", "MemKin", "]"}], "\[GreaterEqual]",
                     "2"}], ",", 
                    RowBox[{
                    RowBox[{"Round", "[", "ndel", "]"}], "<", " ", 
                    RowBox[{"Length", "[", "MemKin", "]"}]}]}], "]"}], ",", 
                    RowBox[{"MemKin", "=", 
                    RowBox[{"Drop", "[", 
                    RowBox[{"MemKin", ",", 
                    RowBox[{"{", 
                    RowBox[{"Round", "[", "ndel", "]"}], "}"}]}], "]"}]}]}], 
                    "]"}], ";", "\[IndentingNewLine]", 
                   RowBox[{"If", "[", 
                    RowBox[{
                    RowBox[{"And", "[", 
                    RowBox[{
                    RowBox[{
                    RowBox[{"Length", "[", "MemKinNorm", "]"}], 
                    "\[GreaterEqual]", "2"}], ",", 
                    RowBox[{
                    RowBox[{"Round", "[", "ndel", "]"}], "<", 
                    RowBox[{"Length", "[", "MemKinNorm", "]"}]}]}], "]"}], 
                    ",", 
                    RowBox[{"MemKinNorm", "=", 
                    RowBox[{"Drop", "[", 
                    RowBox[{"MemKinNorm", ",", 
                    RowBox[{"{", 
                    RowBox[{"Round", "[", "ndel", "]"}], "}"}]}], "]"}]}]}], 
                    "]"}], ";", "\[IndentingNewLine]", 
                   RowBox[{"If", "[", 
                    RowBox[{
                    RowBox[{"And", "[", 
                    RowBox[{
                    RowBox[{
                    RowBox[{"Length", "[", "MemKinNormSh", "]"}], 
                    "\[GreaterEqual]", "2"}], ",", 
                    RowBox[{
                    RowBox[{"Round", "[", "ndel", "]"}], "<", 
                    RowBox[{"Length", "[", "MemKinNormSh", "]"}]}]}], "]"}], 
                    ",", 
                    RowBox[{"MemKinNormSh", "=", 
                    RowBox[{"Drop", "[", 
                    RowBox[{"MemKinNormSh", ",", 
                    RowBox[{"{", 
                    RowBox[{"Round", "[", "ndel", "]"}], "}"}]}], "]"}]}]}], 
                    "]"}], ";", "\[IndentingNewLine]", 
                   RowBox[{"If", "[", 
                    RowBox[{
                    RowBox[{"And", "[", 
                    RowBox[{
                    RowBox[{
                    RowBox[{"Length", "[", "timeLegend", "]"}], 
                    "\[GreaterEqual]", "1"}], ",", 
                    RowBox[{
                    RowBox[{"Round", "[", "ndel", "]"}], "<", 
                    RowBox[{"Length", "[", "timeLegend", "]"}]}]}], "]"}], 
                    ",", 
                    RowBox[{"timeLegend", "=", 
                    RowBox[{"Drop", "[", 
                    RowBox[{"timeLegend", ",", 
                    RowBox[{"{", 
                    RowBox[{"Round", "[", "ndel", "]"}], "}"}]}], "]"}]}]}], 
                    "]"}], ";"}], "\[IndentingNewLine]", 
                  "\[IndentingNewLine]", "}"}], ",", 
                 RowBox[{"FrameMargins", "\[Rule]", "10"}], ",", 
                 RowBox[{"Method", "\[Rule]", "\"\<Queued\>\""}]}], "]"}]}], 
              "}"}], ",", "\[IndentingNewLine]", "\[IndentingNewLine]", 
             RowBox[{"{", 
              RowBox[{",", 
               RowBox[{"Button", "[", 
                RowBox[{
                 RowBox[{"Style", "[", 
                  RowBox[{"\"\<Delete All\>\"", ",", "Bold"}], "]"}], ",", 
                 RowBox[{"{", "\[IndentingNewLine]", 
                  RowBox[{
                   RowBox[{"ClearAll", "[", "MemKin", "]"}], ";", 
                   "\[IndentingNewLine]", 
                   RowBox[{"MemKin", "=", 
                    RowBox[{"{", "0", "}"}]}], ";", "\[IndentingNewLine]", 
                   RowBox[{"ClearAll", "[", "MemKinNorm", "]"}], ";", 
                   "\[IndentingNewLine]", 
                   RowBox[{"MemKinNorm", "=", 
                    RowBox[{"{", "0", "}"}]}], ";", "\[IndentingNewLine]", 
                   RowBox[{"ClearAll", "[", "MemKinNormSh", "]"}], ";", 
                   "\[IndentingNewLine]", 
                   RowBox[{"MemKinNormSh", "=", 
                    RowBox[{"{", "0", "}"}]}], ";"}], "\[IndentingNewLine]", 
                  "}"}], ",", 
                 RowBox[{"FrameMargins", "\[Rule]", "10"}], ",", 
                 RowBox[{"Method", "\[Rule]", "\"\<Queued\>\""}]}], "]"}]}], 
              "}"}]}], "\[IndentingNewLine]", "\[IndentingNewLine]", 
            RowBox[{"(*", 
             RowBox[{"{", 
              RowBox[{",", 
               RowBox[{"Button", "[", 
                RowBox[{"\"\<Divide by 2\>\"", ",", 
                 RowBox[{"{", "\[IndentingNewLine]", 
                  RowBox[{
                   RowBox[{"MemSpecNormSh", "=", 
                    RowBox[{"Map", "[", 
                    RowBox[{
                    RowBox[{
                    RowBox[{"Transpose", "[", 
                    RowBox[{"{", 
                    RowBox[{
                    RowBox[{"#", "[", 
                    RowBox[{"[", 
                    RowBox[{"All", ",", "1"}], "]"}], "]"}], ",", 
                    RowBox[{
                    RowBox[{"#", "[", 
                    RowBox[{"[", 
                    RowBox[{"All", ",", "2"}], "]"}], "]"}], "/", "2"}]}], 
                    "}"}], "]"}], "&"}], ",", "MemSpecNormSh"}], "]"}]}], 
                   ";"}], "\[IndentingNewLine]", "}"}], ",", 
                 RowBox[{"FrameMargins", "\[Rule]", "10"}], ",", 
                 RowBox[{"Method", "\[Rule]", "\"\<Queued\>\""}]}], "]"}]}], 
              "}"}], "*)"}], "\[IndentingNewLine]", "\[IndentingNewLine]", 
            "\[IndentingNewLine]", "}"}], "]"}], "\[IndentingNewLine]", 
          "\[IndentingNewLine]", "}"}], "\[IndentingNewLine]", "}"}], "]"}], 
       ",", 
       RowBox[{"FrameMargins", "\[Rule]", 
        RowBox[{"{", 
         RowBox[{
          RowBox[{"{", 
           RowBox[{"5", ",", "5"}], "}"}], ",", 
          RowBox[{"{", 
           RowBox[{"5", ",", "5"}], "}"}]}], "}"}]}], ",", 
       RowBox[{"Background", "\[Rule]", 
        RowBox[{"Lighter", "[", 
         RowBox[{"Gray", ",", " ", "0.97"}], "]"}]}]}], "\[IndentingNewLine]",
       "]"}], "\[IndentingNewLine]", 
     RowBox[{"(*", "Memorize", "*)"}], "\[IndentingNewLine]", 
     RowBox[{"Grid", "[", 
      RowBox[{"{", 
       RowBox[{"{", "\[IndentingNewLine]", 
        RowBox[{
        "Dynamic", "[", "\[IndentingNewLine]", "\[IndentingNewLine]", 
         RowBox[{"Which", "[", 
          RowBox[{
           RowBox[{"t", "\[Equal]", "1"}], ",", "\[IndentingNewLine]", 
           RowBox[{"Which", "[", 
            RowBox[{
             RowBox[{"no", "\[Equal]", "1"}], ",", "\[IndentingNewLine]", 
             "\[IndentingNewLine]", 
             RowBox[{"If", "[", 
              RowBox[{
               RowBox[{"z5", "\[Equal]", "1"}], ",", "\[IndentingNewLine]", 
               RowBox[{"If", "[", 
                RowBox[{
                 RowBox[{
                  RowBox[{"Length", "[", "MemKin", "]"}], "\[GreaterEqual]", 
                  "2"}], ",", 
                 RowBox[{"ListLinePlot", "[", 
                  RowBox[{
                   RowBox[{"Drop", "[", 
                    RowBox[{"MemKin", ",", 
                    RowBox[{"-", "1"}]}], "]"}], ",", 
                   RowBox[{"PlotRange", "\[Rule]", "All"}], ",", " ", 
                   RowBox[{"Frame", "->", "True"}], ",", "  ", 
                   RowBox[{"FrameLabel", "\[Rule]", 
                    RowBox[{"{", 
                    RowBox[{
                    "\"\<Mangetic Field / G\>\"", ",", 
                    "\"\<Intensity / a. u.\>\""}], "}"}]}], ",", 
                   RowBox[{"GridLines", "\[Rule]", "Automatic"}], ",", 
                   RowBox[{"GridLinesStyle", "\[Rule]", 
                    RowBox[{"Directive", "[", 
                    RowBox[{"LightGray", ",", " ", "Dashed"}], "]"}]}], ",", 
                   RowBox[{"ImageSize", "\[Rule]", 
                    RowBox[{"{", 
                    RowBox[{"600", ",", "450"}], "}"}]}], ",", 
                   RowBox[{"PlotLegends", "\[Rule]", 
                    RowBox[{"Placed", "[", 
                    RowBox[{"timeLegend", ",", "Above"}], "]"}]}]}], "]"}], 
                 ",", "\"\<Memorize Something\>\""}], "]"}], ",", 
               "\[IndentingNewLine]", 
               RowBox[{"If", "[", 
                RowBox[{
                 RowBox[{
                  RowBox[{"Length", "[", "MemKin", "]"}], "\[GreaterEqual]", 
                  "2"}], ",", 
                 RowBox[{"PlotExplorer", "@", 
                  RowBox[{"ListLinePlot", "[", 
                   RowBox[{
                    RowBox[{"Drop", "[", 
                    RowBox[{"MemKin", ",", 
                    RowBox[{"-", "1"}]}], "]"}], ",", 
                    RowBox[{"PlotRange", "\[Rule]", "All"}], ",", " ", 
                    RowBox[{"Frame", "->", "True"}], ",", "  ", 
                    RowBox[{"FrameLabel", "\[Rule]", 
                    RowBox[{"{", 
                    RowBox[{
                    "\"\<Mangetic Field / G\>\"", ",", 
                    "\"\<Intensity / a. u.\>\""}], "}"}]}], ",", 
                    RowBox[{"GridLines", "\[Rule]", "Automatic"}], ",", 
                    RowBox[{"GridLinesStyle", "\[Rule]", 
                    RowBox[{"Directive", "[", 
                    RowBox[{"LightGray", ",", " ", "Dashed"}], "]"}]}], ",", 
                    RowBox[{"ImageSize", "\[Rule]", 
                    RowBox[{"{", 
                    RowBox[{"800", ",", "600"}], "}"}]}], ",", 
                    RowBox[{"PlotLegends", "\[Rule]", 
                    RowBox[{"Placed", "[", 
                    RowBox[{"timeLegend", ",", "Above"}], "]"}]}]}], "]"}]}], 
                 ",", "\"\<Memorize Something\>\""}], "]"}]}], "]"}], ",", 
             "\[IndentingNewLine]", 
             RowBox[{"no", "\[Equal]", "2"}], ",", "\[IndentingNewLine]", 
             RowBox[{"If", "[", 
              RowBox[{
               RowBox[{"z5", "\[Equal]", "1"}], ",", "\[IndentingNewLine]", 
               RowBox[{"If", "[", 
                RowBox[{
                 RowBox[{
                  RowBox[{"Length", "[", "MemKinNorm", "]"}], 
                  "\[GreaterEqual]", "2"}], ",", 
                 RowBox[{"ListLinePlot", "[", 
                  RowBox[{
                   RowBox[{"Drop", "[", 
                    RowBox[{"MemKinNorm", ",", 
                    RowBox[{"-", "1"}]}], "]"}], ",", 
                   RowBox[{"PlotRange", "\[Rule]", "All"}], ",", " ", 
                   RowBox[{"Frame", "->", "True"}], ",", "  ", 
                   RowBox[{"FrameLabel", "\[Rule]", 
                    RowBox[{"{", 
                    RowBox[{
                    "\"\<Mangetic Field / G\>\"", ",", 
                    "\"\<Intensity / a. u.\>\""}], "}"}]}], ",", 
                   RowBox[{"GridLines", "\[Rule]", "Automatic"}], ",", 
                   RowBox[{"GridLinesStyle", "\[Rule]", 
                    RowBox[{"Directive", "[", 
                    RowBox[{"LightGray", ",", " ", "Dashed"}], "]"}]}], ",", 
                   RowBox[{"ImageSize", "\[Rule]", 
                    RowBox[{"{", 
                    RowBox[{"600", ",", "450"}], "}"}]}], ",", 
                   RowBox[{"PlotLegends", "\[Rule]", 
                    RowBox[{"Placed", "[", 
                    RowBox[{"timeLegend", ",", "Above"}], "]"}]}]}], "]"}], 
                 ",", "\"\<Memorize Something\>\""}], "]"}], ",", 
               "\[IndentingNewLine]", 
               RowBox[{"If", "[", 
                RowBox[{
                 RowBox[{
                  RowBox[{"Length", "[", "MemKinNorm", "]"}], 
                  "\[GreaterEqual]", "2"}], ",", 
                 RowBox[{"PlotExplorer", "@", 
                  RowBox[{"ListLinePlot", "[", 
                   RowBox[{
                    RowBox[{"Drop", "[", 
                    RowBox[{"MemKinNorm", ",", 
                    RowBox[{"-", "1"}]}], "]"}], ",", 
                    RowBox[{"PlotRange", "\[Rule]", "All"}], ",", " ", 
                    RowBox[{"Frame", "->", "True"}], ",", "  ", 
                    RowBox[{"FrameLabel", "\[Rule]", 
                    RowBox[{"{", 
                    RowBox[{
                    "\"\<Mangetic Field / G\>\"", ",", 
                    "\"\<Intensity / a. u.\>\""}], "}"}]}], ",", 
                    RowBox[{"GridLines", "\[Rule]", "Automatic"}], ",", 
                    RowBox[{"GridLinesStyle", "\[Rule]", 
                    RowBox[{"Directive", "[", 
                    RowBox[{"LightGray", ",", " ", "Dashed"}], "]"}]}], ",", 
                    RowBox[{"ImageSize", "\[Rule]", 
                    RowBox[{"{", 
                    RowBox[{"800", ",", "600"}], "}"}]}], ",", 
                    RowBox[{"PlotLegends", "\[Rule]", 
                    RowBox[{"Placed", "[", 
                    RowBox[{"timeLegend", ",", "Above"}], "]"}]}]}], "]"}]}], 
                 ",", "\"\<Memorize Something\>\""}], "]"}]}], 
              "\[IndentingNewLine]", "]"}]}], "\[IndentingNewLine]", "]"}], 
           ",", "\[IndentingNewLine]", 
           RowBox[{"t", "\[Equal]", "2"}], ",", "\[IndentingNewLine]", 
           RowBox[{"Which", "[", 
            RowBox[{
             RowBox[{"no", "\[Equal]", "1"}], ",", "\[IndentingNewLine]", 
             "\[IndentingNewLine]", 
             RowBox[{"If", "[", 
              RowBox[{
               RowBox[{"z5", "\[Equal]", "1"}], ",", "\[IndentingNewLine]", 
               RowBox[{"If", "[", 
                RowBox[{
                 RowBox[{
                  RowBox[{"Length", "[", "MemKin", "]"}], "\[GreaterEqual]", 
                  "2"}], ",", 
                 RowBox[{"ListLinePlot", "[", 
                  RowBox[{
                   RowBox[{"Drop", "[", 
                    RowBox[{"MemKin", ",", 
                    RowBox[{"-", "1"}]}], "]"}], ",", 
                   RowBox[{"PlotRange", "\[Rule]", "All"}], ",", " ", 
                   RowBox[{"Frame", "->", "True"}], ",", "  ", 
                   RowBox[{"FrameLabel", "\[Rule]", 
                    RowBox[{"{", 
                    RowBox[{
                    "\"\<Mangetic Field / G\>\"", ",", 
                    "\"\<Intensity / a. u.\>\""}], "}"}]}], ",", 
                   RowBox[{"GridLines", "\[Rule]", "Automatic"}], ",", 
                   RowBox[{"GridLinesStyle", "\[Rule]", 
                    RowBox[{"Directive", "[", 
                    RowBox[{"LightGray", ",", " ", "Dashed"}], "]"}]}], ",", 
                   RowBox[{"ImageSize", "\[Rule]", 
                    RowBox[{"{", 
                    RowBox[{"600", ",", "450"}], "}"}]}], ",", 
                   RowBox[{"PlotLegends", "\[Rule]", 
                    RowBox[{"Placed", "[", 
                    RowBox[{"timeLegend", ",", "Above"}], "]"}]}]}], "]"}], 
                 ",", "\"\<Memorize Something\>\""}], "]"}], ",", 
               "\[IndentingNewLine]", 
               RowBox[{"If", "[", 
                RowBox[{
                 RowBox[{
                  RowBox[{"Length", "[", "MemKin", "]"}], "\[GreaterEqual]", 
                  "2"}], ",", 
                 RowBox[{"PlotExplorer", "@", 
                  RowBox[{"ListLinePlot", "[", 
                   RowBox[{
                    RowBox[{"Drop", "[", 
                    RowBox[{"MemKin", ",", 
                    RowBox[{"-", "1"}]}], "]"}], ",", 
                    RowBox[{"PlotRange", "\[Rule]", "All"}], ",", " ", 
                    RowBox[{"Frame", "->", "True"}], ",", "  ", 
                    RowBox[{"FrameLabel", "\[Rule]", 
                    RowBox[{"{", 
                    RowBox[{
                    "\"\<Mangetic Field / G\>\"", ",", 
                    "\"\<Intensity / a. u.\>\""}], "}"}]}], ",", 
                    RowBox[{"GridLines", "\[Rule]", "Automatic"}], ",", 
                    RowBox[{"GridLinesStyle", "\[Rule]", 
                    RowBox[{"Directive", "[", 
                    RowBox[{"LightGray", ",", " ", "Dashed"}], "]"}]}], ",", 
                    RowBox[{"ImageSize", "\[Rule]", 
                    RowBox[{"{", 
                    RowBox[{"800", ",", "600"}], "}"}]}], ",", 
                    RowBox[{"PlotLegends", "\[Rule]", 
                    RowBox[{"Placed", "[", 
                    RowBox[{"timeLegend", ",", "Above"}], "]"}]}]}], "]"}]}], 
                 ",", "\"\<Memorize Something\>\""}], "]"}]}], "]"}], ",", 
             "\[IndentingNewLine]", 
             RowBox[{"no", "\[Equal]", "2"}], ",", "\[IndentingNewLine]", 
             RowBox[{"If", "[", 
              RowBox[{
               RowBox[{"z5", "\[Equal]", "1"}], ",", "\[IndentingNewLine]", 
               RowBox[{"If", "[", 
                RowBox[{
                 RowBox[{
                  RowBox[{"Length", "[", "MemKinNormSh", "]"}], 
                  "\[GreaterEqual]", "2"}], ",", 
                 RowBox[{"ListLinePlot", "[", 
                  RowBox[{
                   RowBox[{"Drop", "[", 
                    RowBox[{"MemKinNormSh", ",", 
                    RowBox[{"-", "1"}]}], "]"}], ",", 
                   RowBox[{"PlotRange", "\[Rule]", "All"}], ",", " ", 
                   RowBox[{"Frame", "->", "True"}], ",", "  ", 
                   RowBox[{"FrameLabel", "\[Rule]", 
                    RowBox[{"{", 
                    RowBox[{
                    "\"\<Mangetic Field / G\>\"", ",", 
                    "\"\<Intensity / a. u.\>\""}], "}"}]}], ",", 
                   RowBox[{"GridLines", "\[Rule]", "Automatic"}], ",", 
                   RowBox[{"GridLinesStyle", "\[Rule]", 
                    RowBox[{"Directive", "[", 
                    RowBox[{"LightGray", ",", " ", "Dashed"}], "]"}]}], ",", 
                   RowBox[{"ImageSize", "\[Rule]", 
                    RowBox[{"{", 
                    RowBox[{"600", ",", "450"}], "}"}]}], ",", 
                   RowBox[{"PlotLegends", "\[Rule]", 
                    RowBox[{"Placed", "[", 
                    RowBox[{"timeLegend", ",", "Above"}], "]"}]}]}], "]"}], 
                 ",", "\"\<Memorize Something\>\""}], "]"}], ",", 
               "\[IndentingNewLine]", 
               RowBox[{"If", "[", 
                RowBox[{
                 RowBox[{
                  RowBox[{"Length", "[", "MemKinNormSh", "]"}], 
                  "\[GreaterEqual]", "2"}], ",", 
                 RowBox[{"PlotExplorer", "@", 
                  RowBox[{"ListLinePlot", "[", 
                   RowBox[{
                    RowBox[{"Drop", "[", 
                    RowBox[{"MemKinNormSh", ",", 
                    RowBox[{"-", "1"}]}], "]"}], ",", 
                    RowBox[{"PlotRange", "\[Rule]", "All"}], ",", " ", 
                    RowBox[{"Frame", "->", "True"}], ",", "  ", 
                    RowBox[{"FrameLabel", "\[Rule]", 
                    RowBox[{"{", 
                    RowBox[{
                    "\"\<Mangetic Field / G\>\"", ",", 
                    "\"\<Intensity / a. u.\>\""}], "}"}]}], ",", 
                    RowBox[{"GridLines", "\[Rule]", "Automatic"}], ",", 
                    RowBox[{"GridLinesStyle", "\[Rule]", 
                    RowBox[{"Directive", "[", 
                    RowBox[{"LightGray", ",", " ", "Dashed"}], "]"}]}], ",", 
                    RowBox[{"ImageSize", "\[Rule]", 
                    RowBox[{"{", 
                    RowBox[{"800", ",", "600"}], "}"}]}], ",", 
                    RowBox[{"PlotLegends", "\[Rule]", 
                    RowBox[{"Placed", "[", 
                    RowBox[{"timeLegend", ",", "Above"}], "]"}]}]}], "]"}]}], 
                 ",", "\"\<Memorize Something\>\""}], "]"}]}], 
              "\[IndentingNewLine]", "]"}]}], "\[IndentingNewLine]", "]"}]}], 
          "\[IndentingNewLine]", "]"}], "\[IndentingNewLine]", "]"}], "}"}], 
       "\[IndentingNewLine]", "}"}], "]"}]}]}]}], "\[IndentingNewLine]", 
  "\[IndentingNewLine]", "]"}]], "Input",
 Editable->False,
 Deletable->False,
 CellOpen->False,
 InitializationCell->True,
 CellChangeTimes->{{3.7583199793622513`*^9, 3.758320117553156*^9}, {
   3.7583202498337216`*^9, 3.7583202529779015`*^9}, {3.7583241596613507`*^9, 
   3.758324162331504*^9}, {3.758324864828684*^9, 3.758324898195593*^9}, {
   3.75834389234319*^9, 3.7583439206784844`*^9}, {3.758344065415558*^9, 
   3.7583441055582294`*^9}, {3.758344175081403*^9, 3.758344178270878*^9}, 
   3.758410262063575*^9, {3.758421377507607*^9, 3.7584213776262884`*^9}, {
   3.7588407475620193`*^9, 3.7588409479712067`*^9}, {3.7588410508980265`*^9, 
   3.7588410526802645`*^9}, {3.7588411112057734`*^9, 3.758841154886004*^9}, {
   3.7588431022442837`*^9, 3.7588431049590473`*^9}, {3.7588510558726807`*^9, 
   3.7588510742036686`*^9}, {3.7588511201278863`*^9, 3.758851126485891*^9}, {
   3.7588511579856806`*^9, 3.7588511810908847`*^9}, {3.7589491270536256`*^9, 
   3.758949129446251*^9}, {3.7590422481769686`*^9, 3.759042286176279*^9}, {
   3.759102150984763*^9, 3.7591022036817245`*^9}, {3.759187185438345*^9, 
   3.759187186267156*^9}, {3.7592801960727043`*^9, 3.759280270643981*^9}, {
   3.759283081311727*^9, 3.759283086093965*^9}, {3.759283525112187*^9, 
   3.7592835287091713`*^9}, {3.759285018201902*^9, 3.759285018974512*^9}, {
   3.7594432405410824`*^9, 3.759443243659396*^9}, {3.7594598492556887`*^9, 
   3.7594598589627542`*^9}, {3.759459958196304*^9, 3.75946000407561*^9}, {
   3.7595303765939093`*^9, 3.75953039457477*^9}, {3.76006432175241*^9, 
   3.760064332230085*^9}, {3.76083970582311*^9, 3.760839733500308*^9}, {
   3.760840210364614*^9, 3.760840210593849*^9}, 3.760840513500072*^9, {
   3.76091831515695*^9, 3.760918319379809*^9}, {3.76092059684969*^9, 
   3.760920597932757*^9}, {3.760938247910058*^9, 3.76093825847657*^9}, {
   3.7609431524965754`*^9, 3.7609431618408413`*^9}, {3.761260164346538*^9, 
   3.761260228874164*^9}, 3.7612682133392*^9, {3.761268322704924*^9, 
   3.761268323245582*^9}, {3.761268476938036*^9, 3.761268480180711*^9}, {
   3.761428708543551*^9, 3.7614287211916857`*^9}, {3.76203839875229*^9, 
   3.762038406440093*^9}, {3.762038497098184*^9, 3.7620385083640137`*^9}, {
   3.762150023266185*^9, 3.7621500271593647`*^9}, {3.762150353815794*^9, 
   3.762150358791147*^9}, {3.7622258270803843`*^9, 3.762225829420823*^9}, {
   3.7622259913364983`*^9, 3.762226003255671*^9}, {3.762226034443901*^9, 
   3.7622260365918617`*^9}, {3.762226099244501*^9, 3.762226106659184*^9}, {
   3.762226432380192*^9, 3.762226434488181*^9}, {3.762226771984023*^9, 
   3.762226775864646*^9}, {3.7622268794862823`*^9, 3.762226882024747*^9}, {
   3.7622270568499403`*^9, 3.762227057193203*^9}, 3.762228077145792*^9, {
   3.7622282739314404`*^9, 3.7622283116187696`*^9}, {3.7622286871471443`*^9, 
   3.762228695547422*^9}, {3.762493183908413*^9, 3.762493183933618*^9}, {
   3.762668668201221*^9, 3.762668678864506*^9}, {3.762668720012478*^9, 
   3.762668721768551*^9}, {3.7626699605647087`*^9, 3.762669966450143*^9}, {
   3.7626733231234818`*^9, 3.762673360544808*^9}, {3.762726877678506*^9, 
   3.762726877853751*^9}, {3.763448737852831*^9, 3.763448756566835*^9}, {
   3.763448790722884*^9, 3.763448794604726*^9}, {3.763449630886462*^9, 
   3.763449631113305*^9}, {3.767312089537133*^9, 3.767312111309587*^9}, {
   3.769987232455014*^9, 3.7699872516799593`*^9}, {3.769987644457684*^9, 
   3.769987661472899*^9}, {3.769987805476426*^9, 3.769987830285843*^9}, 
   3.769987970844591*^9, {3.769997366373094*^9, 3.7699974114980507`*^9}, {
   3.769998616067281*^9, 3.769998620922106*^9}, {3.7700023203789597`*^9, 
   3.770002326890547*^9}, {3.770002394538095*^9, 3.770002395530733*^9}, 
   3.7700027679923067`*^9, {3.770002798371694*^9, 3.770002800119255*^9}, {
   3.770002877651761*^9, 3.770002925582965*^9}, {3.77000315453408*^9, 
   3.770003184766019*^9}, {3.770003536085965*^9, 3.770003538757196*^9}, {
   3.770003924187777*^9, 3.770003930214451*^9}, {3.770069647745014*^9, 
   3.770069656842497*^9}, {3.77173653265077*^9, 3.771736574851213*^9}, {
   3.771737246796062*^9, 3.771737247365106*^9}, {3.771737279877694*^9, 
   3.771737282860491*^9}, {3.771737529088861*^9, 3.771737550264186*^9}, {
   3.7717376634319277`*^9, 3.771737702377349*^9}, {3.771886270708323*^9, 
   3.7718864287232647`*^9}, {3.771886599323255*^9, 3.7718866193936577`*^9}, {
   3.771886657146904*^9, 3.7718867048187532`*^9}, 3.771886798500598*^9, {
   3.771886951259272*^9, 3.771886959754444*^9}, {3.771887141669044*^9, 
   3.7718871421651993`*^9}, {3.771975329328061*^9, 3.771975409762355*^9}, {
   3.771978210869731*^9, 3.771978211877509*^9}, {3.772179859945352*^9, 
   3.772179894447343*^9}, {3.772179945519964*^9, 3.7721799492711277`*^9}, {
   3.7721799805393457`*^9, 3.7721799879198*^9}, {3.773107199743353*^9, 
   3.7731072237173033`*^9}, 3.7731101655031*^9, {3.7731101978544817`*^9, 
   3.773110205557673*^9}, {3.773110242471981*^9, 3.773110285075965*^9}, 
   3.7731103250792637`*^9, {3.774669498953536*^9, 3.774669509583663*^9}, {
   3.774669625917428*^9, 3.7746696301707163`*^9}, {3.774669677681795*^9, 
   3.77466968382333*^9}, {3.774669720252927*^9, 3.77466977789042*^9}, {
   3.7746699949635487`*^9, 3.774670094487382*^9}, {3.774670159347797*^9, 
   3.7746701761648693`*^9}, {3.7746702249817038`*^9, 3.774670225497427*^9}, {
   3.774670324940365*^9, 3.7746703318465652`*^9}, {3.774670457691408*^9, 
   3.7746704602699747`*^9}, {3.7746705081473703`*^9, 3.774670613121908*^9}, {
   3.7746706779712667`*^9, 3.7746706958627577`*^9}, {3.774670726446306*^9, 
   3.7746707663402767`*^9}, {3.774670804792635*^9, 3.774670840166314*^9}, {
   3.774670914505994*^9, 3.774670928955163*^9}, {3.774671013092362*^9, 
   3.774671020547597*^9}, {3.7746741695963697`*^9, 3.774674196275201*^9}, {
   3.774674269982382*^9, 3.774674277044087*^9}, {3.7746743145422363`*^9, 
   3.774674318122666*^9}, {3.7746743900991898`*^9, 3.7746744505767*^9}, {
   3.774674518948092*^9, 3.774674534766069*^9}, {3.77467462610034*^9, 
   3.774674626956028*^9}, {3.774674696931202*^9, 3.774674940725473*^9}, {
   3.774674990559816*^9, 3.77467505038614*^9}, {3.774675268389057*^9, 
   3.774675269638652*^9}, {3.774675310126822*^9, 3.774675324966753*^9}, {
   3.774675369488654*^9, 3.774675385863097*^9}, {3.7746754527453537`*^9, 
   3.774675453154748*^9}, {3.774675497592506*^9, 3.774675543912025*^9}, {
   3.7746755943323812`*^9, 3.7746756627787647`*^9}, {3.774675813552689*^9, 
   3.774675840431911*^9}, {3.774675881984952*^9, 3.774675915940301*^9}, {
   3.774675993207767*^9, 3.7746760164934273`*^9}, {3.774676088726776*^9, 
   3.774676167753729*^9}, {3.774676217431437*^9, 3.7746762366394053`*^9}, {
   3.774676271138926*^9, 3.774676271977026*^9}, {3.774676482441098*^9, 
   3.774676499479371*^9}, {3.774676567736388*^9, 3.774676626029642*^9}, {
   3.774676693095764*^9, 3.7746767239143677`*^9}, {3.7746768230839157`*^9, 
   3.774676825110347*^9}, {3.774676883974597*^9, 3.774676897830968*^9}, {
   3.774676930229843*^9, 3.7746769308330173`*^9}, {3.7746770027688637`*^9, 
   3.7746770058832607`*^9}, {3.774677094803895*^9, 3.7746771242744102`*^9}, {
   3.7746776660898237`*^9, 3.7746776681489687`*^9}, {3.7746777296083612`*^9, 
   3.774677756629012*^9}, {3.77467782766695*^9, 3.774677840651978*^9}, {
   3.774677875270609*^9, 3.7746779062726994`*^9}, {3.7746780129967203`*^9, 
   3.774678035361142*^9}, {3.774678077216194*^9, 3.7746781211018467`*^9}, {
   3.774678172364605*^9, 3.7746782112307787`*^9}, {3.774678279858591*^9, 
   3.7746783002543*^9}, {3.7746783409365063`*^9, 3.774678512005413*^9}, {
   3.774678579921895*^9, 3.774678667540118*^9}, {3.77467870425844*^9, 
   3.774678796158223*^9}, {3.7746789015997963`*^9, 3.774678970227434*^9}, {
   3.774679006951817*^9, 3.7746790075123453`*^9}, {3.7746792656524982`*^9, 
   3.7746793118306417`*^9}, {3.774679420133904*^9, 3.774679423745126*^9}, {
   3.774679460607765*^9, 3.774679467287754*^9}, {3.7746795458519917`*^9, 
   3.7746796063165197`*^9}, {3.774679638423255*^9, 3.774679695562587*^9}, 
   3.774679847790653*^9, {3.774679900695163*^9, 3.774679901991349*^9}, {
   3.7746799444427013`*^9, 3.774679945441296*^9}, {3.774680094994417*^9, 
   3.774680348711643*^9}, {3.774680387746524*^9, 3.774680507060646*^9}, {
   3.774680600904256*^9, 3.774680601428562*^9}, {3.7746806475136423`*^9, 
   3.774680672055705*^9}, {3.774680721034553*^9, 3.7746807214675293`*^9}, {
   3.774680943057682*^9, 3.774681023374817*^9}, {3.774681068033659*^9, 
   3.774681098008762*^9}, {3.7746813178704987`*^9, 3.7746813231881113`*^9}, {
   3.774681564813962*^9, 3.774681572890978*^9}, {3.774681606933399*^9, 
   3.774681688079672*^9}, {3.7746817272983637`*^9, 3.7746818125751762`*^9}, {
   3.774681869318715*^9, 3.774681889585556*^9}, {3.774682423990234*^9, 
   3.7746825057054653`*^9}, {3.774682871639161*^9, 3.774682875335788*^9}, {
   3.774735658050983*^9, 3.774735660061286*^9}, {3.7747356923800488`*^9, 
   3.774735802483672*^9}, 3.774735846541184*^9, {3.774735886290825*^9, 
   3.77473595239762*^9}, {3.774735996965209*^9, 3.774736031234828*^9}, {
   3.774736110891801*^9, 3.774736130984947*^9}, 3.774736212551581*^9, {
   3.774736330512107*^9, 3.774736335302269*^9}, {3.774736398066229*^9, 
   3.7747364410822363`*^9}, {3.7747365412755547`*^9, 3.774736547630003*^9}, {
   3.774736592311717*^9, 3.774736593644388*^9}, {3.7747366392892923`*^9, 
   3.7747366397121563`*^9}, {3.774736682362751*^9, 3.7747367052487707`*^9}, {
   3.774736784851403*^9, 3.774736796062736*^9}, {3.774736839846788*^9, 
   3.774736887159421*^9}, {3.774736996342473*^9, 3.7747370068753643`*^9}, {
   3.77473705818397*^9, 3.774737065076795*^9}, {3.774737159092545*^9, 
   3.774737162057523*^9}, {3.774737557324922*^9, 3.774737559563733*^9}, {
   3.77473759661311*^9, 3.774737620837596*^9}, {3.7747377075983257`*^9, 
   3.774737723919379*^9}, {3.7747377642677794`*^9, 3.7747377647115803`*^9}, {
   3.774737838589466*^9, 3.7747378611099567`*^9}, {3.774737905904128*^9, 
   3.774737926038726*^9}, {3.774737986277625*^9, 3.774737996966*^9}, {
   3.774738060156554*^9, 3.7747381482245903`*^9}, {3.7747383142349577`*^9, 
   3.7747383562726507`*^9}, {3.7747413647047443`*^9, 3.774741368179653*^9}, {
   3.774741448144043*^9, 3.7747415068199387`*^9}, {3.7747415590790567`*^9, 
   3.774741563974182*^9}, {3.774743115101494*^9, 3.7747431155621*^9}, {
   3.7747481359616003`*^9, 3.7747482191657352`*^9}, {3.774748280912871*^9, 
   3.774748282865204*^9}, {3.774761968497305*^9, 3.7747619833244877`*^9}, {
   3.7748225566774063`*^9, 3.774822561472994*^9}, {3.774823485121611*^9, 
   3.774823487365941*^9}, {3.774823533998863*^9, 3.774823680422901*^9}, {
   3.7748238352060823`*^9, 3.7748238665071697`*^9}, {3.7748239285206127`*^9, 
   3.774823942194188*^9}, {3.77482401860588*^9, 3.774824248145129*^9}, {
   3.774824299395172*^9, 3.774824306072507*^9}, 3.7748244642988987`*^9, {
   3.774824910834579*^9, 3.774824917726246*^9}, 3.774825177720723*^9, {
   3.774826078850441*^9, 3.774826092996784*^9}, {3.7748262417267303`*^9, 
   3.7748263248220663`*^9}, {3.7748263655611057`*^9, 
   3.7748263677510843`*^9}, {3.7748264157000637`*^9, 3.774826434695459*^9}, {
   3.7748265013996487`*^9, 3.774826515924468*^9}, {3.7748267082679977`*^9, 
   3.774826823333785*^9}, {3.7748269130559998`*^9, 3.7748269518478518`*^9}, 
   3.774827099254039*^9, {3.7748271591862*^9, 3.774827330467578*^9}, {
   3.77482751490095*^9, 3.774827524887192*^9}, {3.77482791674785*^9, 
   3.774827925139421*^9}, 3.774828335043939*^9, 3.7748285015315943`*^9, {
   3.774828594994527*^9, 3.774828637750268*^9}, {3.7748287090260878`*^9, 
   3.774828711121828*^9}, {3.774828775927485*^9, 3.774828818413279*^9}, {
   3.7748289814970083`*^9, 3.774829040838955*^9}, 3.774829112936535*^9, 
   3.774829156412806*^9, {3.7748380606731367`*^9, 3.774838084036721*^9}, {
   3.774838150438704*^9, 3.7748381808846607`*^9}, {3.7751701280756903`*^9, 
   3.775170148931467*^9}, {3.77517025469496*^9, 3.775170257580542*^9}, {
   3.77517130885394*^9, 3.775171324636129*^9}, {3.775171384593259*^9, 
   3.775171412154911*^9}, {3.775344133233354*^9, 3.775344142914076*^9}, {
   3.775344189855646*^9, 3.775344232440772*^9}, {3.775344298597817*^9, 
   3.775344364173029*^9}, {3.775344504131885*^9, 3.775344518111999*^9}, {
   3.775344590014139*^9, 3.775344653968161*^9}, {3.7753448363132887`*^9, 
   3.7753449200147257`*^9}, {3.775345157335918*^9, 3.775345167822665*^9}, {
   3.7753452058163023`*^9, 3.7753453175440063`*^9}, {3.775345503946382*^9, 
   3.7753455820661507`*^9}, {3.7753456726837378`*^9, 3.775345682574054*^9}, {
   3.775345733268043*^9, 3.775345738638177*^9}, 3.775345832819578*^9, {
   3.775351093293603*^9, 3.7753511821482773`*^9}, {3.775351248549328*^9, 
   3.775351290675908*^9}, 3.7753514181577682`*^9, {3.775351477576037*^9, 
   3.775351674075726*^9}, {3.775351753924776*^9, 3.775351790076612*^9}, {
   3.7753518211879177`*^9, 3.7753518897010193`*^9}, {3.7753519367406893`*^9, 
   3.7753520058234243`*^9}, {3.7753520538866177`*^9, 
   3.7753520697165422`*^9}, {3.775352229234358*^9, 3.7753522394534063`*^9}, {
   3.775352278380034*^9, 3.7753523074781923`*^9}, {3.7753523636765347`*^9, 
   3.775352374287228*^9}, {3.77535246391319*^9, 3.775352495807428*^9}, {
   3.7753525768688383`*^9, 3.775352581024641*^9}, {3.7753526858553677`*^9, 
   3.775352687354599*^9}, 3.77535273629959*^9, {3.77535278014159*^9, 
   3.775352780650072*^9}, {3.775352835803854*^9, 3.775352901936612*^9}, {
   3.77535335538536*^9, 3.775353437913493*^9}, {3.775353489562211*^9, 
   3.775353562558559*^9}, {3.7753536842920628`*^9, 3.775353692615284*^9}, {
   3.7753537533572683`*^9, 3.775353767120564*^9}},
 CellLabel->"In[23]:=",ExpressionUUID->"08896e16-d9ac-4936-9217-7e8fe02e7fbc"],

Cell[BoxData[
 DynamicModuleBox[{$CellContext`ndel$$ = 1, $CellContext`s$$ = 
  1, $CellContext`or$$ = 1, $CellContext`MemKin$$ = {
  0}, $CellContext`MemKinNorm$$ = {0}, $CellContext`MemKinNormSh$$ = {
  0}, $CellContext`timeLegend$$ = {}, $CellContext`no$$ = 
  1, $CellContext`t$$ = 1, $CellContext`z5$$ = 1}, 
  RowBox[{
   TagBox[GridBox[{
      {
       DynamicBox[ToBoxes[
         Which[$CellContext`t$$ == 1, 
          Which[$CellContext`no$$ == 1, 
           If[$CellContext`z5$$ == 1, 
            If[Length[$CellContext`MemKin$$] >= 2, 
             ListLinePlot[
              Drop[$CellContext`MemKin$$, -1], PlotRange -> All, Frame -> 
              True, FrameLabel -> {"Mangetic Field / G", "Intensity / a. u."},
               GridLines -> Automatic, GridLinesStyle -> 
              Directive[LightGray, Dashed], ImageSize -> {600, 450}, 
              PlotLegends -> Placed[$CellContext`timeLegend$$, Above]], 
             "Memorize Something"], 
            If[Length[$CellContext`MemKin$$] >= 2, 
             $CellContext`PlotExplorer[
              ListLinePlot[
               Drop[$CellContext`MemKin$$, -1], PlotRange -> All, Frame -> 
               True, FrameLabel -> {
                "Mangetic Field / G", "Intensity / a. u."}, GridLines -> 
               Automatic, GridLinesStyle -> Directive[LightGray, Dashed], 
               ImageSize -> {800, 600}, PlotLegends -> 
               Placed[$CellContext`timeLegend$$, Above]]], 
             "Memorize Something"]], $CellContext`no$$ == 2, 
           If[$CellContext`z5$$ == 1, 
            If[Length[$CellContext`MemKinNorm$$] >= 2, 
             ListLinePlot[
              Drop[$CellContext`MemKinNorm$$, -1], PlotRange -> All, Frame -> 
              True, FrameLabel -> {"Mangetic Field / G", "Intensity / a. u."},
               GridLines -> Automatic, GridLinesStyle -> 
              Directive[LightGray, Dashed], ImageSize -> {600, 450}, 
              PlotLegends -> Placed[$CellContext`timeLegend$$, Above]], 
             "Memorize Something"], 
            If[Length[$CellContext`MemKinNorm$$] >= 2, 
             $CellContext`PlotExplorer[
              ListLinePlot[
               Drop[$CellContext`MemKinNorm$$, -1], PlotRange -> All, Frame -> 
               True, FrameLabel -> {
                "Mangetic Field / G", "Intensity / a. u."}, GridLines -> 
               Automatic, GridLinesStyle -> Directive[LightGray, Dashed], 
               ImageSize -> {800, 600}, PlotLegends -> 
               Placed[$CellContext`timeLegend$$, Above]]], 
             "Memorize Something"]]], $CellContext`t$$ == 2, 
          Which[$CellContext`no$$ == 1, 
           If[$CellContext`z5$$ == 1, 
            If[Length[$CellContext`MemKin$$] >= 2, 
             ListLinePlot[
              Drop[$CellContext`MemKin$$, -1], PlotRange -> All, Frame -> 
              True, FrameLabel -> {"Mangetic Field / G", "Intensity / a. u."},
               GridLines -> Automatic, GridLinesStyle -> 
              Directive[LightGray, Dashed], ImageSize -> {600, 450}, 
              PlotLegends -> Placed[$CellContext`timeLegend$$, Above]], 
             "Memorize Something"], 
            If[Length[$CellContext`MemKin$$] >= 2, 
             $CellContext`PlotExplorer[
              ListLinePlot[
               Drop[$CellContext`MemKin$$, -1], PlotRange -> All, Frame -> 
               True, FrameLabel -> {
                "Mangetic Field / G", "Intensity / a. u."}, GridLines -> 
               Automatic, GridLinesStyle -> Directive[LightGray, Dashed], 
               ImageSize -> {800, 600}, PlotLegends -> 
               Placed[$CellContext`timeLegend$$, Above]]], 
             "Memorize Something"]], $CellContext`no$$ == 2, 
           If[$CellContext`z5$$ == 1, 
            If[Length[$CellContext`MemKinNormSh$$] >= 2, 
             ListLinePlot[
              Drop[$CellContext`MemKinNormSh$$, -1], PlotRange -> All, Frame -> 
              True, FrameLabel -> {"Mangetic Field / G", "Intensity / a. u."},
               GridLines -> Automatic, GridLinesStyle -> 
              Directive[LightGray, Dashed], ImageSize -> {600, 450}, 
              PlotLegends -> Placed[$CellContext`timeLegend$$, Above]], 
             "Memorize Something"], 
            If[Length[$CellContext`MemKinNormSh$$] >= 2, 
             $CellContext`PlotExplorer[
              ListLinePlot[
               Drop[$CellContext`MemKinNormSh$$, -1], PlotRange -> All, Frame -> 
               True, FrameLabel -> {
                "Mangetic Field / G", "Intensity / a. u."}, GridLines -> 
               Automatic, GridLinesStyle -> Directive[LightGray, Dashed], 
               ImageSize -> {800, 600}, PlotLegends -> 
               Placed[$CellContext`timeLegend$$, Above]]], 
             "Memorize Something"]]]], StandardForm],
        ImageSizeCache->{126., {3., 9.}}]}
     },
     AutoDelete->False,
     GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
    "Grid"], " ", 
   PanelBox[
    TagBox[GridBox[{
       {
        TagBox[GridBox[{
           {"\<\"Normalization:\"\>", 
            CheckboxBox[Dynamic[$CellContext`no$$], {1, 2}]},
           {"\<\"Type:\"\>", 
            InterpretationBox[
             StyleBox[
              RowBox[{GridBox[{
                 {
                  RadioButtonBox[Dynamic[$CellContext`t$$], {1},
                   DefaultBaseStyle->"RadioButtonBar"], 
                  StyleBox["\<\"Overlapping\"\>", "RadioButtonBarLabel",
                   StripOnInput->False]}
                },
                AutoDelete->False,
                
                GridBoxAlignment->{
                 "Columns" -> {{Left}}, "ColumnsIndexed" -> {}, 
                  "Rows" -> {{Baseline}}, "RowsIndexed" -> {}},
                
                GridBoxItemSize->{
                 "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
                GridBoxSpacings->{"Columns" -> {
                    Offset[0.27999999999999997`], {
                    Offset[0.21]}, 
                    Offset[0.27999999999999997`]}, "ColumnsIndexed" -> {}, 
                  "Rows" -> {
                    Offset[0.2], {
                    Offset[0.4]}, 
                    Offset[0.2]}, "RowsIndexed" -> {}}], "  ", GridBox[{
                 {
                  RadioButtonBox[Dynamic[$CellContext`t$$], {2},
                   DefaultBaseStyle->"RadioButtonBar"], 
                  StyleBox["\<\"Shifting\"\>", "RadioButtonBarLabel",
                   StripOnInput->False]}
                },
                AutoDelete->False,
                
                GridBoxAlignment->{
                 "Columns" -> {{Left}}, "ColumnsIndexed" -> {}, 
                  "Rows" -> {{Baseline}}, "RowsIndexed" -> {}},
                
                GridBoxItemSize->{
                 "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
                GridBoxSpacings->{"Columns" -> {
                    Offset[0.27999999999999997`], {
                    Offset[0.21]}, 
                    Offset[0.27999999999999997`]}, "ColumnsIndexed" -> {}, 
                  "Rows" -> {
                    Offset[0.2], {
                    Offset[0.4]}, 
                    Offset[0.2]}, "RowsIndexed" -> {}}]}], "Deploy"],
             RadioButtonBar[
              Dynamic[$CellContext`t$$], {
              1 -> "Overlapping", 2 -> "Shifting"}]]},
           {"", ""},
           {"\<\"Plot Explorer Function:\"\>", 
            CheckboxBox[Dynamic[$CellContext`z5$$], {1, 2}]},
           {"", ""},
           {"", 
            ButtonBox[
             StyleBox["\<\"Memorize Red (1st Exp) Spectrum\"\>",
              StripOnInput->False,
              FontWeight->Bold],
             Appearance->Automatic,
             ButtonFunction:>{If[$CellContext`\:0421licker2 == 0, 
                 MessageDialog[
                  Style[
                  "Please, open file", 18, 
                   Black]], {$CellContext`timeLegend$$ = Join[{
                    Text[
                    Style[
                    StringJoin[
                    ToString[$CellContext`file], " (Red, 1st Exp)"], 
                    Bold]]}, $CellContext`timeLegend$$]; 
                  Which[$CellContext`s$$ == 1, $CellContext`MemKin$$ = 
                    Join[{$CellContext`data1}, $CellContext`MemKin$$]]; 
                  Which[$CellContext`s$$ == 1, $CellContext`MemKinNorm$$ = 
                    Join[{
                    Transpose[{
                    Part[$CellContext`data1, All, 1], 
                    Part[$CellContext`data1, All, 2]/Max[
                    Abs[
                    
                    Part[$CellContext`data1, All, 
                    2]]]}]}, $CellContext`MemKinNorm$$]]; 
                  Which[$CellContext`s$$ == 1, $CellContext`MemKinNormSh$$ = 
                    Join[{
                    Transpose[{
                    Part[$CellContext`data1, All, 1], 
                    1 (Length[$CellContext`MemKinNormSh$$] - 1) + 
                    Part[$CellContext`data1, All, 2]/Max[
                    Abs[
                    
                    Part[$CellContext`data1, All, 
                    2]]]}]}, $CellContext`MemKinNormSh$$]]; Null}]; Null},
             Evaluator->Automatic,
             FrameMargins->10,
             Method->"Queued"]},
           {"", 
            ButtonBox[
             StyleBox["\<\"Memorize Blue (2nd Exp) Spectrum\"\>",
              StripOnInput->False,
              FontWeight->Bold],
             Appearance->Automatic,
             ButtonFunction:>{If[$CellContext`\:0421licker2 == 0, 
                 MessageDialog[
                  Style[
                  "Please, open file", 18, 
                   Black]], {$CellContext`timeLegend$$ = Join[{
                    Text[
                    Style[
                    StringJoin[
                    ToString[$CellContext`file], " (Blue, 2nd Exp)"], 
                    Bold]]}, $CellContext`timeLegend$$]; 
                  Which[$CellContext`s$$ == 1, $CellContext`MemKin$$ = 
                    Join[{$CellContext`data2}, $CellContext`MemKin$$]]; If[Max[
                    Abs[
                    Part[$CellContext`data2, All, 2]]] == 0, 
                    
                    Which[$CellContext`s$$ == 1, $CellContext`MemKinNorm$$ = 
                    Join[{
                    Transpose[{
                    Part[$CellContext`data2, All, 1], 
                    Part[$CellContext`data2, All, 2]/
                    1}]}, $CellContext`MemKinNorm$$]], 
                    
                    Which[$CellContext`s$$ == 1, $CellContext`MemKinNorm$$ = 
                    Join[{
                    Transpose[{
                    Part[$CellContext`data2, All, 1], 
                    Part[$CellContext`data2, All, 2]/Max[
                    Abs[
                    
                    Part[$CellContext`data2, All, 
                    2]]]}]}, $CellContext`MemKinNorm$$]]]; If[Max[
                    Abs[
                    Part[$CellContext`data2, All, 2]]] == 0, 
                    
                    Which[$CellContext`s$$ == 1, $CellContext`MemKinNormSh$$ = 
                    Join[{
                    Transpose[{
                    Part[$CellContext`data2, All, 1], 
                    1 (Length[$CellContext`MemKinNormSh$$] - 1) + 
                    Part[$CellContext`data2, All, 2]/
                    1}]}, $CellContext`MemKinNormSh$$]], 
                    
                    Which[$CellContext`s$$ == 1, $CellContext`MemKinNormSh$$ = 
                    Join[{
                    Transpose[{
                    Part[$CellContext`data2, All, 1], 
                    1 (Length[$CellContext`MemKinNormSh$$] - 1) + 
                    Part[$CellContext`data2, All, 2]/Max[
                    Abs[
                    
                    Part[$CellContext`data2, All, 
                    2]]]}]}, $CellContext`MemKinNormSh$$]]]; Null}]; Null},
             Evaluator->Automatic,
             FrameMargins->10,
             Method->"Queued"]},
           {"", ""},
           {"\<\"Number to Delete (Counts From Above):\"\>", 
            InputFieldBox[Dynamic[$CellContext`ndel$$], Number,
             FieldSize->13]},
           {"", 
            ButtonBox[
             StyleBox["\<\"Delete Arbitary Spectrum\"\>",
              StripOnInput->False,
              FontWeight->Bold],
             Appearance->Automatic,
             ButtonFunction:>{If[
                 And[
                 Length[$CellContext`MemKin$$] >= 2, 
                  Round[$CellContext`ndel$$] < 
                  Length[$CellContext`MemKin$$]], $CellContext`MemKin$$ = 
                 Drop[$CellContext`MemKin$$, {
                    Round[$CellContext`ndel$$]}]]; If[
                 And[
                 Length[$CellContext`MemKinNorm$$] >= 2, 
                  Round[$CellContext`ndel$$] < 
                  Length[$CellContext`MemKinNorm$$]], \
$CellContext`MemKinNorm$$ = Drop[$CellContext`MemKinNorm$$, {
                    Round[$CellContext`ndel$$]}]]; If[
                 And[
                 Length[$CellContext`MemKinNormSh$$] >= 2, 
                  Round[$CellContext`ndel$$] < 
                  Length[$CellContext`MemKinNormSh$$]], \
$CellContext`MemKinNormSh$$ = Drop[$CellContext`MemKinNormSh$$, {
                    Round[$CellContext`ndel$$]}]]; If[
                 And[
                 Length[$CellContext`timeLegend$$] >= 1, 
                  Round[$CellContext`ndel$$] < 
                  Length[$CellContext`timeLegend$$]], \
$CellContext`timeLegend$$ = Drop[$CellContext`timeLegend$$, {
                    Round[$CellContext`ndel$$]}]]; Null},
             Evaluator->Automatic,
             FrameMargins->10,
             Method->"Queued"]},
           {"", 
            ButtonBox[
             StyleBox["\<\"Delete All\"\>",
              StripOnInput->False,
              FontWeight->Bold],
             Appearance->Automatic,
             
             ButtonFunction:>{
              ClearAll[$CellContext`MemKin$$]; $CellContext`MemKin$$ = {0}; 
               ClearAll[$CellContext`MemKinNorm$$]; $CellContext`MemKinNorm$$ = \
{0}; ClearAll[$CellContext`MemKinNormSh$$]; $CellContext`MemKinNormSh$$ = {0}; 
               Null},
             Evaluator->Automatic,
             FrameMargins->10,
             Method->"Queued"]}
          },
          AutoDelete->False,
          
          GridBoxItemSize->{
           "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
         "Grid"]}
      },
      AutoDelete->False,
      GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
     
     "Grid"],
    Background->RGBColor[0.985, 0.985, 0.985],
    FrameMargins->{{5, 5}, {5, 5}}]}],
  DynamicModuleValues:>{}]], "Output",
 CellChangeTimes->{
  3.775351907443507*^9, 3.775352010880265*^9, 3.775352070104085*^9, {
   3.7753522030808353`*^9, 3.775352219041006*^9}, {3.775352261856114*^9, 
   3.775352279486046*^9}, {3.775352336818282*^9, 3.7753523881468143`*^9}, 
   3.7753526321515408`*^9, {3.775352672601183*^9, 3.775352698434503*^9}, 
   3.775352806723967*^9, 3.775352842408641*^9, 3.775352906334631*^9, {
   3.775353308706827*^9, 3.775353340729841*^9}, {3.775353390806987*^9, 
   3.775353456009856*^9}, {3.775353503957858*^9, 3.775353572711413*^9}, 
   3.775353626386842*^9, {3.775353700252606*^9, 3.775353721689641*^9}, 
   3.7753537709676943`*^9, 3.7758559842967806`*^9, 3.794787294830578*^9, 
   3.8074993385650263`*^9},
 CellLabel->"Out[23]=",ExpressionUUID->"dc31775f-562b-41e7-ae6e-266e9812fc9e"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{"data1Inter", "=", 
  RowBox[{"Interpolation", "[", "data1", "]"}]}], "\[IndentingNewLine]", 
 RowBox[{"data2Inter", "=", 
  RowBox[{"Interpolation", "[", "data2", "]"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"Int", "[", "a_", "]"}], ":=", 
  RowBox[{"NIntegrate", "[", 
   RowBox[{
    RowBox[{"data1Inter", "[", "x", "]"}], ",", 
    RowBox[{"{", 
     RowBox[{"x", ",", "0", ",", "a"}], "}"}]}], "]"}]}]}], "Input",
 CellChangeTimes->{{3.807499562539166*^9, 3.807499666731578*^9}, {
  3.8074997287743115`*^9, 3.8074997287872477`*^9}, {3.8075002752599993`*^9, 
  3.807500278803091*^9}},
 CellLabel->"In[98]:=",ExpressionUUID->"cc6aaa52-772e-470c-b3b6-4696dff7782d"],

Cell[BoxData[
 InterpretationBox[
  RowBox[{
   TagBox["InterpolatingFunction",
    "SummaryHead"], "[", 
   DynamicModuleBox[{Typeset`open$$ = False, Typeset`embedState$$ = "Ready"}, 
    
    TemplateBox[{PaneSelectorBox[{False -> GridBox[{{
            PaneBox[
             ButtonBox[
              DynamicBox[
               FEPrivate`FrontEndResource[
               "FEBitmaps", "SquarePlusIconMedium"]], 
              ButtonFunction :> (Typeset`open$$ = True), Appearance -> None, 
              Evaluator -> Automatic, Method -> "Preemptive"], 
             Alignment -> {Center, Center}, ImageSize -> 
             Dynamic[{
               Automatic, 3.5 CurrentValue["FontCapHeight"]/
                AbsoluteCurrentValue[Magnification]}]], 
            GraphicsBox[{{{{}, {}, 
                TagBox[{
                  Directive[
                   Opacity[1.], 
                   RGBColor[0.368417, 0.506779, 0.709798], 
                   AbsoluteThickness[1]], 
                  LineBox[CompressedData["
1:eJwB0QMu/CFib1JlAgAAADwAAAACAAAAQx07V6GoGj95VCfMBLBEPzG0biXh
c1hAvh4pwy5rTj+1futIJntpQCOexzsb0kg/1FzSoL/tckCUzOO8g8tFP576
0NzY/nhA1glkP+xgQj8HgzAVlZN/QLhCb+ILzDw/TUtpd/HbgkAQ0u+JpTwu
P2fKauLpL4ZAl1pGGDsDDj+pST2tWHSJQBVdQFqhXhK/gA6xSJCAjEBAQyGp
ZUkzv6ZIVWKZzo9Apqj4+DUqPL8xZE2mNXKRQDJ6n9ucZES/I6RYy1n1kkDX
l+axpbhIv70efK9mmZRA1D8njXYgSb8hPPD7VyGWQCrOoIVx+0i/LZR8BzLK
l0AaXRf9wRZNv01s8UJHa5lAWXie25dHSr8457bmQPCaQF1qv4StV1i/y5yU
SSOWnECx5NVHdmMoPyj1whTqH55A3Im+oid2UL8tiAmfmcqfQCfCrfdEWkm/
o02cLMK2oECc8C+O3KE/v5Uo3L0peqFAKbKhO1sUL7/bIKiuBU6iQFs7H0Di
jww/h2qc09MTo0AZB7gHYvs7Pz30hJC/1aNAFRVCgLjXST9Hm/msH6ikQDuU
nuf2tFU/tpOW/XFspUCVgU5gSlldP3mpv604QaZA2RKTWBCvYD9G/9z1HBKn
QAjkQ3R3RzU/eKYicvPUp0B1HbRvXNpnv/5q9E0+qKhAgaaBf/VDc7/pgO5d
e22pQMEnz2s2iXO/39bcBdYuqkBUOT/dokZwvyhKVw2lAKtAX59DAYdMdb/X
DvpIZsSrQEdUq6ICx3C/2vAo5JuYrECMcsCS9cptv0IkgLPDXq1A8wdkxLfS
Zb+0l8saCSGuQD84BNVzv2i/eiij4cLzrkDGK6YKq+Nkv6UKo9xuuK9AboYA
B0r/Yb8ShZebx0awQKM5CIgbFl+/16TXlGavsEBGRJILlL1Tv07tK6j+ELFA
v0hYpVJKWL9vREbr0HqxQGc5SA7FrVW/Q8R0SJzdsUDesRZjLAFSvxxknXF2
PrJAPVdSZsLET7+fEozKiqeyQOENOUD1xUm/1emOPZgJs0DXi5a5eH1Gv7TP
V+Dfc7NAf42dotFYQ7+Z1RpPNtyzQHCfJGDfGEC/MATy14U9tEAKf+nOdYM4
v3FBj5APp7RAHgfQqedMMb9lp0Bjkgm1QCgdj/fPjim/Axy4ZU90tUAn7KFc
pgIov6awKTQb3bVAnCq0/y4UEL/7ba8c4D62QA4hlnSpLP8++jn7NN+otkBy
Zm8+1vcQP6wuW2fXC7dA+2HeaV0xFT+q11X5/2+3QE5VGq8IwCI/NAHPWQ==

                   "]]}, 
                 Annotation[#, 
                  "Charting`Private`Tag$317572#1"]& ]}}, {}, {}}, {
             DisplayFunction -> Identity, Ticks -> {Automatic, Automatic}, 
              AxesOrigin -> {0, 0}, FrameTicks -> {{{}, {}}, {{}, {}}}, 
              GridLines -> {None, None}, DisplayFunction -> Identity, 
              PlotRangePadding -> {{
                 Scaled[0.1], 
                 Scaled[0.1]}, {
                 Scaled[0.1], 
                 Scaled[0.1]}}, PlotRangeClipping -> True, ImagePadding -> 
              All, DisplayFunction -> Identity, AspectRatio -> 1, 
              Axes -> {False, False}, AxesLabel -> {None, None}, 
              AxesOrigin -> {0, 0}, DisplayFunction :> Identity, 
              Frame -> {{True, True}, {True, True}}, 
              FrameLabel -> {{None, None}, {None, None}}, FrameStyle -> 
              Directive[
                Opacity[0.5], 
                Thickness[Tiny], 
                RGBColor[0.368417, 0.506779, 0.709798]], 
              FrameTicks -> {{None, None}, {None, None}}, 
              GridLines -> {None, None}, GridLinesStyle -> Directive[
                GrayLevel[0.5, 0.4]], ImageSize -> 
              Dynamic[{
                Automatic, 3.5 CurrentValue["FontCapHeight"]/
                 AbsoluteCurrentValue[Magnification]}], 
              Method -> {
               "DefaultBoundaryStyle" -> Automatic, "DefaultMeshStyle" -> 
                AbsolutePointSize[6], "ScalingFunctions" -> None, 
                "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
                    (Identity[#]& )[
                    Part[#, 1]], 
                    (Identity[#]& )[
                    Part[#, 2]]}& ), "CopiedValueFunction" -> ({
                    (Identity[#]& )[
                    Part[#, 1]], 
                    (Identity[#]& )[
                    Part[#, 2]]}& )}}, 
              PlotRange -> {{0., 6000.}, {-0.005199935305632979, 
               0.0020366019494722884`}}, PlotRangeClipping -> True, 
              PlotRangePadding -> {{
                 Scaled[0.1], 
                 Scaled[0.1]}, {
                 Scaled[0.1], 
                 Scaled[0.1]}}, Ticks -> {Automatic, Automatic}}], 
            GridBox[{{
               RowBox[{
                 TagBox["\"Domain: \"", "SummaryItemAnnotation"], 
                 "\[InvisibleSpace]", 
                 TagBox[
                  RowBox[{"{", 
                    RowBox[{"{", 
                    RowBox[{"0.`", ",", "6000.`"}], "}"}], "}"}], 
                  "SummaryItem"]}]}, {
               RowBox[{
                 TagBox["\"Output: \"", "SummaryItemAnnotation"], 
                 "\[InvisibleSpace]", 
                 TagBox["\"scalar\"", "SummaryItem"]}]}}, 
             GridBoxAlignment -> {
              "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, AutoDelete -> 
             False, GridBoxItemSize -> {
              "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
             GridBoxSpacings -> {"Columns" -> {{2}}, "Rows" -> {{Automatic}}},
              BaseStyle -> {
              ShowStringCharacters -> False, NumberMarks -> False, 
               PrintPrecision -> 3, ShowSyntaxStyles -> False}]}}, 
          GridBoxAlignment -> {"Rows" -> {{Top}}}, AutoDelete -> False, 
          GridBoxItemSize -> {
           "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
          BaselinePosition -> {1, 1}], True -> GridBox[{{
            PaneBox[
             ButtonBox[
              DynamicBox[
               FEPrivate`FrontEndResource[
               "FEBitmaps", "SquareMinusIconMedium"]], 
              ButtonFunction :> (Typeset`open$$ = False), Appearance -> None, 
              Evaluator -> Automatic, Method -> "Preemptive"], 
             Alignment -> {Center, Center}, ImageSize -> 
             Dynamic[{
               Automatic, 3.5 CurrentValue["FontCapHeight"]/
                AbsoluteCurrentValue[Magnification]}]], 
            GraphicsBox[{{{{}, {}, 
                TagBox[{
                  Directive[
                   Opacity[1.], 
                   RGBColor[0.368417, 0.506779, 0.709798], 
                   AbsoluteThickness[1]], 
                  LineBox[CompressedData["
1:eJwB0QMu/CFib1JlAgAAADwAAAACAAAAQx07V6GoGj95VCfMBLBEPzG0biXh
c1hAvh4pwy5rTj+1futIJntpQCOexzsb0kg/1FzSoL/tckCUzOO8g8tFP576
0NzY/nhA1glkP+xgQj8HgzAVlZN/QLhCb+ILzDw/TUtpd/HbgkAQ0u+JpTwu
P2fKauLpL4ZAl1pGGDsDDj+pST2tWHSJQBVdQFqhXhK/gA6xSJCAjEBAQyGp
ZUkzv6ZIVWKZzo9Apqj4+DUqPL8xZE2mNXKRQDJ6n9ucZES/I6RYy1n1kkDX
l+axpbhIv70efK9mmZRA1D8njXYgSb8hPPD7VyGWQCrOoIVx+0i/LZR8BzLK
l0AaXRf9wRZNv01s8UJHa5lAWXie25dHSr8457bmQPCaQF1qv4StV1i/y5yU
SSOWnECx5NVHdmMoPyj1whTqH55A3Im+oid2UL8tiAmfmcqfQCfCrfdEWkm/
o02cLMK2oECc8C+O3KE/v5Uo3L0peqFAKbKhO1sUL7/bIKiuBU6iQFs7H0Di
jww/h2qc09MTo0AZB7gHYvs7Pz30hJC/1aNAFRVCgLjXST9Hm/msH6ikQDuU
nuf2tFU/tpOW/XFspUCVgU5gSlldP3mpv604QaZA2RKTWBCvYD9G/9z1HBKn
QAjkQ3R3RzU/eKYicvPUp0B1HbRvXNpnv/5q9E0+qKhAgaaBf/VDc7/pgO5d
e22pQMEnz2s2iXO/39bcBdYuqkBUOT/dokZwvyhKVw2lAKtAX59DAYdMdb/X
DvpIZsSrQEdUq6ICx3C/2vAo5JuYrECMcsCS9cptv0IkgLPDXq1A8wdkxLfS
Zb+0l8saCSGuQD84BNVzv2i/eiij4cLzrkDGK6YKq+Nkv6UKo9xuuK9AboYA
B0r/Yb8ShZebx0awQKM5CIgbFl+/16TXlGavsEBGRJILlL1Tv07tK6j+ELFA
v0hYpVJKWL9vREbr0HqxQGc5SA7FrVW/Q8R0SJzdsUDesRZjLAFSvxxknXF2
PrJAPVdSZsLET7+fEozKiqeyQOENOUD1xUm/1emOPZgJs0DXi5a5eH1Gv7TP
V+Dfc7NAf42dotFYQ7+Z1RpPNtyzQHCfJGDfGEC/MATy14U9tEAKf+nOdYM4
v3FBj5APp7RAHgfQqedMMb9lp0Bjkgm1QCgdj/fPjim/Axy4ZU90tUAn7KFc
pgIov6awKTQb3bVAnCq0/y4UEL/7ba8c4D62QA4hlnSpLP8++jn7NN+otkBy
Zm8+1vcQP6wuW2fXC7dA+2HeaV0xFT+q11X5/2+3QE5VGq8IwCI/NAHPWQ==

                   "]]}, 
                 Annotation[#, 
                  "Charting`Private`Tag$317572#1"]& ]}}, {}, {}}, {
             DisplayFunction -> Identity, Ticks -> {Automatic, Automatic}, 
              AxesOrigin -> {0, 0}, FrameTicks -> {{{}, {}}, {{}, {}}}, 
              GridLines -> {None, None}, DisplayFunction -> Identity, 
              PlotRangePadding -> {{
                 Scaled[0.1], 
                 Scaled[0.1]}, {
                 Scaled[0.1], 
                 Scaled[0.1]}}, PlotRangeClipping -> True, ImagePadding -> 
              All, DisplayFunction -> Identity, AspectRatio -> 1, 
              Axes -> {False, False}, AxesLabel -> {None, None}, 
              AxesOrigin -> {0, 0}, DisplayFunction :> Identity, 
              Frame -> {{True, True}, {True, True}}, 
              FrameLabel -> {{None, None}, {None, None}}, FrameStyle -> 
              Directive[
                Opacity[0.5], 
                Thickness[Tiny], 
                RGBColor[0.368417, 0.506779, 0.709798]], 
              FrameTicks -> {{None, None}, {None, None}}, 
              GridLines -> {None, None}, GridLinesStyle -> Directive[
                GrayLevel[0.5, 0.4]], ImageSize -> 
              Dynamic[{
                Automatic, 3.5 CurrentValue["FontCapHeight"]/
                 AbsoluteCurrentValue[Magnification]}], 
              Method -> {
               "DefaultBoundaryStyle" -> Automatic, "DefaultMeshStyle" -> 
                AbsolutePointSize[6], "ScalingFunctions" -> None, 
                "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
                    (Identity[#]& )[
                    Part[#, 1]], 
                    (Identity[#]& )[
                    Part[#, 2]]}& ), "CopiedValueFunction" -> ({
                    (Identity[#]& )[
                    Part[#, 1]], 
                    (Identity[#]& )[
                    Part[#, 2]]}& )}}, 
              PlotRange -> {{0., 6000.}, {-0.005199935305632979, 
               0.0020366019494722884`}}, PlotRangeClipping -> True, 
              PlotRangePadding -> {{
                 Scaled[0.1], 
                 Scaled[0.1]}, {
                 Scaled[0.1], 
                 Scaled[0.1]}}, Ticks -> {Automatic, Automatic}}], 
            GridBox[{{
               RowBox[{
                 TagBox["\"Domain: \"", "SummaryItemAnnotation"], 
                 "\[InvisibleSpace]", 
                 TagBox[
                  RowBox[{"{", 
                    RowBox[{"{", 
                    RowBox[{"0.`", ",", "6000.`"}], "}"}], "}"}], 
                  "SummaryItem"]}]}, {
               RowBox[{
                 TagBox["\"Output: \"", "SummaryItemAnnotation"], 
                 "\[InvisibleSpace]", 
                 TagBox["\"scalar\"", "SummaryItem"]}]}, {
               RowBox[{
                 TagBox["\"Order: \"", "SummaryItemAnnotation"], 
                 "\[InvisibleSpace]", 
                 TagBox["3", "SummaryItem"]}]}, {
               RowBox[{
                 TagBox["\"Method: \"", "SummaryItemAnnotation"], 
                 "\[InvisibleSpace]", 
                 TagBox["\"Hermite\"", "SummaryItem"]}]}, {
               RowBox[{
                 TagBox["\"Periodic: \"", "SummaryItemAnnotation"], 
                 "\[InvisibleSpace]", 
                 TagBox["False", "SummaryItem"]}]}}, 
             GridBoxAlignment -> {
              "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, AutoDelete -> 
             False, GridBoxItemSize -> {
              "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
             GridBoxSpacings -> {"Columns" -> {{2}}, "Rows" -> {{Automatic}}},
              BaseStyle -> {
              ShowStringCharacters -> False, NumberMarks -> False, 
               PrintPrecision -> 3, ShowSyntaxStyles -> False}]}}, 
          GridBoxAlignment -> {"Rows" -> {{Top}}}, AutoDelete -> False, 
          GridBoxItemSize -> {
           "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
          BaselinePosition -> {1, 1}]}, 
       Dynamic[Typeset`open$$], ImageSize -> Automatic]},
     "SummaryPanel"],
    DynamicModuleValues:>{}], "]"}],
  InterpolatingFunction[{{0., 6000.}}, {
   5, 7, 0, {1201}, {4}, 0, 0, 0, 0, Automatic, {}, {}, 
    False}, CompressedData["
1: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
zwxexPG8jNm8ilN5PfN5C2fxTpasD/8Xg4ViSg==
   "], {
   Developer`PackedArrayForm, CompressedData["
1:eJwd11MMGIgSAMDatm3btm3btm3btm3btm3zrry+6dtkks3+rxI2al+pXcAA
AQJsChLg//E3D0Rg/paCEozghCAkoQhNGMISjvBEICKRiEwUohKN6MQgJrGI
TRziEo/4JCAhiUhMEpKSjOSkICWpSE0a0pKO9GQgI5nITBayko3s5CAnuchN
HvKSj/wUoCCFKEwRilKM4pSgJKUoTRnKUo7yVKAilahMFapSjerUoCa1qE0d
6lKP+jSgIY1oTBOa0ozmtKAlrWhNG9rSjvZ0oCOd6EwXutKN7vSgJ73oTR/6
0o/+DGAggxjMEIYyjOGMYCSjGM0YxjKO8UxgIpOYzBSmMo3pzGAms5jNHOYy
j/ksYCGLWMwSlrKM5axgJatYzRrWso71bGAjm9jMFrayje3sYCe72M0e9rKP
/RzgIIc4zBGOcozjnOAkpzjNGc5yjvNc4CKXuMwVrnKN69zgJre4zR3uco/7
POAhj3jME57yjOe84CWveM0b3vKO93zgI5/4zBe+8g//8o3v/OAnv/jNf/zh
b/MHJBCBCUJQghGcEIQkFKEJQ1jCEZ4IRCQSkYlCVKIRnRjEJBaxiUNc4hGf
BCQkEYlJQlKSkZwUpCQVqUlDWtKRngxkJBOZyUJWspGdHOQkF7nJQ17ykZ8C
FKQQhSlCUYpRnBKUpBSlKUNZylGeClSkEpWpQlWqUZ0a1KQWtalDXepRnwY0
pBGNaUJTmtGcFrSkFa1pQ1v+DvD2dKAjnehMF7rSje70oCe96E0f+tKP/gxg
IIMYzBCGMozhjGAkoxjNGMYyjvFMYCKTmMwUpjKN6cxgJrOYzRzmMo/5LGAh
i1jMEpayjOWsYCWrWM0a1rKO9WxgI5vYzBa2so3t7GAnu9jNHvayj/0c4CCH
OMwRjnKM45zgJKc4zRnOco7zXOAil7jMFa5yjevc4Ca3uM0d7nKP+zzgIY94
zBOe8oznvOAlr3jNG97yjvd84COf+MwXvvIP//KN7/zgJ7/4zX/84e/iD0gg
AhOEoAQjOCEISShCE4awhCM8EYhIJCIThahEIzoxiEksYhOHuMQjPglISCIS
k4SkJCM5KUhJKlKThrSkIz0ZyEgmMpOFrGQjOznISS5yk4e85CM/BShIIQpT
hKIUozglKEkpSlOGspSjPBWoSCUqU4WqVKM6NahJLWpTh7rUoz4NaEgjGtOE
pjSjOS1oSSta04a2tKM9HehIJzrTha50ozs96EkvetOHvvSjPwMYyCAGM4Sh
DGM4IxjJKEYzhrGMYzwTmMgkJjOFqUxjOjOYySxmM4e5zGM+C1jIIhazhKUs
YzkrWMkqVrOGtaxjPRvYyCY2s4WtbGM7O9jJLnazh73sYz8HOMghDnOEoxzj
OCc4ySlOc4aznOM8F7jIJS5zhatc4zo3uMktbnOHu9zjPg94yCMe84SnPOM5
L3jJK17zhre84z0f+MgnPvOFr/zDv3zjOz/4yS9+8x9/+Hv0ByQQgQlCUIIR
nBCEJBShCUNYwhGeCEQkEpGJQlSiEZ0YxCQWsYlDXOIRnwQkJBGJSUJSkpGc
FKQkFalJQ1rSkZ4MZCQTmclCVrKRnRzkJBe5yUNe8pGfAhSkEIUpQlGKUZwS
lKQUpSlDWcpRngpUpBKVqUJVqlGdGtSkFrWpQ13qUZ8GNKQRjWlCU5rRnBa0
pBWtaUNb2tGeDnSkE53pQle60Z0e9KQXvelDX/rRnwEMZBCDGcJQhjGcEYxk
FKMZw1jGMZ4JTGQSk5nCVKYxnRnMZBazmcNc5jGfBSxkEYtZwlKWsZwVrGQV
q1nDWtaxng1sZBOb2cJWtrGdHexkF7vZw172sZ8DHOQQhznCUY5xnBOc5BSn
OcNZznGeC1zkEpe5wlWucZ0b3OQWt7nDXe5xnwc85BGPecJTnvGcF7zkFa95
w1ve8Z4PfOQTn/nCV/7hX77xnR/85Be/+Y8//H34AxKIwAQhKMEITghCEorQ
hCEs4QhPBCISichEISrRiE4MYhKL2MQhLvGITwISkojEJCEpyUhOClKSitSk
IS3pSE8GMpKJzGQhK9nITg5ykovc5CEv+chPAQpSiMIUoSjFKE4JSlKK0pSh
LOUoTwUqUonKVKEq1ahODWpSi9rUoS71qE8DGtKIxjShKc1oTgta0orWtKEt
7WhPBzrSic50oSvd6E4PetKL3vShL/3ozwAGMojBDGEowxjOCEYyitGMYSzj
GM8EJjKJyUxhKtOYzgxmMovZzGEu85jPAhayiMUsYSnLWM4KVrKK1axhLetY
zwY28j+wcEbZ
    "], CompressedData["
1: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
B41o4TQ=
    "]}, {Automatic}],
  Editable->False,
  SelectWithContents->True,
  Selectable->False]], "Output",
 CellChangeTimes->{{3.8074995587744465`*^9, 3.8074996095810766`*^9}, {
   3.8074996474920206`*^9, 3.807499667361198*^9}, 3.8074997296679134`*^9, 
   3.807500280501736*^9},
 CellLabel->"Out[98]=",ExpressionUUID->"3d54340a-b245-40dc-b590-120ec9bbca68"],

Cell[BoxData[
 InterpretationBox[
  RowBox[{
   TagBox["InterpolatingFunction",
    "SummaryHead"], "[", 
   DynamicModuleBox[{Typeset`open$$ = False, Typeset`embedState$$ = "Ready"}, 
    
    TemplateBox[{PaneSelectorBox[{False -> GridBox[{{
            PaneBox[
             ButtonBox[
              DynamicBox[
               FEPrivate`FrontEndResource[
               "FEBitmaps", "SquarePlusIconMedium"]], 
              ButtonFunction :> (Typeset`open$$ = True), Appearance -> None, 
              Evaluator -> Automatic, Method -> "Preemptive"], 
             Alignment -> {Center, Center}, ImageSize -> 
             Dynamic[{
               Automatic, 3.5 CurrentValue["FontCapHeight"]/
                AbsoluteCurrentValue[Magnification]}]], 
            GraphicsBox[{{{{}, {}, 
                TagBox[{
                  Directive[
                   Opacity[1.], 
                   RGBColor[0.368417, 0.506779, 0.709798], 
                   AbsoluteThickness[1]], 
                  LineBox[CompressedData["
1:eJwB0QMu/CFib1JlAgAAADwAAAACAAAAQx07V6GoGj9f+8tRz38BPzG0biXh
c1hAis+F7DE9RT+1futIJntpQBNBuujXq0o/1FzSoL/tckApTYCbUuBGP576
0NzY/nhAErJZ82oEQz8HgzAVlZN/QEhxNWgJCTo/TUtpd/HbgkBArE2ZNQEy
P2fKauLpL4ZA9URVFtMCCD+pST2tWHSJQBWxQWK55hu/gA6xSJCAjEAi5a3R
rGIyv6ZIVWKZzo9AnjoGxCdfPL8xZE2mNXKRQL4XOGoHB0a/I6RYy1n1kkC+
Ev59F6dIv70efK9mmZRAi1J+cyOGSL8hPPD7VyGWQMbR/HzQF0m/LZR8BzLK
l0DPvt6qhs5Mv01s8UJHa5lAYAoQDbJ0S78457bmQPCaQOu0s1JcqFa/y5yU
SSOWnEDCSSlO3FAyPyj1whTqH55AgdVgq5tqUL8tiAmfmcqfQM6GbHVQvEm/
o02cLMK2oEB9ZvYKeqRCv5Uo3L0peqFAqfvreLDWML/bIKiuBU6iQP6+EzuM
yvu+h2qc09MTo0A7FGSjwhYzPz30hJC/1aNAU2tJWQ66Qj9Hm/msH6ikQIJu
FT3A+E0/tpOW/XFspUB0eZzWuY5WP3mpv604QaZAaysGtrb9Wz9G/9z1HBKn
QNXBGuVe8Vs/eKYicvPUp0D1QoKygIsgv/5q9E0+qKhAnzEONd8Fbr/pgO5d
e22pQDAIDnHAwHW/39bcBdYuqkAAshwKsxFzvyhKVw2lAKtAtgTY9wLFd7/X
DvpIZsSrQER93Ct4dXK/2vAo5JuYrEA1n6/aY9hvv0IkgLPDXq1AbYMC+d4L
Z7+0l8saCSGuQAHGDssa12i/eiij4cLzrkBSsgnTZ9Zlv6UKo9xuuK9A2vd5
OZV/Yb8ShZebx0awQH9B+7pRz16/16TXlGavsEAit5oL/4pTv07tK6j+ELFA
ZADPIzPNWL9vREbr0HqxQAu8xGhxdFa/Q8R0SJzdsUCdHuTVwAdSvxxknXF2
PrJA+G7WCPUPT7+fEozKiqeyQMLzVLeybkm/1emOPZgJs0ARALJyM55Fv7TP
V+Dfc7NAq13Bi7Q7Q7+Z1RpPNtyzQOFwTXWtKj2/MATy14U9tEC4DUcq6KY2
v3FBj5APp7RAtgj6UMiGL79lp0Bjkgm1QCJf8sOHISO/Axy4ZU90tUB6SjFs
hY0hv6awKTQb3bVAU3WluT7O7b77ba8c4D62QHF8x4Q6Gwg/+jn7NN+otkBm
Wo51yG8aP6wuW2fXC7dA91SdstyAIz+q11X5/2+3QG1f7kUFoCQ/uD/WYA==

                   "]]}, 
                 Annotation[#, 
                  "Charting`Private`Tag$317626#1"]& ]}}, {}, {}}, {
             DisplayFunction -> Identity, Ticks -> {Automatic, Automatic}, 
              AxesOrigin -> {0, 0}, FrameTicks -> {{{}, {}}, {{}, {}}}, 
              GridLines -> {None, None}, DisplayFunction -> Identity, 
              PlotRangePadding -> {{
                 Scaled[0.1], 
                 Scaled[0.1]}, {
                 Scaled[0.1], 
                 Scaled[0.1]}}, PlotRangeClipping -> True, ImagePadding -> 
              All, DisplayFunction -> Identity, AspectRatio -> 1, 
              Axes -> {False, False}, AxesLabel -> {None, None}, 
              AxesOrigin -> {0, 0}, DisplayFunction :> Identity, 
              Frame -> {{True, True}, {True, True}}, 
              FrameLabel -> {{None, None}, {None, None}}, FrameStyle -> 
              Directive[
                Opacity[0.5], 
                Thickness[Tiny], 
                RGBColor[0.368417, 0.506779, 0.709798]], 
              FrameTicks -> {{None, None}, {None, None}}, 
              GridLines -> {None, None}, GridLinesStyle -> Directive[
                GrayLevel[0.5, 0.4]], ImageSize -> 
              Dynamic[{
                Automatic, 3.5 CurrentValue["FontCapHeight"]/
                 AbsoluteCurrentValue[Magnification]}], 
              Method -> {
               "DefaultBoundaryStyle" -> Automatic, "DefaultMeshStyle" -> 
                AbsolutePointSize[6], "ScalingFunctions" -> None, 
                "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
                    (Identity[#]& )[
                    Part[#, 1]], 
                    (Identity[#]& )[
                    Part[#, 2]]}& ), "CopiedValueFunction" -> ({
                    (Identity[#]& )[
                    Part[#, 1]], 
                    (Identity[#]& )[
                    Part[#, 2]]}& )}}, 
              PlotRange -> {{0., 6000.}, {-0.005803119272514914, 
               0.0017084392821710935`}}, PlotRangeClipping -> True, 
              PlotRangePadding -> {{
                 Scaled[0.1], 
                 Scaled[0.1]}, {
                 Scaled[0.1], 
                 Scaled[0.1]}}, Ticks -> {Automatic, Automatic}}], 
            GridBox[{{
               RowBox[{
                 TagBox["\"Domain: \"", "SummaryItemAnnotation"], 
                 "\[InvisibleSpace]", 
                 TagBox[
                  RowBox[{"{", 
                    RowBox[{"{", 
                    RowBox[{"0.`", ",", "6000.`"}], "}"}], "}"}], 
                  "SummaryItem"]}]}, {
               RowBox[{
                 TagBox["\"Output: \"", "SummaryItemAnnotation"], 
                 "\[InvisibleSpace]", 
                 TagBox["\"scalar\"", "SummaryItem"]}]}}, 
             GridBoxAlignment -> {
              "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, AutoDelete -> 
             False, GridBoxItemSize -> {
              "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
             GridBoxSpacings -> {"Columns" -> {{2}}, "Rows" -> {{Automatic}}},
              BaseStyle -> {
              ShowStringCharacters -> False, NumberMarks -> False, 
               PrintPrecision -> 3, ShowSyntaxStyles -> False}]}}, 
          GridBoxAlignment -> {"Rows" -> {{Top}}}, AutoDelete -> False, 
          GridBoxItemSize -> {
           "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
          BaselinePosition -> {1, 1}], True -> GridBox[{{
            PaneBox[
             ButtonBox[
              DynamicBox[
               FEPrivate`FrontEndResource[
               "FEBitmaps", "SquareMinusIconMedium"]], 
              ButtonFunction :> (Typeset`open$$ = False), Appearance -> None, 
              Evaluator -> Automatic, Method -> "Preemptive"], 
             Alignment -> {Center, Center}, ImageSize -> 
             Dynamic[{
               Automatic, 3.5 CurrentValue["FontCapHeight"]/
                AbsoluteCurrentValue[Magnification]}]], 
            GraphicsBox[{{{{}, {}, 
                TagBox[{
                  Directive[
                   Opacity[1.], 
                   RGBColor[0.368417, 0.506779, 0.709798], 
                   AbsoluteThickness[1]], 
                  LineBox[CompressedData["
1:eJwB0QMu/CFib1JlAgAAADwAAAACAAAAQx07V6GoGj9f+8tRz38BPzG0biXh
c1hAis+F7DE9RT+1futIJntpQBNBuujXq0o/1FzSoL/tckApTYCbUuBGP576
0NzY/nhAErJZ82oEQz8HgzAVlZN/QEhxNWgJCTo/TUtpd/HbgkBArE2ZNQEy
P2fKauLpL4ZA9URVFtMCCD+pST2tWHSJQBWxQWK55hu/gA6xSJCAjEAi5a3R
rGIyv6ZIVWKZzo9AnjoGxCdfPL8xZE2mNXKRQL4XOGoHB0a/I6RYy1n1kkC+
Ev59F6dIv70efK9mmZRAi1J+cyOGSL8hPPD7VyGWQMbR/HzQF0m/LZR8BzLK
l0DPvt6qhs5Mv01s8UJHa5lAYAoQDbJ0S78457bmQPCaQOu0s1JcqFa/y5yU
SSOWnEDCSSlO3FAyPyj1whTqH55AgdVgq5tqUL8tiAmfmcqfQM6GbHVQvEm/
o02cLMK2oEB9ZvYKeqRCv5Uo3L0peqFAqfvreLDWML/bIKiuBU6iQP6+EzuM
yvu+h2qc09MTo0A7FGSjwhYzPz30hJC/1aNAU2tJWQ66Qj9Hm/msH6ikQIJu
FT3A+E0/tpOW/XFspUB0eZzWuY5WP3mpv604QaZAaysGtrb9Wz9G/9z1HBKn
QNXBGuVe8Vs/eKYicvPUp0D1QoKygIsgv/5q9E0+qKhAnzEONd8Fbr/pgO5d
e22pQDAIDnHAwHW/39bcBdYuqkAAshwKsxFzvyhKVw2lAKtAtgTY9wLFd7/X
DvpIZsSrQER93Ct4dXK/2vAo5JuYrEA1n6/aY9hvv0IkgLPDXq1AbYMC+d4L
Z7+0l8saCSGuQAHGDssa12i/eiij4cLzrkBSsgnTZ9Zlv6UKo9xuuK9A2vd5
OZV/Yb8ShZebx0awQH9B+7pRz16/16TXlGavsEAit5oL/4pTv07tK6j+ELFA
ZADPIzPNWL9vREbr0HqxQAu8xGhxdFa/Q8R0SJzdsUCdHuTVwAdSvxxknXF2
PrJA+G7WCPUPT7+fEozKiqeyQMLzVLeybkm/1emOPZgJs0ARALJyM55Fv7TP
V+Dfc7NAq13Bi7Q7Q7+Z1RpPNtyzQOFwTXWtKj2/MATy14U9tEC4DUcq6KY2
v3FBj5APp7RAtgj6UMiGL79lp0Bjkgm1QCJf8sOHISO/Axy4ZU90tUB6SjFs
hY0hv6awKTQb3bVAU3WluT7O7b77ba8c4D62QHF8x4Q6Gwg/+jn7NN+otkBm
Wo51yG8aP6wuW2fXC7dA91SdstyAIz+q11X5/2+3QG1f7kUFoCQ/uD/WYA==

                   "]]}, 
                 Annotation[#, 
                  "Charting`Private`Tag$317626#1"]& ]}}, {}, {}}, {
             DisplayFunction -> Identity, Ticks -> {Automatic, Automatic}, 
              AxesOrigin -> {0, 0}, FrameTicks -> {{{}, {}}, {{}, {}}}, 
              GridLines -> {None, None}, DisplayFunction -> Identity, 
              PlotRangePadding -> {{
                 Scaled[0.1], 
                 Scaled[0.1]}, {
                 Scaled[0.1], 
                 Scaled[0.1]}}, PlotRangeClipping -> True, ImagePadding -> 
              All, DisplayFunction -> Identity, AspectRatio -> 1, 
              Axes -> {False, False}, AxesLabel -> {None, None}, 
              AxesOrigin -> {0, 0}, DisplayFunction :> Identity, 
              Frame -> {{True, True}, {True, True}}, 
              FrameLabel -> {{None, None}, {None, None}}, FrameStyle -> 
              Directive[
                Opacity[0.5], 
                Thickness[Tiny], 
                RGBColor[0.368417, 0.506779, 0.709798]], 
              FrameTicks -> {{None, None}, {None, None}}, 
              GridLines -> {None, None}, GridLinesStyle -> Directive[
                GrayLevel[0.5, 0.4]], ImageSize -> 
              Dynamic[{
                Automatic, 3.5 CurrentValue["FontCapHeight"]/
                 AbsoluteCurrentValue[Magnification]}], 
              Method -> {
               "DefaultBoundaryStyle" -> Automatic, "DefaultMeshStyle" -> 
                AbsolutePointSize[6], "ScalingFunctions" -> None, 
                "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
                    (Identity[#]& )[
                    Part[#, 1]], 
                    (Identity[#]& )[
                    Part[#, 2]]}& ), "CopiedValueFunction" -> ({
                    (Identity[#]& )[
                    Part[#, 1]], 
                    (Identity[#]& )[
                    Part[#, 2]]}& )}}, 
              PlotRange -> {{0., 6000.}, {-0.005803119272514914, 
               0.0017084392821710935`}}, PlotRangeClipping -> True, 
              PlotRangePadding -> {{
                 Scaled[0.1], 
                 Scaled[0.1]}, {
                 Scaled[0.1], 
                 Scaled[0.1]}}, Ticks -> {Automatic, Automatic}}], 
            GridBox[{{
               RowBox[{
                 TagBox["\"Domain: \"", "SummaryItemAnnotation"], 
                 "\[InvisibleSpace]", 
                 TagBox[
                  RowBox[{"{", 
                    RowBox[{"{", 
                    RowBox[{"0.`", ",", "6000.`"}], "}"}], "}"}], 
                  "SummaryItem"]}]}, {
               RowBox[{
                 TagBox["\"Output: \"", "SummaryItemAnnotation"], 
                 "\[InvisibleSpace]", 
                 TagBox["\"scalar\"", "SummaryItem"]}]}, {
               RowBox[{
                 TagBox["\"Order: \"", "SummaryItemAnnotation"], 
                 "\[InvisibleSpace]", 
                 TagBox["3", "SummaryItem"]}]}, {
               RowBox[{
                 TagBox["\"Method: \"", "SummaryItemAnnotation"], 
                 "\[InvisibleSpace]", 
                 TagBox["\"Hermite\"", "SummaryItem"]}]}, {
               RowBox[{
                 TagBox["\"Periodic: \"", "SummaryItemAnnotation"], 
                 "\[InvisibleSpace]", 
                 TagBox["False", "SummaryItem"]}]}}, 
             GridBoxAlignment -> {
              "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, AutoDelete -> 
             False, GridBoxItemSize -> {
              "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
             GridBoxSpacings -> {"Columns" -> {{2}}, "Rows" -> {{Automatic}}},
              BaseStyle -> {
              ShowStringCharacters -> False, NumberMarks -> False, 
               PrintPrecision -> 3, ShowSyntaxStyles -> False}]}}, 
          GridBoxAlignment -> {"Rows" -> {{Top}}}, AutoDelete -> False, 
          GridBoxItemSize -> {
           "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
          BaselinePosition -> {1, 1}]}, 
       Dynamic[Typeset`open$$], ImageSize -> Automatic]},
     "SummaryPanel"],
    DynamicModuleValues:>{}], "]"}],
  InterpolatingFunction[{{0., 6000.}}, {
   5, 7, 0, {1201}, {4}, 0, 0, 0, 0, Automatic, {}, {}, 
    False}, CompressedData["
1:eJxdznFUlYUdBuCbMSNHjowZM2rkyJgxI0eOzNnNyJGZkZGRkZGRkZGRkZGR
kZGRkd2MjIyMjIyMjIyUOXLknDFjjpw5Zs7unDlyzpgxR87cds73/LXvnHue
87vveb/3O3vm3VNvGxAKhU743++dmND/PQnhwBSOYgYv4vjAikvdWe6J7ivc
V7qnBIZz/H9NYPtUea78Ovk0+fXyG+TT5TfK8+Uz5DezIDDKilsCk2fqseBW
/cLAeoZv02fFLP3b9VlQpH+HPsOz9Vlxp36xPgvu0p+jz/Dd+gyXBEYYZfo9
3s8uJs8NLGE74++1y2aGSgNzWM9ehu+zzyjT59lnF5Pvt892xpfZZzNDD9hn
PXsZnm+fUaY/aJ9dTC63z3bGP2SfzQwtsM969jL8sH1GmVghZxEjbGWUsY/4
buaxgo3sYj+TFwZms4S1bGcP4x8NzGQBq9jMboYqA1OZwzLWs4O9THwsMMwi
RtjKKGMXBaYzjxVsZBf7mfx4YDZLWMt29jC+KjCTBaxiM7sZeiIwlTksYz07
2MvExYFhFjHCVkYZ+2RgOvNYwUZ2sZ/J1YHZLGEt29nD+KcCM1nAKjazm6El
ganMYRnr2cFeJj4dGGYRI2xllDERPaYxzFwWsZwRNrCVnYyyj7HPBCYxnVnM
YzErWMNGtrGL+9jPuKWBycxgNvNZwkrWsont3MEeHmP8s4EpzORkFrCUVaxj
MzezmwcZqglMYCrHMYeFLGM169nCDu5mL2OeC0xkGsPMZRHLGWEDW9nJKPsY
uywwienMYh6LWcEaNrKNXdzHfsY9H5jMDGYznyWsZC2b2M4d7OExxtcGpjCT
k1nAUlaxjs3czG4eZOiFwASmchxzWMgyVrOeLezgbvYyZnlgItMYZi6LWM4I
G9jKTkbZx9gXA5OYzizmsZgVrGEj29jFfexnXF1gMjOYzXyWsJK1bGI7d7CH
xxj/UmAKMzmZBSxlFevYzM3s5kGGVgQmMJXjmMNClrGa9WxhB3ezlzEvByYy
jWHmsojljLCBrexklH2MqQ8czEQOZxrHMMxJzOUMFnEuy7mIES5nA9ewlZvY
yZ2M8gD7eJyxrwQOYRJHMJ1jmcUpzONMFnMeK7iYNVzBRq5lG7ewi7u4j4fY
zwErA+M4lMkcyQyOZzanMp+zWML5rOQS1nIlm7iO7dzKHdzDHh7mMQ58NTCe
w5jCUczkBE7mNBZwNku5gFVcyjquYjM3cDO3sZt7eZBHGGoIHMQEnsVUjuY4
TmQOp7OQc1jGhazmMtZzNVu4kR3czt3cz14eZcxrgYOZyOFM4xiGOYm5nMEi
zmU5FzHC5WzgGrZyEzu5k1EeYB+PM3ZV4BAmcQTTOZZZnMI8zmQx57GCi1nD
FWzkWrZxC7u4i/t4iP0c8HpgHIcymSOZwfHM5lTmcxZLOJ+VXMJarmQT17Gd
W7mDe9jDwzzGgY2B8RzGFI5iJidwMqexgLNZygWs4lLWcRWbuYGbuY3d3MuD
PMLQG4GDmMCzmMrRHMeJzOF0FnIOy7iQ1VzGeq5mCzeyg9u5m/vZy6OMWR04
mIkczjSOYZiTmMsZLOJclnMRI1zOBq5hKzexkzsZ5QH28Thj3wwcwiSOYDrH
MotTmMeZLOY8VnAxa7iCjVzLNm5hF3dxHw+xnwOaAuM4lMkcyQyOZzanMp+z
WML5rOQS1nIlm7iO7dzKHdzDHh7mMQ58KzCew5jCUczkBE7mNBZwNku5gFVc
yjquYjM3cDO3sZt7eZBHGFoTOIgJPIupHM1xnMgcTmch57CMC1nNZaznarZw
Izu4nbu5n708ypi3AwczkcOZxjEMcxJzOYNFnMtyLmKEy9nANWzlJnZyJ6M8
wD4eZ0xz4MkczNOYyDM5nOcyjRdwDC9mmJdzEq9mLm/gDN7KIt7Fubyf5XyE
i/gkI3yOy/kyG/gG1/BdtvJ9buKH7OTH3MlPGeXnPMAv2ceveZwnvhMYy1M4
hKcziWdzBM9jOi/kWF7CLF7BKbyWebyJM3k7i3kP5/FBVvAxLubTrOELXMFX
2ci3uJbr2cYPuIUfsYufcBc/4z5+wUP8iv38hgPWBp7EOJ7KoTyDyTyHI3k+
M3gRx/MyZvMqTuX1zOctnMU7WcL7OJ8Ps5JPcAmfZS1f4kq+zia+w3X8Bdv5
a27l77iDf+Qe/oU9/DsP8188xhPeDRzIbzOe3+Uwfp8p/CFH8cfM5E85gT/j
ZF7DabyRBbyNs3k3S/kAF/BRVvEpLuXzrOMrXMU32cz3uIG/5Gb+htv4e3bz
T9zLv/Ig/8Ej/DdDLYHf4iB+hwn8Hs/iD5jKH3E0f8JxvJQTeSVzeB2n82YW
8g7O4b0s40NcyMdZzWe4jC+ynq9xNd9mC3/OjfwVO/hbbucfuJt/5n7+jb38
J4/yP4x5L/BkDuZpTOSZHM5zmcYLOIYXM8zLOYlXM5c3cAZvZRHv4lzez3I+
wkV8khE+x+V8mQ18g2v4Llv5PjfxQ3byY+7kp4zycx7gl+zj1zzOE9cFxvIU
DuHpTOLZHMHzmM4LOZaXMItXcAqvZR5v4kzezmLew3l8kBV8jIv5NGv4Alfw
VTbyLa7lerbxA27hR+ziJ9zFz7iPX/AQv2I/v+GA9YEnMY6ncijPYDLP4Uie
zwxexPG8jNm8ilN5PfN5C2fxTpasD/8Xg4ViSg==
   "], {
   Developer`PackedArrayForm, CompressedData["
1:eJwd11MMGIgSAMDatm3btm3btm3btm3btm3zrry+6dtkks3+rxI2al+pXcAA
AQJsChLg//E3D0Rg/paCEozghCAkoQhNGMISjvBEICKRiEwUohKN6MQgJrGI
TRziEo/4JCAhiUhMEpKSjOSkICWpSE0a0pKO9GQgI5nITBayko3s5CAnuchN
HvKSj/wUoCCFKEwRilKM4pSgJKUoTRnKUo7yVKAilahMFapSjerUoCa1qE0d
6lKP+jSgIY1oTBOa0ozmtKAlrWhNG9rSjvZ0oCOd6EwXutKN7vSgJ73oTR/6
0o/+DGAggxjMEIYyjOGMYCSjGM0YxjKO8UxgIpOYzBSmMo3pzGAms5jNHOYy
j/ksYCGLWMwSlrKM5axgJatYzRrWso71bGAjm9jMFrayje3sYCe72M0e9rKP
/RzgIIc4zBGOcozjnOAkpzjNGc5yjvNc4CKXuMwVrnKN69zgJre4zR3uco/7
POAhj3jME57yjOe84CWveM0b3vKO93zgI5/4zBe+8g//8o3v/OAnv/jNf/zh
b/MHJBCBCUJQghGcEIQkFKEJQ1jCEZ4IRCQSkYlCVKIRnRjEJBaxiUNc4hGf
BCQkEYlJQlKSkZwUpCQVqUlDWtKRngxkJBOZyUJWspGdHOQkF7nJQ17ykZ8C
FKQQhSlCUYpRnBKUpBSlKUNZylGeClSkEpWpQlWqUZ0a1KQWtalDXepRnwY0
pBGNaUJTmtGcFrSkFa1pQ1v+DvD2dKAjnehMF7rSje70oCe96E0f+tKP/gxg
IIMYzBCGMozhjGAkoxjNGMYyjvFMYCKTmMwUpjKN6cxgJrOYzRzmMo/5LGAh
i1jMEpayjOWsYCWrWM0a1rKO9WxgI5vYzBa2so3t7GAnu9jNHvayj/0c4CCH
OMwRjnKM45zgJKc4zRnOco7zXOAil7jMFa5yjevc4Ca3uM0d7nKP+zzgIY94
zBOe8oznvOAlr3jNG97yjvd84COf+MwXvvIP//KN7/zgJ7/4zX/84e/iD0gg
AhOEoAQjOCEISShCE4awhCM8EYhIJCIThahEIzoxiEksYhOHuMQjPglISCIS
k4SkJCM5KUhJKlKThrSkIz0ZyEgmMpOFrGQjOznISS5yk4e85CM/BShIIQpT
hKIUozglKEkpSlOGspSjPBWoSCUqU4WqVKM6NahJLWpTh7rUoz4NaEgjGtOE
pjSjOS1oSSta04a2tKM9HehIJzrTha50ozs96EkvetOHvvSjPwMYyCAGM4Sh
DGM4IxjJKEYzhrGMYzwTmMgkJjOFqUxjOjOYySxmM4e5zGM+C1jIIhazhKUs
YzkrWMkqVrOGtaxjPRvYyCY2s4WtbGM7O9jJLnazh73sYz8HOMghDnOEoxzj
OCc4ySlOc4aznOM8F7jIJS5zhatc4zo3uMktbnOHu9zjPg94yCMe84SnPOM5
L3jJK17zhre84z0f+MgnPvOFr/zDv3zjOz/4yS9+8x9/+Hv0ByQQgQlCUIIR
nBCEJBShCUNYwhGeCEQkEpGJQlSiEZ0YxCQWsYlDXOIRnwQkJBGJSUJSkpGc
FKQkFalJQ1rSkZ4MZCQTmclCVrKRnRzkJBe5yUNe8pGfAhSkEIUpQlGKUZwS
lKQUpSlDWcpRngpUpBKVqUJVqlGdGtSkFrWpQ13qUZ8GNKQRjWlCU5rRnBa0
pBWtaUNb2tGeDnSkE53pQle60Z0e9KQXvelDX/rRnwEMZBCDGcJQhjGcEYxk
FKMZw1jGMZ4JTGQSk5nCVKYxnRnMZBazmcNc5jGfBSxkEYtZwlKWsZwVrGQV
q1nDWtaxng1sZBOb2cJWtrGdHexkF7vZw172sZ8DHOQQhznCUY5xnBOc5BSn
OcNZznGeC1zkEpe5wlWucZ0b3OQWt7nDXe5xnwc85BGPecJTnvGcF7zkFa95
w1ve8Z4PfOQTn/nCV/7hX77xnR/85Be/+Y8//H34AxKIwAQhKMEITghCEorQ
hCEs4QhPBCISichEISrRiE4MYhKL2MQhLvGITwISkojEJCEpyUhOClKSitSk
IS3pSE8GMpKJzGQhK9nITg5ykovc5CEv+chPAQpSiMIUoSjFKE4JSlKK0pSh
LOUoTwUqUonKVKEq1ahODWpSi9rUoS71qE8DGtKIxjShKc1oTgta0orWtKEt
7WhPBzrSic50oSvd6E4PetKL3vShL/3ozwAGMojBDGEowxjOCEYyitGMYSzj
GM8EJjKJyUxhKtOYzgxmMovZzGEu85jPAhayiMUsYSnLWM4KVrKK1axhLetY
zwY28j+wcEbZ
    "], CompressedData["
1:eJxFWnlcjNv/H9U85zwzbZSLRBNt2m4lmrY5U9M2LRptosVEtFDala1xibIW
rkJdkSUuihsSt89kDXFTIReJG7q5GCEh/Ob7mzH+Oq/znM855/mc53M+y/v9
GM9ZFDJvGIPBOK7BYLSNerNmKH8YWeXx85y33+7ywh/ca3/67TPvF9eCHZoS
bXJ/+MohNcZY8mB4VhtDYkymzjvE+fbNmLxmLkmi5f3yn3ftpyVmpGhQK0Gz
25ZsKLOwpYonkxnerttw5VRSEHUgG8mcyKf8Mlu21JUInSfyaV0eEeWU3WTa
8UlE5j4zSuZJDieltDO7PYlxY+hNZpmApHwILsYW3qQzHV9EIm+C/Z2Ook4f
MizmawMu9iU1OYElaLSQ6G8rm4hr/chQ/oMALBWS9ZEnbqBaf2I35d817NEB
RPhx90lcG0Be3b6Tqjk6kLxzEOiyqwPJMu2rhlqdgaTGTP06kgaSn1YyG3UG
g0ik5PMhLYsgot/jYI8KA0lzQqxEtzOAfIbZdzAnkBR7H9xLDwYQ9/xNBrTM
n0DF+plsqT+J04reiCv9SVEuCmFz/Mlsm+PDNXX9Sa/f10ts+XOF/gGkh63h
hxgBJDhn/yCqFRL7KTb7sFyPPOPR83CxkHR1+V5HkULS0O1zCIv9SOfx9dNw
rS85eWFPDbLzI5dnRXphjpDE3ehUw3w/EqUrmoK7fYn/vy3BiCuXf+yaicp8
yMAvrW8Rw5eMSW/YgiU+JMHA1hhH+pKEdXGtqNKPGKy8NRINyvuHP6VjXR+S
krCK4DQfYl+Qk4zTvImT5zcn3OpN4sZNuIrKvIi+/hZtJBMQdyPjg7hSQBKS
Fz9HtQLCVVt2FKUJSM0z249I/v2EOxw8sdiLaJ82TcFiufzmsAjc60UGPIOS
UKUX+QIhR6hKT7J34bhYzPEkZXspAwoLyOSChrVM+Tq0S7wvJZ+ns/bMPCrX
kzQF5a2hej2JpPHTfCZDQD7sPXqCmeZJfs0wUtOsJGT+YVTOKibEwDh+L1XN
JyOz+mcwpR5E0rUVU2l8Ymkx6i1bzCNTzjf9rFnspjx3Z5Li21eBGM6k5PZp
XVTLJWgWS48WuZBJfrXbNFtdSYGrVgclcSHDKlZ60zJnVXvnzbWzbF038uDm
f5aa3c4k6M5ypClxJXFBj0bRDHeSaj59iCp2JRn7Rkyg5W2U7NRWlOai/G7O
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
ks9bseL1HlalCfk/onTRVg==
    "]}, {Automatic}],
  Editable->False,
  SelectWithContents->True,
  Selectable->False]], "Output",
 CellChangeTimes->{{3.8074995587744465`*^9, 3.8074996095810766`*^9}, {
   3.8074996474920206`*^9, 3.807499667361198*^9}, 3.8074997296679134`*^9, 
   3.807500280515699*^9},
 CellLabel->"Out[99]=",ExpressionUUID->"2df7f581-4b37-427c-bf48-da39f5463fb4"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"ClearAll", "[", "Int2", "]"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{"Int21", ":=", 
  RowBox[{"Integrate", "[", 
   RowBox[{
    RowBox[{"data1Inter", "[", "x", "]"}], ",", "x"}], 
   "]"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"Int22", ":=", 
   RowBox[{"Integrate", "[", 
    RowBox[{
     RowBox[{"data2Inter", "[", "x", "]"}], ",", "x"}], "]"}]}], 
  "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{"gr1", " ", "=", " ", 
  RowBox[{"Plot", "[", 
   RowBox[{
    RowBox[{"Evaluate", "[", 
     RowBox[{
      RowBox[{"(", 
       RowBox[{"Int22", "-", "Int21"}], ")"}], "/.", 
      RowBox[{"x", "\[Rule]", "x"}]}], "]"}], ",", 
    RowBox[{"{", 
     RowBox[{"x", ",", "0", ",", "6000"}], "}"}], ",", 
    RowBox[{"PlotStyle", "\[Rule]", "Red"}]}], "]"}]}]}], "Input",
 CellChangeTimes->{{3.807500087126604*^9, 3.8075002386528497`*^9}, {
  3.8075002825959682`*^9, 3.8075003004679384`*^9}, {3.807500333828351*^9, 
  3.8075003452433963`*^9}},
 CellLabel->
  "In[117]:=",ExpressionUUID->"facc09e6-3d9c-4c19-a9de-bbcc056f9ab2"],

Cell[BoxData[
 GraphicsBox[{{{}, {}, 
    TagBox[
     {RGBColor[1, 0, 0], AbsoluteThickness[1.6], Opacity[1.], 
      LineBox[CompressedData["
1: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
       "]]},
     Annotation[#, "Charting`Private`Tag$319089#1"]& ]}, {}, {}},
  AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
  Axes->{True, True},
  AxesLabel->{None, None},
  AxesOrigin->{0, 0},
  DisplayFunction->Identity,
  Frame->{{False, False}, {False, False}},
  FrameLabel->{{None, None}, {None, None}},
  FrameTicks->{{Automatic, 
     Charting`ScaledFrameTicks[{Identity, Identity}]}, {Automatic, 
     Charting`ScaledFrameTicks[{Identity, Identity}]}},
  GridLines->{None, None},
  GridLinesStyle->Directive[
    GrayLevel[0.5, 0.4]],
  ImagePadding->All,
  Method->{
   "DefaultBoundaryStyle" -> Automatic, "DefaultMeshStyle" -> 
    AbsolutePointSize[6], "ScalingFunctions" -> None, 
    "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
        (Identity[#]& )[
         Part[#, 1]], 
        (Identity[#]& )[
         Part[#, 2]]}& ), "CopiedValueFunction" -> ({
        (Identity[#]& )[
         Part[#, 1]], 
        (Identity[#]& )[
         Part[#, 2]]}& )}},
  PlotRange->{{0, 6000}, {-0.2116518003641483, 0.31502849351518913`}},
  PlotRangeClipping->True,
  PlotRangePadding->{{
     Scaled[0.02], 
     Scaled[0.02]}, {
     Scaled[0.05], 
     Scaled[0.05]}},
  Ticks->{Automatic, Automatic}]], "Output",
 CellChangeTimes->{{3.8075003418036222`*^9, 3.807500345604048*^9}},
 CellLabel->
  "Out[120]=",ExpressionUUID->"410ee2c3-6ae8-49f7-81d7-4117342a50c4"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"gr2", "=", 
  RowBox[{"ListLinePlot", "[", 
   RowBox[{
    RowBox[{"Transpose", "[", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"data1", "[", 
        RowBox[{"[", 
         RowBox[{"All", ",", "1"}], "]"}], "]"}], ",", 
       RowBox[{
        RowBox[{"data1", "[", 
         RowBox[{"[", 
          RowBox[{"All", ",", "2"}], "]"}], "]"}], "*", "30"}]}], "}"}], 
     "]"}], ",", 
    RowBox[{"PlotRange", "\[Rule]", "All"}], ",", 
    RowBox[{"PlotStyle", "\[Rule]", " ", "Blue"}]}], "]"}]}]], "Input",
 CellChangeTimes->{{3.8075003639416423`*^9, 3.8075004463395452`*^9}, {
  3.8075006308755817`*^9, 3.8075006629564667`*^9}},
 CellLabel->
  "In[137]:=",ExpressionUUID->"eb11209d-7bb9-4148-9b14-cf7dc930b335"],

Cell[BoxData[
 GraphicsBox[{{}, {{}, {}, 
    {RGBColor[0, 0, 1], PointSize[0.006944444444444445], AbsoluteThickness[
     1.6], LineBox[CompressedData["
1:eJxd3HdYzf3/B/AkncoK2atIZSWzIjyJlmRlVIRoyCZKQlKdtvbe45zTPrtk
lNUpsjdJ3KnMQrc9ft2/8/p8ryv3P/f1uF6v917nKLScdq90VlRQUBAoKSj8
93/mv1X3Nqq5r8qcL5cG1FZrbtO5nkXWRnTEYE+90myy/l+eAfGZM1ZB3XPI
xtj+aviLbaZM+Xn4bnA/+tVEyvddgHc6XzmvREx8EYJYxrFme5m4GW58Drf1
B1O/JXY8Ur+tupaJL8G7PuOVLWYw7dlg+70S1W3hFMdyHHn17sZiU4r7rsCG
GVtNrMaRq1ZCs7neUMWfqd8W4w4oJqsMZ8qvxuAtm0bK+jLtrUFbXlyLiza5
ai1GNgzhVrcz5e3wVk02l+tO9cMekjn2oT08mPYdULXalO38kCm/Hs9jPrmP
G8qUd4TXvoQ+Lcz8YCPuH1LbfVnMeBMCfB9cYO8kN27q2h/fzRDWOEeb65A1
ndAeF/JA2YgZrxO0nL29AjoovmkLVmlvVM29xMzfVjQruGy5MomcuRUq50Rs
VgPTvnPX+W10xugX3rtdK5j2XaC2QBQ5bgiV13SF6ZCmOyrZzHhdcbp65Djn
BRTf5Ia2KL2+LruY9rd1zc/cBhuBu3rzQaZ9dzxvf7rAXDmX2nfHrM+zzF0L
mPnd3rW/mjsguNT9Cmc90/6Oruu9aSfmjagNCZzKzP8u6LRp2Kn8pv2fuQvt
x66GWX/PoPZ342wzf42FLe3Xxt14rrRkmMUZpn97MGDpmh8TmPMQuQdtg97F
B8uY+dqDiOifkznzyAZ78Zy7yVTnBrXnuxcX9nq0c7Wo/pt7sXfr3e3bmPXV
3If1hXPfBijS+Pfsg+/TRUGBmuSqfajdfqVCez/lq++H+Ob4scGnqL5N+yGz
G7N5fD3F+ftha6JfsHgRM34PBPobh+oZkpd7YO4Q1wsvXZn18EBHZbfbOTZU
X7sHeHPHtVwaxYz/QNf9FnkA9iaFp92OMuM/AHZQyqpaBWb8B/Ho+PU/yhbM
/jmIh3FzHrKY+b95EI5rBnPyeNSepmdX7/Hsml/lCYc7g9PYuyiu7gWNxk0a
+feY8XvBK1CppeU55fO98KvMcCtvCjP+QxAan13gXsuM/xCqt03eG1xD5TMP
Qbpq/CTuJ2b8h7Dk7PcKpT5UH7wx/Le+LLCWHOkN9uBFuZwNzH7xhtvYVQMD
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
fOnz4b11FOUrxSHS3bbsJTPeIXE4o39n8xI+1T8pDidKu3n0CmS+38XhQe7I
KaE61B/bODxuuLW/FmS3OIQ3919n1Uj994lDwx13P/a7JDr/cfgWcTPA/BbF
c+NgtLS8Qn0btVceBwXjl997vaD66uKQ9e7YyNBSym+Mwx/3HI8aZn464pDp
VZ0nW0hWiYfs63tH1lQ6jyPiUXA/a9TV5TR+g3iYzB9SoaZO9S+Kh2fzv9Fh
Zym+Lh6zF+3tZh5I9e2Ih8/K5FCZI3P+43FcbH/a4ic5Nh6a6zlXWfnM+Y+H
tpfq7lBV5vzH40Vc9/O9HCj/Zqd/8Lg9g8hNnflbU+NDVjHnPx5FllufmrOp
vl4J2G06dZSVHfVHMwEvSn4MC02n/BkJ+PgxfEmtAc2fRQIOsYRHrGOp/fUJ
aA4wDYqIovJ7EnDmVdnEq8x8+Seg+2y70Ks1lJ+YgLNZcZo1zeSiBPiNif5q
nkf9qUrANIdlCqyX5LsJWDxio7GVJ9XXmoB+1j9Yve9S+Z8J0LIw/qT8ieLq
iXC4cX0vm0/ltRMxpcp3jflEyjdKhOxofQbLhvKtEwGWdbzlRcrflIgB+9Rn
q2pR3CMR915bHDe3pv0VlAjLXyG7WbvIqYmYvMvCwlJM5fmJsO+7USckktq7
lIiQBhuZylLyw0ScUK17qHaI5vdtInT/uMOqN8UVkjCBo7FDrRvFNZLwuUXH
nv2U6tdLwtcLAeWWzHyYJOHUYRtxCHO/Lk/Cp/AJp83vUP+2JiFDJyKh9irZ
KwkaZu82sL4k0PlP6jqezCQoh99pM+tL7YmTkOUaXR8STa5JQmTqTY0bA6h/
9UnooauvavGCyrcnoV+To5tsD+UrJeOidqNCjSl5SDKW5s5IkW0mT0pG8KOL
i0MryUjGtd6KiirM+tsmQ2No0MSgX4l0/pOROb1wt/k96r9PMoR1JWfNm8iR
yYiK+P2InUP5uclIam83tVpH81ueDLW42oraU+S6ZDRpnXvEusec/2QkKjmO
WNKHOf/JmNwxM9iSuU9UUvDT6dk/gefII1LQr+zbTAtmPQxS8P63kp25CfV/
UQpmqIX6yWypP+tS0PrLMcJ8HnlHCq4MLbSUsSjft7O8/8ckc+Y8xqZgyK6J
J0KZ88VLwfjKx6Hmkyn/TAo2Nz3XCGLeu5spSOvf5s/+TfPR1OnLC74qD6T2
vnb2d1/DH5kquVcqAl/uCLdi1k8zFT42KzbJMqn8jFQYCWaUsC0obpGKpYl2
Q2W6VH59Kkx/NuWy9lD+nlTEOvU2kkVS3D8VyRP225g7UPnEVKTdGuHNWkb9
L0pFxZR/jrDdqHxVKq4dNp7PiiDfTcXFZ5eumN+Pp/OfikuBJmeqhbF0/lOh
ItWaynKiuHoaYksrLpl7U/vaaYhafW6cCtM/ozT4DSo7aL6d4tZpsJy3wZs9
kuKb0nDs3++h7FiKe6Sh9dKoxzI1igelwdzdZoSFATk1DT+0NUqCmf3JT4Pb
83lidi7FL6V1Xe+HafBubGkNbKT42zQIzc77mMuo/wrpcAgRzWGZUlwjHeVB
xitlHhTXS0fEZtedsmiySToCbl3zVmHWd3k63vy+PUp5HJXfmo4Fq+ccMveh
fK90cNpmKsmcyWHpaNj8emhQIOVnpmO86I+q+SeyOB3nv1jEsqZT/TXpYOfV
PzRXJNen49zgjWJZT6qvPR0792wdFDSHyitloJUv6Pa//T8kA4+sHxxk36b8
SRmwU9+9sNoijs5/BpYqR62pvknra5uBPzGVh83DyW4ZCK04u4CVQfk+GRh2
r3/V//ZLZEbX/uZmwOfk2O3myym/PAMNq/smsq3JdRnYpGEzIoRxYwZ2pdVa
sGZS/zoy0O6hoBvkRVbKxLWF30LY9uQ+mUhT1ujOvkTlh3TGVU/dZ+mSx2Ti
xqtsqbkN9W9SJr7PfXytejyVn5UJ99qK1zJzMjKxdXZckIxPtspEU45TG2sG
lbfNxMh8rVHmh8mOmUgIdTjE/oeZn0yoGMxoV15M7e/LxDy93F7s7RT3yYSY
t2wfeyk5MBNXBjqNklmSIzMx3rtytayS2k/uLH9gRRJrNcVzM2Ee+rCuui1G
7pJMJE/rkWf+gJnfTHQLGjQjyJ18IRN+/XctMS+OpvnunB/P9gGsm1Fy38+E
93hrK1YvijdmYpiamiW7O9X/OhNTfqnOko2g9jsy4WjcdlbGnP/fmXj//fRk
86NklSwoztnGZR2n9vtnIeDUYE9WFtU3IgvLznPt2d6Ur5OFQx2259nxNF6D
zvI+c4RsA8qfnYX29VZj2UrUv0VZcHv6bxC7mfpvkwWPOy6pgTzKX5cFh8qC
S4HllO+UhYqJySvZBZS/Iwuee3etVnM7KffBLOzBBEuZO8V9s7DqftBFs8FU
PiQLV04kOVR/jKT3IAvjk77EhH2JkDs9C5cbxCU9R5F5nU5K8grlh8gt7Gxf
HOGmJg2j9yIL08J+bQhMpfqqs/D86IZH5hnU/s0snBivMb3XNqrvcRaMrh+Y
rmxF+U1ZmHnm2iM1EfX/fRbaljSNVp0bTu9LFuxNLq1TDQmVWzEbEzWs81UL
gum9yab7jS33oGyEsrZfZwcF0PuTjTfKzgeUs07IPSEbt2+Nesf+QPEZ2cg2
7bY2uIni87KxurumAUvPn96nbAwIqZ6rFndM7pXZWJ7/YU2gsi+9V9m4O7rP
zYCC43K7ZGMat7iXyjFPer+yoXhs5gaVjANye2fjH5bnH9WFXvSeZaN98uxq
5bf75Y7IRs2dpCV9X+yk9y0by8ZcqFQZtkXu7GzYF3GqVFe60nuXDf8/EWtV
G/bJLc3G8Ku9J/ZS2EXvXzbS9s2z66PkLveVbBxaoGij4ruG3sNs9N0tHKbs
7yR3QzZ2y3Q53WFP72M2XEbdO6s6iNr7mI3HmwPzeqxbUfn//pkN7cOf21S/
msmtnIPnnwNUu9etpvczB8bCg0o9hiyWx4fl4FHUxyIW7OXWzoHyhUGsXqlu
cut3esy98z13HJbbKAchTukstasH5V6Yg7S1aqdZTNw6B1rVsU+VY4/LvSYH
H/qmxSsP95N7Uw6ilGp2smso7p4D/jvlGQFhZI8cWJXvNmYrBMp9NAcqB5bp
sIVBcgflwOOfEEt2Zqjc0Tlg6W4yDf4WJndqDiqef0oOLqU4JwdezjF3VPXD
5ebnYONkDROZV7TcFTlwU3M4rdwYKfelHCx1uGlsPitK7us5CL2wLJE1nPIf
5sBox1Av1pM4uV/k4E5tWDz7QJLcbzvne5fxJHNuotyfc/Dw9qUydluC3Aq5
qNBdoct+myy3Wi6MPZueXl2fIbdGLlIcZlu6pmfKPSoXb9PKT/n3yJJbLxeu
K+O3FMgoPi0XdldX9TJ7QnGTXFSvrkoM6p8jt1kujMJz9AKTs+Ve3ll/5NTb
zTEUt8/F9N33DvA45K258C5U/cU9yJF7V2f9274sN9/BldsrFz8ataY2ryL7
5WJaqlZPdixP7rBciNb8rm69Qo7PRaX17sctYQVyZ+Zi/5zX6RMViuQuyMXG
5DFVrzaQxblY8s3+Ofc0+Vwunhpd76+6pETumlwYzl64uXAj+XYuTneEKD50
4Mtdnwvlxu89E1PIzbmInu6o9IBDbs9Fn81mF1QmCuT+nosDzpuTauKFcivl
QcvxwZSHvUVy98mDnU7vYwn/kIfkoXDYdbOvemK5x+QheW9la8JkidyT8sCP
0lZZC/KsPMxaVrm69RoZefj6Utfg60mp3FZ52B1+zohrUSa3bR5ajMpUv1wh
O+ZBuS58eoLzKbnd8uC8aJ1pYlSF3Ps6y1vddfky/7TcPnl44fbQeLD6GbkD
82D1ZfyRB/fJkXlYUG/gPGf2WbmT86Ce5fDtYD3Fc/PwdPp6/UmW5+QuyUPR
3eyOOScq5S7Pw8DK/ca7J1fJfSEPVaeXJI7eRa7LQ74NS5g+7Lzc9zv73y9/
2+AYcmMers8y5Oi+Jb/OQ0GAhcnJKnJHZ3t/9idOmXJB7t95cPQdc9rzFFmF
g2hFPmft7oty9+fgv582b3xGHsHBpm0T7i2zvCS3DgexH3Pjv/iRDTjoMUyW
U3qaPJuDIyoFZqXKl+VexMGZFzYRXCuyDUf+/SaFvI6DxpDR57i9q+V24uDN
gJee82PIOzjIfhmSeiOEfJCDvn8yDrWNksnty8ETAzU/mSE5hIP0m5Hxu53I
sRyUjJ+p2cI4nYMPEWnd5nuQeRycMplqdsyULOTg0nWN2aVTyWc4qKj0ri8b
Rq7mYNaclUdaBpNvdvqP7fE/t6l/jzl4veaGZZsDuYmDNXPuKrTpk99zcHKV
h3bCHxr/Vw7itgjL/wSRFbnoOHT/WIseuRcXzjtaXY5l0vwO4kJLPb2y8gut
jyYXBhKr1cfGkydwsXzfC+UHnrS+M7h4+dRcuyqD9sM8Lq6yf4x1PUP7y4KL
pSjnLvej/biSC91Z3pHfHGg/r+dicmPpAN5JOg8uXAxxjjqe4EHnZw8XW388
XuRpT+fLm4u5+zVnGu6h8+zPRe8NTd9cN9P9EMFF8Hu7B27GhXIncqGhNcwv
6FCe3Nmd5VnD1qtMovu4iAs9vxVFsjkxcku5mFC9vrrnhyNyV3HhZVe+QrXD
m95/Lrrf7zE4cCx9PrvLRVX8wOiXbPrz1AYulHc41bs5cOn952JXkLXtleoS
ev+59PtIQrl/chHv+NlM5bVEbmUeDrQl9Kjde4refx6cEpaO4ymflXsYD359
lPo71lXKrc3D9e/GBfO55+XW56HqRvkezaYLchvxYOrVd6Jh0SW5F/KwYO2O
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
Pm+ppPj2MvxWkDjVulB8T9n/vq/9H351lzc=
      "]]}}, {}, {}, {}, {}},
  AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
  Axes->{True, True},
  AxesLabel->{None, None},
  AxesOrigin->{0, 0},
  DisplayFunction->Identity,
  Frame->{{False, False}, {False, False}},
  FrameLabel->{{None, None}, {None, None}},
  FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
  GridLines->{None, None},
  GridLinesStyle->Directive[
    GrayLevel[0.5, 0.4]],
  ImagePadding->All,
  Method->{"CoordinatesToolOptions" -> {"DisplayFunction" -> ({
        (Identity[#]& )[
         Part[#, 1]], 
        (Identity[#]& )[
         Part[#, 2]]}& ), "CopiedValueFunction" -> ({
        (Identity[#]& )[
         Part[#, 1]], 
        (Identity[#]& )[
         Part[#, 2]]}& )}},
  PlotRange->{{0, 6000.}, {-0.18323504999999998`, 0.2770203}},
  PlotRangeClipping->True,
  PlotRangePadding->{{
     Scaled[0.02], 
     Scaled[0.02]}, {
     Scaled[0.05], 
     Scaled[0.05]}},
  Ticks->{Automatic, Automatic}]], "Output",
 CellChangeTimes->{{3.807500391862251*^9, 3.8075004468614626`*^9}, {
  3.8075006417449617`*^9, 3.807500664020894*^9}},
 CellLabel->
  "Out[137]=",ExpressionUUID->"bc22946e-5547-4c3c-a547-372208d40c86"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Show", "[", 
  RowBox[{"gr1", ",", "gr2", ",", " ", 
   RowBox[{"Frame", "\[Rule]", " ", "True"}], ",", " ", 
   RowBox[{"FrameLabel", "\[Rule]", " ", 
    RowBox[{"{", 
     RowBox[{"\"\<Magnetic Field (G)\>\"", ",", "\"\<Intensity (a.u.)\>\""}], 
     "}"}]}]}], "]"}]], "Input",
 CellChangeTimes->{{3.8075003946776695`*^9, 3.8075003993550034`*^9}, {
  3.8075004557391787`*^9, 3.8075005133656073`*^9}, {3.807500554397434*^9, 
  3.8075006272908697`*^9}},
 CellLabel->
  "In[138]:=",ExpressionUUID->"e9427eda-bb81-41b8-9c5c-bd6b48d6a03e"],

Cell[BoxData[
 GraphicsBox[{{{{}, {}, 
     TagBox[
      {RGBColor[1, 0, 0], AbsoluteThickness[1.6], Opacity[1.], 
       LineBox[CompressedData["
1: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
        "]]},
      Annotation[#, 
       "Charting`Private`Tag$319089#1"]& ]}, {}, {}}, {{}, {{}, {}, 
     {RGBColor[0, 0, 1], PointSize[0.006944444444444445], AbsoluteThickness[
      1.6], LineBox[CompressedData["
1:eJxd3HdYzf3/B/AkncoK2atIZSWzIjyJlmRlVIRoyCZKQlKdtvbe45zTPrtk
lNUpsjdJ3KnMQrc9ft2/8/p8ryv3P/f1uF6v917nKLScdq90VlRQUBAoKSj8
93/mv1X3Nqq5r8qcL5cG1FZrbtO5nkXWRnTEYE+90myy/l+eAfGZM1ZB3XPI
xtj+aviLbaZM+Xn4bnA/+tVEyvddgHc6XzmvREx8EYJYxrFme5m4GW58Drf1
B1O/JXY8Ur+tupaJL8G7PuOVLWYw7dlg+70S1W3hFMdyHHn17sZiU4r7rsCG
GVtNrMaRq1ZCs7neUMWfqd8W4w4oJqsMZ8qvxuAtm0bK+jLtrUFbXlyLiza5
ai1GNgzhVrcz5e3wVk02l+tO9cMekjn2oT08mPYdULXalO38kCm/Hs9jPrmP
G8qUd4TXvoQ+Lcz8YCPuH1LbfVnMeBMCfB9cYO8kN27q2h/fzRDWOEeb65A1
ndAeF/JA2YgZrxO0nL29AjoovmkLVmlvVM29xMzfVjQruGy5MomcuRUq50Rs
VgPTvnPX+W10xugX3rtdK5j2XaC2QBQ5bgiV13SF6ZCmOyrZzHhdcbp65Djn
BRTf5Ia2KL2+LruY9rd1zc/cBhuBu3rzQaZ9dzxvf7rAXDmX2nfHrM+zzF0L
mPnd3rW/mjsguNT9Cmc90/6Oruu9aSfmjagNCZzKzP8u6LRp2Kn8pv2fuQvt
x66GWX/PoPZ342wzf42FLe3Xxt14rrRkmMUZpn97MGDpmh8TmPMQuQdtg97F
B8uY+dqDiOifkznzyAZ78Zy7yVTnBrXnuxcX9nq0c7Wo/pt7sXfr3e3bmPXV
3If1hXPfBijS+Pfsg+/TRUGBmuSqfajdfqVCez/lq++H+Ob4scGnqL5N+yGz
G7N5fD3F+ftha6JfsHgRM34PBPobh+oZkpd7YO4Q1wsvXZn18EBHZbfbOTZU
X7sHeHPHtVwaxYz/QNf9FnkA9iaFp92OMuM/AHZQyqpaBWb8B/Ho+PU/yhbM
/jmIh3FzHrKY+b95EI5rBnPyeNSepmdX7/Hsml/lCYc7g9PYuyiu7gWNxk0a
+feY8XvBK1CppeU55fO98KvMcCtvCjP+QxAan13gXsuM/xCqt03eG1xD5TMP
Qbpq/CTuJ2b8h7Dk7PcKpT5UH7wx/Le+LLCWHOkN9uBFuZwNzH7xhtvYVQMD
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
fOnz4b11FOUrxSHS3bbsJTPeIXE4o39n8xI+1T8pDidKu3n0CmS+38XhQe7I
KaE61B/bODxuuLW/FmS3OIQ3919n1Uj994lDwx13P/a7JDr/cfgWcTPA/BbF
c+NgtLS8Qn0btVceBwXjl997vaD66uKQ9e7YyNBSym+Mwx/3HI8aZn464pDp
VZ0nW0hWiYfs63tH1lQ6jyPiUXA/a9TV5TR+g3iYzB9SoaZO9S+Kh2fzv9Fh
Zym+Lh6zF+3tZh5I9e2Ih8/K5FCZI3P+43FcbH/a4ic5Nh6a6zlXWfnM+Y+H
tpfq7lBV5vzH40Vc9/O9HCj/Zqd/8Lg9g8hNnflbU+NDVjHnPx5FllufmrOp
vl4J2G06dZSVHfVHMwEvSn4MC02n/BkJ+PgxfEmtAc2fRQIOsYRHrGOp/fUJ
aA4wDYqIovJ7EnDmVdnEq8x8+Seg+2y70Ks1lJ+YgLNZcZo1zeSiBPiNif5q
nkf9qUrANIdlCqyX5LsJWDxio7GVJ9XXmoB+1j9Yve9S+Z8J0LIw/qT8ieLq
iXC4cX0vm0/ltRMxpcp3jflEyjdKhOxofQbLhvKtEwGWdbzlRcrflIgB+9Rn
q2pR3CMR915bHDe3pv0VlAjLXyG7WbvIqYmYvMvCwlJM5fmJsO+7USckktq7
lIiQBhuZylLyw0ScUK17qHaI5vdtInT/uMOqN8UVkjCBo7FDrRvFNZLwuUXH
nv2U6tdLwtcLAeWWzHyYJOHUYRtxCHO/Lk/Cp/AJp83vUP+2JiFDJyKh9irZ
KwkaZu82sL4k0PlP6jqezCQoh99pM+tL7YmTkOUaXR8STa5JQmTqTY0bA6h/
9UnooauvavGCyrcnoV+To5tsD+UrJeOidqNCjSl5SDKW5s5IkW0mT0pG8KOL
i0MryUjGtd6KiirM+tsmQ2No0MSgX4l0/pOROb1wt/k96r9PMoR1JWfNm8iR
yYiK+P2InUP5uclIam83tVpH81ueDLW42oraU+S6ZDRpnXvEusec/2QkKjmO
WNKHOf/JmNwxM9iSuU9UUvDT6dk/gefII1LQr+zbTAtmPQxS8P63kp25CfV/
UQpmqIX6yWypP+tS0PrLMcJ8HnlHCq4MLbSUsSjft7O8/8ckc+Y8xqZgyK6J
J0KZ88VLwfjKx6Hmkyn/TAo2Nz3XCGLeu5spSOvf5s/+TfPR1OnLC74qD6T2
vnb2d1/DH5kquVcqAl/uCLdi1k8zFT42KzbJMqn8jFQYCWaUsC0obpGKpYl2
Q2W6VH59Kkx/NuWy9lD+nlTEOvU2kkVS3D8VyRP225g7UPnEVKTdGuHNWkb9
L0pFxZR/jrDdqHxVKq4dNp7PiiDfTcXFZ5eumN+Pp/OfikuBJmeqhbF0/lOh
ItWaynKiuHoaYksrLpl7U/vaaYhafW6cCtM/ozT4DSo7aL6d4tZpsJy3wZs9
kuKb0nDs3++h7FiKe6Sh9dKoxzI1igelwdzdZoSFATk1DT+0NUqCmf3JT4Pb
83lidi7FL6V1Xe+HafBubGkNbKT42zQIzc77mMuo/wrpcAgRzWGZUlwjHeVB
xitlHhTXS0fEZtedsmiySToCbl3zVmHWd3k63vy+PUp5HJXfmo4Fq+ccMveh
fK90cNpmKsmcyWHpaNj8emhQIOVnpmO86I+q+SeyOB3nv1jEsqZT/TXpYOfV
PzRXJNen49zgjWJZT6qvPR0792wdFDSHyitloJUv6Pa//T8kA4+sHxxk36b8
SRmwU9+9sNoijs5/BpYqR62pvknra5uBPzGVh83DyW4ZCK04u4CVQfk+GRh2
r3/V//ZLZEbX/uZmwOfk2O3myym/PAMNq/smsq3JdRnYpGEzIoRxYwZ2pdVa
sGZS/zoy0O6hoBvkRVbKxLWF30LY9uQ+mUhT1ujOvkTlh3TGVU/dZ+mSx2Ti
xqtsqbkN9W9SJr7PfXytejyVn5UJ99qK1zJzMjKxdXZckIxPtspEU45TG2sG
lbfNxMh8rVHmh8mOmUgIdTjE/oeZn0yoGMxoV15M7e/LxDy93F7s7RT3yYSY
t2wfeyk5MBNXBjqNklmSIzMx3rtytayS2k/uLH9gRRJrNcVzM2Ee+rCuui1G
7pJMJE/rkWf+gJnfTHQLGjQjyJ18IRN+/XctMS+OpvnunB/P9gGsm1Fy38+E
93hrK1YvijdmYpiamiW7O9X/OhNTfqnOko2g9jsy4WjcdlbGnP/fmXj//fRk
86NklSwoztnGZR2n9vtnIeDUYE9WFtU3IgvLznPt2d6Ur5OFQx2259nxNF6D
zvI+c4RsA8qfnYX29VZj2UrUv0VZcHv6bxC7mfpvkwWPOy6pgTzKX5cFh8qC
S4HllO+UhYqJySvZBZS/Iwuee3etVnM7KffBLOzBBEuZO8V9s7DqftBFs8FU
PiQLV04kOVR/jKT3IAvjk77EhH2JkDs9C5cbxCU9R5F5nU5K8grlh8gt7Gxf
HOGmJg2j9yIL08J+bQhMpfqqs/D86IZH5hnU/s0snBivMb3XNqrvcRaMrh+Y
rmxF+U1ZmHnm2iM1EfX/fRbaljSNVp0bTu9LFuxNLq1TDQmVWzEbEzWs81UL
gum9yab7jS33oGyEsrZfZwcF0PuTjTfKzgeUs07IPSEbt2+Nesf+QPEZ2cg2
7bY2uIni87KxurumAUvPn96nbAwIqZ6rFndM7pXZWJ7/YU2gsi+9V9m4O7rP
zYCC43K7ZGMat7iXyjFPer+yoXhs5gaVjANye2fjH5bnH9WFXvSeZaN98uxq
5bf75Y7IRs2dpCV9X+yk9y0by8ZcqFQZtkXu7GzYF3GqVFe60nuXDf8/EWtV
G/bJLc3G8Ku9J/ZS2EXvXzbS9s2z66PkLveVbBxaoGij4ruG3sNs9N0tHKbs
7yR3QzZ2y3Q53WFP72M2XEbdO6s6iNr7mI3HmwPzeqxbUfn//pkN7cOf21S/
msmtnIPnnwNUu9etpvczB8bCg0o9hiyWx4fl4FHUxyIW7OXWzoHyhUGsXqlu
cut3esy98z13HJbbKAchTukstasH5V6Yg7S1aqdZTNw6B1rVsU+VY4/LvSYH
H/qmxSsP95N7Uw6ilGp2smso7p4D/jvlGQFhZI8cWJXvNmYrBMp9NAcqB5bp
sIVBcgflwOOfEEt2Zqjc0Tlg6W4yDf4WJndqDiqef0oOLqU4JwdezjF3VPXD
5ebnYONkDROZV7TcFTlwU3M4rdwYKfelHCx1uGlsPitK7us5CL2wLJE1nPIf
5sBox1Av1pM4uV/k4E5tWDz7QJLcbzvne5fxJHNuotyfc/Dw9qUydluC3Aq5
qNBdoct+myy3Wi6MPZueXl2fIbdGLlIcZlu6pmfKPSoXb9PKT/n3yJJbLxeu
K+O3FMgoPi0XdldX9TJ7QnGTXFSvrkoM6p8jt1kujMJz9AKTs+Ve3ll/5NTb
zTEUt8/F9N33DvA45K258C5U/cU9yJF7V2f9274sN9/BldsrFz8ataY2ryL7
5WJaqlZPdixP7rBciNb8rm69Qo7PRaX17sctYQVyZ+Zi/5zX6RMViuQuyMXG
5DFVrzaQxblY8s3+Ofc0+Vwunhpd76+6pETumlwYzl64uXAj+XYuTneEKD50
4Mtdnwvlxu89E1PIzbmInu6o9IBDbs9Fn81mF1QmCuT+nosDzpuTauKFcivl
QcvxwZSHvUVy98mDnU7vYwn/kIfkoXDYdbOvemK5x+QheW9la8JkidyT8sCP
0lZZC/KsPMxaVrm69RoZefj6Utfg60mp3FZ52B1+zohrUSa3bR5ajMpUv1wh
O+ZBuS58eoLzKbnd8uC8aJ1pYlSF3Ps6y1vddfky/7TcPnl44fbQeLD6GbkD
82D1ZfyRB/fJkXlYUG/gPGf2WbmT86Ce5fDtYD3Fc/PwdPp6/UmW5+QuyUPR
3eyOOScq5S7Pw8DK/ca7J1fJfSEPVaeXJI7eRa7LQ74NS5g+7Lzc9zv73y9/
2+AYcmMers8y5Oi+Jb/OQ0GAhcnJKnJHZ3t/9idOmXJB7t95cPQdc9rzFFmF
g2hFPmft7oty9+fgv582b3xGHsHBpm0T7i2zvCS3DgexH3Pjv/iRDTjoMUyW
U3qaPJuDIyoFZqXKl+VexMGZFzYRXCuyDUf+/SaFvI6DxpDR57i9q+V24uDN
gJee82PIOzjIfhmSeiOEfJCDvn8yDrWNksnty8ETAzU/mSE5hIP0m5Hxu53I
sRyUjJ+p2cI4nYMPEWnd5nuQeRycMplqdsyULOTg0nWN2aVTyWc4qKj0ri8b
Rq7mYNaclUdaBpNvdvqP7fE/t6l/jzl4veaGZZsDuYmDNXPuKrTpk99zcHKV
h3bCHxr/Vw7itgjL/wSRFbnoOHT/WIseuRcXzjtaXY5l0vwO4kJLPb2y8gut
jyYXBhKr1cfGkydwsXzfC+UHnrS+M7h4+dRcuyqD9sM8Lq6yf4x1PUP7y4KL
pSjnLvej/biSC91Z3pHfHGg/r+dicmPpAN5JOg8uXAxxjjqe4EHnZw8XW388
XuRpT+fLm4u5+zVnGu6h8+zPRe8NTd9cN9P9EMFF8Hu7B27GhXIncqGhNcwv
6FCe3Nmd5VnD1qtMovu4iAs9vxVFsjkxcku5mFC9vrrnhyNyV3HhZVe+QrXD
m95/Lrrf7zE4cCx9PrvLRVX8wOiXbPrz1AYulHc41bs5cOn952JXkLXtleoS
ev+59PtIQrl/chHv+NlM5bVEbmUeDrQl9Kjde4refx6cEpaO4ymflXsYD359
lPo71lXKrc3D9e/GBfO55+XW56HqRvkezaYLchvxYOrVd6Jh0SW5F/KwYO2O
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
Pm+ppPj2MvxWkDjVulB8T9n/vq/9H351lzc=
       "]]}}, {}, {}, {}, {}}},
  AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
  Axes->{True, True},
  AxesLabel->{None, None},
  AxesOrigin->{0, 0},
  DisplayFunction->Identity,
  Frame->True,
  FrameLabel->{
    FormBox["\"Magnetic Field (G)\"", TraditionalForm], 
    FormBox["\"Intensity (a.u.)\"", TraditionalForm]},
  FrameTicks->FrontEndValueCache[{{Automatic, 
      Charting`ScaledFrameTicks[{Identity, Identity}]}, {Automatic, 
      Charting`ScaledFrameTicks[{Identity, Identity}]}}, {{
     Automatic, {{-0.2, 
        FormBox[
         TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {0.01, 0.}, {
         AbsoluteThickness[0.1]}}, {-0.1, 
        FormBox[
         TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {0.01, 0.}, {
         AbsoluteThickness[0.1]}}, {0., 
        FormBox[
         TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {0.01, 0.}, {
         AbsoluteThickness[0.1]}}, {0.1, 
        FormBox[
         TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {0.01, 0.}, {
         AbsoluteThickness[0.1]}}, {0.2, 
        FormBox[
         TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {0.01, 0.}, {
         AbsoluteThickness[0.1]}}, {0.3, 
        FormBox[
         TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {0.01, 0.}, {
         AbsoluteThickness[0.1]}}, {-0.3, 
        FormBox[
         TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {0.005, 0.}, {
         AbsoluteThickness[0.1]}}, {-0.28, 
        FormBox[
         TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {0.005, 0.}, {
         AbsoluteThickness[0.1]}}, {-0.26, 
        FormBox[
         TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {0.005, 0.}, {
         AbsoluteThickness[0.1]}}, {-0.24, 
        FormBox[
         TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {0.005, 0.}, {
         AbsoluteThickness[0.1]}}, {-0.22, 
        FormBox[
         TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {0.005, 0.}, {
         AbsoluteThickness[0.1]}}, {-0.18, 
        FormBox[
         TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {0.005, 0.}, {
         AbsoluteThickness[0.1]}}, {-0.16, 
        FormBox[
         TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {0.005, 0.}, {
         AbsoluteThickness[0.1]}}, {-0.14, 
        FormBox[
         TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {0.005, 0.}, {
         AbsoluteThickness[0.1]}}, {-0.12, 
        FormBox[
         TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {0.005, 0.}, {
         AbsoluteThickness[0.1]}}, {-0.08, 
        FormBox[
         TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {0.005, 0.}, {
         AbsoluteThickness[0.1]}}, {-0.06, 
        FormBox[
         TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {0.005, 0.}, {
         AbsoluteThickness[0.1]}}, {-0.04, 
        FormBox[
         TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {0.005, 0.}, {
         AbsoluteThickness[0.1]}}, {-0.02, 
        FormBox[
         TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {0.005, 0.}, {
         AbsoluteThickness[0.1]}}, {0.02, 
        FormBox[
         TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {0.005, 0.}, {
         AbsoluteThickness[0.1]}}, {0.04, 
        FormBox[
         TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {0.005, 0.}, {
         AbsoluteThickness[0.1]}}, {0.06, 
        FormBox[
         TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {0.005, 0.}, {
         AbsoluteThickness[0.1]}}, {0.08, 
        FormBox[
         TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {0.005, 0.}, {
         AbsoluteThickness[0.1]}}, {0.12, 
        FormBox[
         TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {0.005, 0.}, {
         AbsoluteThickness[0.1]}}, {0.14, 
        FormBox[
         TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {0.005, 0.}, {
         AbsoluteThickness[0.1]}}, {0.16, 
        FormBox[
         TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {0.005, 0.}, {
         AbsoluteThickness[0.1]}}, {0.18, 
        FormBox[
         TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {0.005, 0.}, {
         AbsoluteThickness[0.1]}}, {0.22, 
        FormBox[
         TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {0.005, 0.}, {
         AbsoluteThickness[0.1]}}, {0.24, 
        FormBox[
         TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {0.005, 0.}, {
         AbsoluteThickness[0.1]}}, {0.26, 
        FormBox[
         TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {0.005, 0.}, {
         AbsoluteThickness[0.1]}}, {0.28, 
        FormBox[
         TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {0.005, 0.}, {
         AbsoluteThickness[0.1]}}, {0.32, 
        FormBox[
         TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {0.005, 0.}, {
         AbsoluteThickness[0.1]}}, {0.34, 
        FormBox[
         TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {0.005, 0.}, {
         AbsoluteThickness[0.1]}}, {0.36, 
        FormBox[
         TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {0.005, 0.}, {
         AbsoluteThickness[0.1]}}, {0.38, 
        FormBox[
         TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {0.005, 0.}, {
         AbsoluteThickness[0.1]}}, {0.4, 
        FormBox[
         TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {0.005, 0.}, {
         AbsoluteThickness[0.1]}}}}, {Automatic, {{0., 
        FormBox[
         TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {0.01, 0.}, {
         AbsoluteThickness[0.1]}}, {2000., 
        FormBox[
         TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {0.01, 0.}, {
         AbsoluteThickness[0.1]}}, {4000., 
        FormBox[
         TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {0.01, 0.}, {
         AbsoluteThickness[0.1]}}, {6000., 
        FormBox[
         TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {0.01, 0.}, {
         AbsoluteThickness[0.1]}}, {-2000., 
        FormBox[
         TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {0.005, 0.}, {
         AbsoluteThickness[0.1]}}, {-1500., 
        FormBox[
         TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {0.005, 0.}, {
         AbsoluteThickness[0.1]}}, {-1000., 
        FormBox[
         TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {0.005, 0.}, {
         AbsoluteThickness[0.1]}}, {-500., 
        FormBox[
         TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {0.005, 0.}, {
         AbsoluteThickness[0.1]}}, {500., 
        FormBox[
         TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {0.005, 0.}, {
         AbsoluteThickness[0.1]}}, {1000., 
        FormBox[
         TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {0.005, 0.}, {
         AbsoluteThickness[0.1]}}, {1500., 
        FormBox[
         TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {0.005, 0.}, {
         AbsoluteThickness[0.1]}}, {2500., 
        FormBox[
         TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {0.005, 0.}, {
         AbsoluteThickness[0.1]}}, {3000., 
        FormBox[
         TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {0.005, 0.}, {
         AbsoluteThickness[0.1]}}, {3500., 
        FormBox[
         TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {0.005, 0.}, {
         AbsoluteThickness[0.1]}}, {4500., 
        FormBox[
         TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {0.005, 0.}, {
         AbsoluteThickness[0.1]}}, {5000., 
        FormBox[
         TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {0.005, 0.}, {
         AbsoluteThickness[0.1]}}, {5500., 
        FormBox[
         TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {0.005, 0.}, {
         AbsoluteThickness[0.1]}}, {6500., 
        FormBox[
         TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {0.005, 0.}, {
         AbsoluteThickness[0.1]}}, {7000., 
        FormBox[
         TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {0.005, 0.}, {
         AbsoluteThickness[0.1]}}, {7500., 
        FormBox[
         TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {0.005, 0.}, {
         AbsoluteThickness[0.1]}}, {8000., 
        FormBox[
         TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {0.005, 0.}, {
         AbsoluteThickness[0.1]}}}}}],
  GridLines->{None, None},
  GridLinesStyle->Directive[
    GrayLevel[0.5, 0.4]],
  ImagePadding->All,
  ImageSize->{757., Automatic},
  Method->{
   "DefaultBoundaryStyle" -> Automatic, "DefaultMeshStyle" -> 
    AbsolutePointSize[6], "ScalingFunctions" -> None, 
    "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
        (Identity[#]& )[
         Part[#, 1]], 
        (Identity[#]& )[
         Part[#, 2]]}& ), "CopiedValueFunction" -> ({
        (Identity[#]& )[
         Part[#, 1]], 
        (Identity[#]& )[
         Part[#, 2]]}& )}},
  PlotRange->{{0, 6000}, {-0.2116518003641483, 0.31502849351518913`}},
  PlotRangeClipping->True,
  PlotRangePadding->{{
     Scaled[0.02], 
     Scaled[0.02]}, {
     Scaled[0.05], 
     Scaled[0.05]}},
  Ticks->{Automatic, Automatic}]], "Output",
 CellChangeTimes->{{3.80750039968219*^9, 3.807500409737977*^9}, 
   3.8075004487259912`*^9, 3.8075004930249357`*^9, {3.807500556100242*^9, 
   3.8075006036103783`*^9}, {3.8075006432560453`*^9, 3.8075006647761364`*^9}},
 
 CellLabel->
  "Out[138]=",ExpressionUUID->"4498a932-dbc3-4c11-a4eb-6ab3c8d1abb5"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Export", "[", 
  RowBox[{
  "\"\<C:\\\\Users\\\\User\\\\Desktop\\\\1.png\>\"", ",", "%138", ",", 
   "\"\<PNG\>\""}], "]"}]], "Input",
 NumberMarks->False,
 CellLabel->
  "In[139]:=",ExpressionUUID->"f3dd2bc6-cb9c-4443-9088-9e26c63b23dd"],

Cell[BoxData["\<\"C:\\\\Users\\\\User\\\\Desktop\\\\1.png\"\>"], "Output",
 CellChangeTimes->{3.8075006869995174`*^9},
 CellLabel->
  "Out[139]=",ExpressionUUID->"dfabb957-8eb0-4cd0-9944-f6d4b4204896"]
}, Open  ]]
},
WindowSize->{1904, 997},
WindowMargins->{{-8, Automatic}, {Automatic, 0}},
FrontEndVersion->"11.3 for Microsoft Windows (64-bit) (March 6, 2018)",
StyleDefinitions->"Default.nb"
]
(* End of Notebook Content *)

(* Internal cache information *)
(*CellTagsOutline
CellTagsIndex->{}
*)
(*CellTagsIndex
CellTagsIndex->{}
*)
(*NotebookFileOutline
Notebook[{
Cell[558, 20, 54383, 1263, 19, "Input",ExpressionUUID->"e4987acd-e530-44cf-8707-04b646112b6b",
 CellOpen->False,
 InitializationCell->True],
Cell[CellGroupData[{
Cell[54966, 1287, 8623, 176, 19, "Input",ExpressionUUID->"0f086285-d963-41bd-82ef-cd66ee5b0fdb",
 CellOpen->False,
 InitializationCell->True],
Cell[63592, 1465, 3111, 59, 133, "Output",ExpressionUUID->"e7a8993e-87bd-4112-b8c3-e334086457f0"]
}, Open  ]],
Cell[CellGroupData[{
Cell[66740, 1529, 11768, 253, 19, "Input",ExpressionUUID->"f7777f90-74af-4529-b5ff-07a6efb70bef",
 CellOpen->False,
 InitializationCell->True],
Cell[78511, 1784, 5703, 101, 181, "Output",ExpressionUUID->"dda76f25-4f1f-4ae2-b079-fa37d55063d3"],
Cell[84217, 1887, 3620, 55, 507, "Output",ExpressionUUID->"18964852-b01c-44d5-9d88-8ee6f396198f"]
}, Open  ]],
Cell[CellGroupData[{
Cell[87874, 1947, 50466, 953, 19, "Input",ExpressionUUID->"08896e16-d9ac-4936-9217-7e8fe02e7fbc",
 CellOpen->False,
 InitializationCell->True],
Cell[138343, 2902, 15604, 334, 353, "Output",ExpressionUUID->"dc31775f-562b-41e7-ae6e-266e9812fc9e"]
}, Open  ]],
Cell[CellGroupData[{
Cell[153984, 3241, 699, 15, 67, "Input",ExpressionUUID->"cc6aaa52-772e-470c-b3b6-4696dff7782d"],
Cell[154686, 3258, 28475, 519, 73, "Output",ExpressionUUID->"3d54340a-b245-40dc-b590-120ec9bbca68"],
Cell[183164, 3779, 28552, 520, 73, "Output",ExpressionUUID->"2df7f581-4b37-427c-bf48-da39f5463fb4"]
}, Open  ]],
Cell[CellGroupData[{
Cell[211753, 4304, 1085, 29, 105, "Input",ExpressionUUID->"facc09e6-3d9c-4c19-a9de-bbcc056f9ab2"],
Cell[212841, 4335, 53616, 897, 227, "Output",ExpressionUUID->"410ee2c3-6ae8-49f7-81d7-4117342a50c4"]
}, Open  ]],
Cell[CellGroupData[{
Cell[266494, 5237, 743, 20, 28, "Input",ExpressionUUID->"eb11209d-7bb9-4148-9b14-cf7dc930b335"],
Cell[267240, 5259, 17171, 297, 234, "Output",ExpressionUUID->"bc22946e-5547-4c3c-a547-372208d40c86"]
}, Open  ]],
Cell[CellGroupData[{
Cell[284448, 5561, 562, 12, 28, "Input",ExpressionUUID->"e9427eda-bb81-41b8-9c5c-bd6b48d6a03e"],
Cell[285013, 5575, 77698, 1339, 495, "Output",ExpressionUUID->"4498a932-dbc3-4c11-a4eb-6ab3c8d1abb5"]
}, Open  ]],
Cell[CellGroupData[{
Cell[362748, 6919, 262, 7, 28, "Input",ExpressionUUID->"f3dd2bc6-cb9c-4443-9088-9e26c63b23dd"],
Cell[363013, 6928, 201, 3, 89, "Output",ExpressionUUID->"dfabb957-8eb0-4cd0-9944-f6d4b4204896"]
}, Open  ]]
}
]
*)

